{"id":"d76f8bbadce6837f6b0a5be4280668ad","_format":"hh-sol-build-info-1","solcVersion":"0.7.6","solcLongVersion":"0.7.6+commit.7338295f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-0.7/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../utils/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"},"@openzeppelin/contracts-0.7/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        // Check the signature length\n        if (signature.length != 65) {\n            revert(\"ECDSA: invalid signature length\");\n        }\n\n        // Divide the signature in r, s and v variables\n        bytes32 r;\n        bytes32 s;\n        uint8 v;\n\n        // ecrecover takes the signature parameters, and the only way to get them\n        // currently is to use assembly.\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            r := mload(add(signature, 0x20))\n            s := mload(add(signature, 0x40))\n            v := byte(0, mload(add(signature, 0x60)))\n        }\n\n        return recover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover-bytes32-bytes-} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (281): 0 < s < secp256k1n ÷ 2 + 1, and for v in (282): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        require(uint256(s) <= 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0, \"ECDSA: invalid signature 's' value\");\n        require(v == 27 || v == 28, \"ECDSA: invalid signature 'v' value\");\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        require(signer != address(0), \"ECDSA: invalid signature\");\n\n        return signer;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * replicates the behavior of the\n     * https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign[`eth_sign`]\n     * JSON-RPC method.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n}\n"},"@openzeppelin/contracts-0.7/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n"},"@openzeppelin/contracts-0.7/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"},"@openzeppelin/contracts-0.7/token/ERC20/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"},"@openzeppelin/contracts-0.7/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2 <0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts-0.7/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"},"contracts/BurnMessage.sol":{"content":"/*\n * Copyright (c) 2022, Circle Internet Financial Limited.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npragma solidity 0.7.6;\n\nimport \"./TypedMemView.sol\";\n\n/**\n * @title BurnMessage Library\n * @notice Library for formatted BurnMessages used by TokenMessenger.\n * @dev BurnMessage format:\n * Field                 Bytes      Type       Index\n * version               4          uint32     0\n * burnToken             32         bytes32    4\n * mintRecipient         32         bytes32    36\n * amount                32         uint256    68\n * messageSender         32         bytes32    100\n **/\nlibrary BurnMessage {\n    using TypedMemView for bytes;\n    using TypedMemView for bytes29;\n\n    uint8 private constant VERSION_INDEX = 0;\n    uint8 private constant VERSION_LEN = 4;\n    uint8 private constant BURN_TOKEN_INDEX = 4;\n    uint8 private constant BURN_TOKEN_LEN = 32;\n    uint8 private constant MINT_RECIPIENT_INDEX = 36;\n    uint8 private constant MINT_RECIPIENT_LEN = 32;\n    uint8 private constant AMOUNT_INDEX = 68;\n    uint8 private constant AMOUNT_LEN = 32;\n    uint8 private constant MSG_SENDER_INDEX = 100;\n    uint8 private constant MSG_SENDER_LEN = 32;\n    // 4 byte version + 32 bytes burnToken + 32 bytes mintRecipient + 32 bytes amount + 32 bytes messageSender\n    uint8 private constant BURN_MESSAGE_LEN = 132;\n\n    /**\n     * @notice Formats Burn message\n     * @param _version The message body version\n     * @param _burnToken The burn token address on source domain as bytes32\n     * @param _mintRecipient The mint recipient address as bytes32\n     * @param _amount The burn amount\n     * @param _messageSender The message sender\n     * @return Burn formatted message.\n     */\n    function _formatMessage(\n        uint32 _version,\n        bytes32 _burnToken,\n        bytes32 _mintRecipient,\n        uint256 _amount,\n        bytes32 _messageSender\n    ) internal pure returns (bytes memory) {\n        return\n            abi.encodePacked(\n                _version,\n                _burnToken,\n                _mintRecipient,\n                _amount,\n                _messageSender\n            );\n    }\n\n    /**\n     * @notice Retrieves the burnToken from a DepositForBurn BurnMessage\n     * @param _message The message\n     * @return sourceToken address as bytes32\n     */\n    function _getMessageSender(bytes29 _message)\n        internal\n        pure\n        returns (bytes32)\n    {\n        return _message.index(MSG_SENDER_INDEX, MSG_SENDER_LEN);\n    }\n\n    /**\n     * @notice Retrieves the burnToken from a DepositForBurn BurnMessage\n     * @param _message The message\n     * @return sourceToken address as bytes32\n     */\n    function _getBurnToken(bytes29 _message) internal pure returns (bytes32) {\n        return _message.index(BURN_TOKEN_INDEX, BURN_TOKEN_LEN);\n    }\n\n    /**\n     * @notice Retrieves the mintRecipient from a BurnMessage\n     * @param _message The message\n     * @return mintRecipient\n     */\n    function _getMintRecipient(bytes29 _message)\n        internal\n        pure\n        returns (bytes32)\n    {\n        return _message.index(MINT_RECIPIENT_INDEX, MINT_RECIPIENT_LEN);\n    }\n\n    /**\n     * @notice Retrieves the amount from a BurnMessage\n     * @param _message The message\n     * @return amount\n     */\n    function _getAmount(bytes29 _message) internal pure returns (uint256) {\n        return _message.indexUint(AMOUNT_INDEX, AMOUNT_LEN);\n    }\n\n    /**\n     * @notice Retrieves the version from a Burn message\n     * @param _message The message\n     * @return version\n     */\n    function _getVersion(bytes29 _message) internal pure returns (uint32) {\n        return uint32(_message.indexUint(VERSION_INDEX, VERSION_LEN));\n    }\n\n    /**\n     * @notice Reverts if burn message is malformed or invalid length\n     * @param _message The burn message as bytes29\n     */\n    function _validateBurnMessageFormat(bytes29 _message) internal pure {\n        require(_message.isValid(), \"Malformed message\");\n        require(_message.len() == BURN_MESSAGE_LEN, \"Invalid message length\");\n    }\n}"},"contracts/BurnMessageV2.sol":{"content":"/*\n * Copyright 2024 Circle Internet Group, Inc. All rights reserved.\n *\n * SPDX-License-Identifier: Apache-2.0\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npragma solidity 0.7.6;\n\nimport {TypedMemView} from \"./TypedMemView.sol\";\nimport {BurnMessage} from \"./BurnMessage.sol\";\n\n/**\n * @title BurnMessageV2 Library\n * @notice Library for formatted V2 BurnMessages used by TokenMessengerV2.\n * @dev BurnMessageV2 format:\n * Field                 Bytes      Type       Index\n * version               4          uint32     0\n * burnToken             32         bytes32    4\n * mintRecipient         32         bytes32    36\n * amount                32         uint256    68\n * messageSender         32         bytes32    100\n * maxFee                32         uint256    132\n * feeExecuted           32         uint256    164\n * expirationBlock       32         uint256    196\n * hookData              dynamic    bytes      228\n * @dev Additions from v1:\n * - maxFee\n * - feeExecuted\n * - expirationBlock\n * - hookData\n **/\nlibrary BurnMessageV2 {\n    using TypedMemView for bytes;\n    using TypedMemView for bytes29;\n    using BurnMessage for bytes29;\n\n    // Field indices\n    uint8 private constant MAX_FEE_INDEX = 132;\n    uint8 private constant FEE_EXECUTED_INDEX = 164;\n    uint8 private constant EXPIRATION_BLOCK_INDEX = 196;\n    uint8 private constant HOOK_DATA_INDEX = 228;\n\n    uint256 private constant EMPTY_FEE_EXECUTED = 0;\n    uint256 private constant EMPTY_EXPIRATION_BLOCK = 0;\n\n    /**\n     * @notice Formats a V2 burn message\n     * @param _version The message body version\n     * @param _burnToken The burn token address on the source domain, as bytes32\n     * @param _mintRecipient The mint recipient address as bytes32\n     * @param _amount The burn amount\n     * @param _messageSender The message sender\n     * @param _maxFee The maximum fee to be paid on destination domain\n     * @param _hookData Optional hook data for processing on the destination domain\n     * @return Formatted message bytes.\n     */\n    function _formatMessageForRelay(\n        uint32 _version,\n        bytes32 _burnToken,\n        bytes32 _mintRecipient,\n        uint256 _amount,\n        bytes32 _messageSender,\n        uint256 _maxFee,\n        bytes calldata _hookData\n    ) internal pure returns (bytes memory) {\n        return\n            abi.encodePacked(\n                _version,\n                _burnToken,\n                _mintRecipient,\n                _amount,\n                _messageSender,\n                _maxFee,\n                EMPTY_FEE_EXECUTED,\n                EMPTY_EXPIRATION_BLOCK,\n                _hookData\n            );\n    }\n\n    // @notice Returns _message's version field\n    function _getVersion(bytes29 _message) internal pure returns (uint32) {\n        return _message._getVersion();\n    }\n\n    // @notice Returns _message's burnToken field\n    function _getBurnToken(bytes29 _message) internal pure returns (bytes32) {\n        return _message._getBurnToken();\n    }\n\n    // @notice Returns _message's mintRecipient field\n    function _getMintRecipient(\n        bytes29 _message\n    ) internal pure returns (bytes32) {\n        return _message._getMintRecipient();\n    }\n\n    // @notice Returns _message's amount field\n    function _getAmount(bytes29 _message) internal pure returns (uint256) {\n        return _message._getAmount();\n    }\n\n    // @notice Returns _message's messageSender field\n    function _getMessageSender(\n        bytes29 _message\n    ) internal pure returns (bytes32) {\n        return _message._getMessageSender();\n    }\n\n    // @notice Returns _message's maxFee field\n    function _getMaxFee(bytes29 _message) internal pure returns (uint256) {\n        return _message.indexUint(MAX_FEE_INDEX, 32);\n    }\n\n    // @notice Returns _message's feeExecuted field\n    function _getFeeExecuted(bytes29 _message) internal pure returns (uint256) {\n        return _message.indexUint(FEE_EXECUTED_INDEX, 32);\n    }\n\n    // @notice Returns _message's expirationBlock field\n    function _getExpirationBlock(\n        bytes29 _message\n    ) internal pure returns (uint256) {\n        return _message.indexUint(EXPIRATION_BLOCK_INDEX, 32);\n    }\n\n    // @notice Returns _message's hookData field\n    function _getHookData(bytes29 _message) internal pure returns (bytes29) {\n        return\n            _message.slice(\n                HOOK_DATA_INDEX,\n                _message.len() - HOOK_DATA_INDEX,\n                0\n            );\n    }\n\n    /**\n     * @notice Reverts if burn message is malformed or invalid length\n     * @param _message The burn message as bytes29\n     */\n    function _validateBurnMessageFormat(bytes29 _message) internal pure {\n        require(_message.isValid(), \"Malformed message\");\n        require(\n            _message.len() >= HOOK_DATA_INDEX,\n            \"Invalid burn message: too short\"\n        );\n    }\n}"},"contracts/ReliefPools.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.7.6;\npragma abicoder v2;\n\nimport \"@openzeppelin/contracts-0.7/access/Ownable.sol\";\nimport \"@openzeppelin/contracts-0.7/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/contracts-0.7/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts-0.7/token/ERC20/SafeERC20.sol\";\nimport \"./BurnMessageV2.sol\";\nimport \"./TypedMemView.sol\";\n\n// CCTP v2 Interface for handling cross-chain messages\ninterface IMessageHandlerV2 {\n    /**\n     * @notice Handles an incoming unfinalized message from an IReceiverV2\n     * @dev Unfinalized messages have finality threshold values less than 2000\n     * @param sourceDomain The source domain of the message\n     * @param sender The sender of the message\n     * @param finalityThresholdExecuted The finality threshold at which the message was attested to\n     * @param messageBody The raw bytes of the message body\n     * @return success True, if successful; false, if not.\n     */\n    function handleReceiveUnfinalizedMessage(\n        uint32 sourceDomain,\n        bytes32 sender,\n        uint32 finalityThresholdExecuted,\n        bytes calldata messageBody\n    ) external returns (bool);\n\n    function handleReceiveFinalizedMessage(\n        uint32 sourceDomain,\n        bytes32 sender,\n        uint32 finalityThresholdExecuted,\n        bytes calldata messageBody\n    ) external returns (bool);\n}\n\n// Uncomment this line to use console.log\n// import \"hardhat/console.sol\";\n\ncontract ReliefPools is Ownable, IMessageHandlerV2 {\n    using ECDSA for bytes32;\n    using SafeERC20 for IERC20;\n    using BurnMessageV2 for bytes29;\n    using TypedMemView for bytes;\n    using TypedMemView for bytes29;\n    \n    address public adminAddress;\n    IERC20 public immutable usdcToken;\n    address public cctpMessageTransmitter; // CCTP Message Transmitter address\n    \n    uint256 public poolCounter;\n    \n    struct Beneficiary {\n        uint256 nullifier;\n        uint256 userIdentifier; // Self Protocol unique user id\n        address walletAddress;\n        uint256 amount; // usdc claimed\n        uint256 timestamp;\n    }\n\n    struct Donor {\n        uint256 id; // donor can claim twice, so we need to track the id per unique donation\n        address walletAddress;\n        uint256 amount; // usdc donated\n        uint256 timestamp;\n        bool isCrossChain; // whether this donation came via CCTP\n        uint32 sourceDomain; // CCTP source domain (6 for Base direct donations, actual domain for cross-chain)\n        string location; // lat:lng format (e.g., \"40.7128:-74.0060\")\n    }\n\n    enum DisasterTypeEnum {\n        Earthquake,\n        Flood,\n        Wildfire,\n        Warzone\n    }\n\n    enum ClassificationEnum {\n        Critical,\n        HighPriority\n    }\n\n    struct ReliefPool {\n        uint256 id;\n        DisasterTypeEnum disasterType;\n        ClassificationEnum classification;\n        string nationalityRequired; // ex. \"Sudanese\"\n        uint256 allocatedFundsPerPerson; // 100 usdc\n        uint256 totalBeneficiaries;\n        uint256 totalDonors;\n        uint256 totalAmountClaimed;\n        uint256 totalAmountDonated;\n        bool isActive;\n    }\n    \n    // Domain separator for EIP-712 signatures\n    bytes32 public immutable DOMAIN_SEPARATOR;\n    \n    // TypeHash for verification message (must match IdentityVerifier)\n    bytes32 public constant VERIFICATION_MESSAGE_TYPEHASH = keccak256(\n        \"VerificationMessage(address userAddress,uint256 nullifier,uint256 userIdentifier,string nationality,uint256 timestamp)\"\n    );\n    \n    // Storage mappings\n    mapping(uint256 => ReliefPool) public reliefPools;\n    mapping(uint256 => mapping(address => Beneficiary)) public poolBeneficiaries;\n    mapping(uint256 => mapping(address => Donor)) public poolDonors;\n    // SECURITY: Track claims by userIdentifier only (not nullifier + userIdentifier)\n    // This prevents multiple claims from the same person using different documents\n    mapping(uint256 => mapping(uint256 => bool)) public hasPersonClaimedFromPool; // poolId => userIdentifier => bool\n    mapping(uint256 => uint256[]) public personClaimedPools; // userIdentifier => poolIds[]\n    \n    // Events\n    event ReliefPoolCreated(\n        uint256 indexed poolId,\n        DisasterTypeEnum disasterType,\n        ClassificationEnum classification,\n        string nationalityRequired,\n        uint256 allocatedFundsPerPerson\n    );\n    \n    event FundsClaimed(\n        uint256 indexed poolId,\n        address indexed claimer,\n        address indexed recipient,\n        uint256 nullifier,\n        uint256 userIdentifier,\n        string nationality,\n        uint256 amount,\n        uint256 timestamp\n    );\n    \n    event DonationMade(\n        uint256 indexed poolId,\n        address indexed donor,\n        uint32 sourceDomain, // 6 for Base (direct donations), actual domain for cross-chain\n        uint256 amount,\n        uint256 timestamp,\n        string location // lat:lng format (e.g., \"40.7128:-74.0060\")\n    );\n    \n    event PoolStatusChanged(uint256 indexed poolId, bool isActive);\n    \n    // Custom errors (using revert with reason strings in 0.7.6)\n    // error InvalidPool();\n    // error PoolInactive();\n    // error InvalidSignature();\n    // error AlreadyClaimed();\n    // error NationalityMismatch(string nationality, string nationalityRequired);\n    // error InsufficientFunds();\n    // error InvalidAmount();\n    // error InvalidNationality();\n    // error InvalidRecipient();\n    // error UnauthorizedCaller();\n    // error InvalidMessageBody();\n    \n    constructor(\n        address _adminAddress, \n        address _usdcToken,\n        address _cctpMessageTransmitter\n    ) {\n        adminAddress = _adminAddress;\n        usdcToken = IERC20(_usdcToken);\n        cctpMessageTransmitter = _cctpMessageTransmitter;\n        transferOwnership(msg.sender);\n        \n        // Initialize DOMAIN_SEPARATOR\n        DOMAIN_SEPARATOR = keccak256(\n            abi.encode(\n                keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\n                keccak256(bytes(\"ReliefPools\")),\n                keccak256(bytes(\"1\")),\n                8453, // Base chain ID\n                address(this)\n            )\n        );\n    }\n    \n    /**\n     * @dev Modifier to ensure only CCTP Message Transmitter can call hook functions\n     */\n    modifier onlyCCTPTransmitter() {\n        require(msg.sender == cctpMessageTransmitter, \"UnauthorizedCaller\");\n        _;\n    }\n    \n    /**\n     * @dev Create a new relief pool\n     */\n    function createReliefPool(\n        DisasterTypeEnum disasterType,\n        ClassificationEnum classification,\n        string memory nationalityRequired,\n        uint256 allocatedFundsPerPerson\n    ) external onlyOwner returns (uint256) {\n        require(bytes(nationalityRequired).length > 0, \"InvalidNationality\");\n        require(allocatedFundsPerPerson > 0, \"InvalidAmount\");\n        \n        uint256 poolId = poolCounter++;\n        \n        reliefPools[poolId] = ReliefPool({\n            id: poolId,\n            disasterType: disasterType,\n            classification: classification,\n            nationalityRequired: nationalityRequired,\n            allocatedFundsPerPerson: allocatedFundsPerPerson,\n            totalBeneficiaries: 0,\n            totalDonors: 0,\n            totalAmountClaimed: 0,\n            totalAmountDonated: 0,\n            isActive: true\n        });\n        \n        emit ReliefPoolCreated(\n            poolId,\n            disasterType,\n            classification,\n            nationalityRequired,\n            allocatedFundsPerPerson\n        );\n        \n        return poolId;\n    }\n\n    // Not used for now, but required by the interface\n    function handleReceiveFinalizedMessage(\n        uint32 sourceDomain,\n        bytes32 sender,\n        uint32 finalityThresholdExecuted,\n        bytes calldata messageBody\n    ) external override returns (bool) {\n        return true;\n    }\n\n    /**\n     * @dev CCTP v2 hook function to handle cross-chain donations\n     * @param sourceDomain The source domain of the message\n     * @param sender The sender of the message (as bytes32)\n     * @param finalityThresholdExecuted The finality threshold at which the message was attested to\n     * @param messageBody The raw bytes of the message body containing poolId\n     */\n    function handleReceiveUnfinalizedMessage(\n        uint32 sourceDomain,\n        bytes32 sender,\n        uint32 finalityThresholdExecuted,\n        bytes calldata messageBody\n    ) external override onlyCCTPTransmitter returns (bool) {\n        try this._processCrossChainDonation(sourceDomain, sender, messageBody) {\n            return true;\n        } catch {\n            return false;\n        }\n    }\n    \n    /**\n     * @dev Internal function to process cross-chain donation\n     * @param sourceDomain The source domain of the message\n     * @param sender The sender of the message (as bytes32)\n     * @param messageBody The raw bytes containing the burn message structure\n     */\n    function _processCrossChainDonation(\n        uint32 sourceDomain,\n        bytes32 sender,\n        bytes calldata messageBody\n    ) external {\n        // Only allow the contract itself to call this (for try/catch)\n        require(msg.sender == address(this), \"Internal function only\");\n        \n        bytes29 _msg = messageBody.ref(0);\n        \n        // Validate message format\n        _msg._validateBurnMessageFormat();\n        \n        // Extract hook data\n        bytes29 hookDataView = _msg._getHookData();\n        require(hookDataView.len() > 0, \"No hook data provided\");\n        bytes memory hookData = hookDataView.clone();\n        \n        // Decode hook data: poolId and location\n        (uint256 poolId, string memory location) = abi.decode(hookData, (uint256, string));\n        \n        // Extract donation amount\n        uint256 donationAmount = _msg._getAmount();\n        \n        ReliefPool storage pool = reliefPools[poolId];\n        \n        // Validation checks\n        require(pool.id == poolId, \"InvalidPool\");\n        require(pool.isActive, \"PoolInactive\");\n        require(donationAmount > 0, \"InvalidAmount\");\n        \n        // Update pool state\n        pool.totalDonors++;\n        pool.totalAmountDonated += donationAmount;\n        \n        // Convert bytes32 sender to address (taking last 20 bytes)\n        address senderAddress = address(uint160(uint256(sender)));\n        \n        // Record cross-chain donor\n        poolDonors[poolId][senderAddress] = Donor({\n            id: pool.totalDonors,\n            walletAddress: senderAddress,\n            amount: donationAmount,\n            timestamp: block.timestamp,\n            isCrossChain: true,\n            sourceDomain: sourceDomain,\n            location: \"cross-chain\" // simplified for now\n        });\n        \n        emit DonationMade(\n            poolId,\n            senderAddress,\n            sourceDomain,\n            donationAmount,\n            block.timestamp,\n            \"cross-chain\"\n        );\n    }\n    \n    /**\n     * @dev Make a direct donation to a specific relief pool (on Base network)\n     */\n    function donate(uint256 poolId, uint256 amount, string memory location) external {\n        ReliefPool storage pool = reliefPools[poolId];\n        \n        require(pool.id == poolId, \"InvalidPool\");\n        require(pool.isActive, \"PoolInactive\");\n        require(amount > 0, \"InvalidAmount\");\n        \n        // Transfer USDC from donor to contract\n        usdcToken.safeTransferFrom(msg.sender, address(this), amount);\n        \n        // Update pool state\n        pool.totalDonors++;\n        pool.totalAmountDonated += amount;\n        \n        // Record direct donor\n        poolDonors[poolId][msg.sender] = Donor({\n            id: pool.totalDonors,\n            walletAddress: msg.sender,\n            amount: amount,\n            timestamp: block.timestamp,\n            isCrossChain: false,\n            sourceDomain: 6, // 6 for Base chain (direct donations)\n            location: location\n        });\n        \n        emit DonationMade(\n            poolId,\n            msg.sender,\n            6, // 6 for Base chain (direct donations)\n            amount,\n            block.timestamp,\n            location\n        );\n    }\n    \n    /**\n     * @dev Set CCTP Message Transmitter address (only owner)\n     */\n    function setCCTPMessageTransmitter(address _cctpMessageTransmitter) external onlyOwner {\n        cctpMessageTransmitter = _cctpMessageTransmitter;\n    }\n    \n    /**\n     * @dev Claim relief funds with admin signature verification\n     */\n    function claimRelief(\n        uint256 poolId,\n        uint256 nullifier,\n        uint256 userIdentifier,\n        string memory nationality,\n        uint256 timestamp,\n        address recipient,\n        bytes memory adminSignature\n    ) external {\n        ReliefPool storage pool = reliefPools[poolId];\n        \n        // Validation checks\n        require(pool.id == poolId, \"InvalidPool\");\n        require(pool.isActive, \"PoolInactive\");\n        require(!hasPersonClaimedFromPool[poolId][userIdentifier], \"AlreadyClaimed\");\n        require(recipient != address(0), \"InvalidRecipient\");\n        \n        // Verify nationality matches pool requirement\n        require(\n            keccak256(bytes(nationality)) == keccak256(bytes(pool.nationalityRequired)),\n            \"NationalityMismatch\"\n        );\n        \n        // Verify admin signature (still uses msg.sender as the verified user)\n        require(\n            _verifyAdminSignature(msg.sender, nullifier, userIdentifier, nationality, timestamp, adminSignature),\n            \"InvalidSignature\"\n        );\n        \n        // Check if pool has sufficient funds\n        uint256 claimAmount = pool.allocatedFundsPerPerson;\n        require(usdcToken.balanceOf(address(this)) >= claimAmount, \"InsufficientFunds\");\n        \n        // Update pool state\n        pool.totalBeneficiaries++;\n        pool.totalAmountClaimed += claimAmount;\n        \n        // Record beneficiary (using recipient address for token delivery)\n        poolBeneficiaries[poolId][recipient] = Beneficiary({\n            nullifier: nullifier,\n            userIdentifier: userIdentifier,\n            walletAddress: recipient,\n            amount: claimAmount,\n            timestamp: block.timestamp\n        });\n        \n        // Mark as claimed (using userIdentifier, not wallet address)\n        hasPersonClaimedFromPool[poolId][userIdentifier] = true;\n        personClaimedPools[userIdentifier].push(poolId);\n        \n        // Transfer funds to recipient\n        usdcToken.safeTransfer(recipient, claimAmount);\n        \n        emit FundsClaimed(\n            poolId,\n            msg.sender,\n            recipient,\n            nullifier,\n            userIdentifier,\n            nationality,\n            claimAmount,\n            block.timestamp\n        );\n    }\n    \n    /**\n     * @dev Claim relief funds to the same address (convenience function)\n     */\n    function claimReliefToSelf(\n        uint256 poolId,\n        uint256 nullifier,\n        uint256 userIdentifier,\n        string memory nationality,\n        uint256 timestamp,\n        bytes memory adminSignature\n    ) external {\n        this.claimRelief(poolId, nullifier, userIdentifier, nationality, timestamp, msg.sender, adminSignature);\n    }\n    \n    /**\n     * @dev Toggle pool active status\n     */\n    function togglePoolStatus(uint256 poolId) external onlyOwner {\n        ReliefPool storage pool = reliefPools[poolId];\n        require(pool.id == poolId, \"InvalidPool\");\n        \n        pool.isActive = !pool.isActive;\n        emit PoolStatusChanged(poolId, pool.isActive);\n    }\n    \n    /**\n     * @dev Verify admin signature for relief claim\n     */\n    function _verifyAdminSignature(\n        address userAddress,\n        uint256 nullifier,\n        uint256 userIdentifier,\n        string memory nationality,\n        uint256 timestamp,\n        bytes memory signature\n    ) internal view returns (bool) {\n        bytes32 structHash = keccak256(\n            abi.encode(\n                VERIFICATION_MESSAGE_TYPEHASH,\n                userAddress,\n                nullifier,\n                userIdentifier,\n                keccak256(bytes(nationality)),\n                timestamp\n            )\n        );\n        \n        bytes32 digest = keccak256(\n            abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR, structHash)\n        );\n        \n        address signer = digest.recover(signature);\n        return signer == adminAddress;\n    }\n    \n    /**\n     * @dev Get relief pool information\n     */\n    function getReliefPool(uint256 poolId) external view returns (ReliefPool memory) {\n        return reliefPools[poolId];\n    }\n    \n    /**\n     * @dev Get beneficiary information for a pool\n     */\n    function getBeneficiary(uint256 poolId, address beneficiary) external view returns (Beneficiary memory) {\n        return poolBeneficiaries[poolId][beneficiary];\n    }\n    \n    /**\n     * @dev Get donor information for a pool\n     */\n    function getDonor(uint256 poolId, address donor) external view returns (Donor memory) {\n        return poolDonors[poolId][donor];\n    }\n    \n    /**\n     * @dev Check if person has claimed from a specific pool using userIdentifier\n     */\n    function checkPersonClaimedFromPool(uint256 poolId, uint256 nullifier, uint256 userIdentifier) external view returns (bool) {\n        // Note: nullifier parameter kept for backward compatibility but not used\n        return hasPersonClaimedFromPool[poolId][userIdentifier];\n    }\n    \n    /**\n     * @dev Get all pools a person has claimed from using userIdentifier\n     */\n    function getPersonClaimedPools(uint256 nullifier, uint256 userIdentifier) external view returns (uint256[] memory) {\n        // Note: nullifier parameter kept for backward compatibility but not used\n        return personClaimedPools[userIdentifier];\n    }\n\n    /**\n     * @dev Verify admin signature for relief claim\n     */\n    function verifyAdminSignature(\n        address userAddress,\n        uint256 nullifier,\n        uint256 userIdentifier,\n        string memory nationality,\n        uint256 timestamp,\n        bytes memory adminSignature\n    ) external view returns (bool) {\n      return _verifyAdminSignature(userAddress, nullifier, userIdentifier, nationality, timestamp, adminSignature);\n    }\n    \n    /**\n     * @dev Get contract USDC balance\n     */\n    function getContractBalance() external view returns (uint256) {\n        return usdcToken.balanceOf(address(this));\n    }\n    \n    /**\n     * @dev Emergency withdraw (only owner)\n     */\n    function emergencyWithdraw(uint256 amount) external onlyOwner {\n        usdcToken.safeTransfer(adminAddress, amount);\n    }\n    \n    /**\n     * @dev Get total number of pools\n     */\n    function getTotalPools() external view returns (uint256) {\n        return poolCounter;\n    }\n}\n"},"contracts/TypedMemView.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity >=0.5.10 <0.8.0;\n\nimport {SafeMath} from \"@openzeppelin/contracts-0.7/math/SafeMath.sol\";\n\nlibrary TypedMemView {\n    using SafeMath for uint256;\n\n    // Why does this exist?\n    // the solidity `bytes memory` type has a few weaknesses.\n    // 1. You can't index ranges effectively\n    // 2. You can't slice without copying\n    // 3. The underlying data may represent any type\n    // 4. Solidity never deallocates memory, and memory costs grow\n    //    superlinearly\n\n    // By using a memory view instead of a `bytes memory` we get the following\n    // advantages:\n    // 1. Slices are done on the stack, by manipulating the pointer\n    // 2. We can index arbitrary ranges and quickly convert them to stack types\n    // 3. We can insert type info into the pointer, and typecheck at runtime\n\n    // This makes `TypedMemView` a useful tool for efficient zero-copy\n    // algorithms.\n\n    // Why bytes29?\n    // We want to avoid confusion between views, digests, and other common\n    // types so we chose a large and uncommonly used odd number of bytes\n    //\n    // Note that while bytes are left-aligned in a word, integers and addresses\n    // are right-aligned. This means when working in assembly we have to\n    // account for the 3 unused bytes on the righthand side\n    //\n    // First 5 bytes are a type flag.\n    // - ff_ffff_fffe is reserved for unknown type.\n    // - ff_ffff_ffff is reserved for invalid types/errors.\n    // next 12 are memory address\n    // next 12 are len\n    // bottom 3 bytes are empty\n\n    // Assumptions:\n    // - non-modification of memory.\n    // - No Solidity updates\n    // - - wrt free mem point\n    // - - wrt bytes representation in memory\n    // - - wrt memory addressing in general\n\n    // Usage:\n    // - create type constants\n    // - use `assertType` for runtime type assertions\n    // - - unfortunately we can't do this at compile time yet :(\n    // - recommended: implement modifiers that perform type checking\n    // - - e.g.\n    // - - `uint40 constant MY_TYPE = 3;`\n    // - - ` modifer onlyMyType(bytes29 myView) { myView.assertType(MY_TYPE); }`\n    // - instantiate a typed view from a bytearray using `ref`\n    // - use `index` to inspect the contents of the view\n    // - use `slice` to create smaller views into the same memory\n    // - - `slice` can increase the offset\n    // - - `slice can decrease the length`\n    // - - must specify the output type of `slice`\n    // - - `slice` will return a null view if you try to overrun\n    // - - make sure to explicitly check for this with `notNull` or `assertType`\n    // - use `equal` for typed comparisons.\n\n\n    // The null view\n    bytes29 public constant NULL = hex\"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\";\n    // Mask a low uint96\n    uint256 constant LOW_12_MASK = 0xffffffffffffffffffffffff;\n    // Shift constants\n    uint8 constant SHIFT_TO_LEN = 24;\n    uint8 constant SHIFT_TO_LOC = 96 + 24;\n    uint8 constant SHIFT_TO_TYPE = 96 + 96 + 24;\n    // For nibble encoding\n    bytes private constant NIBBLE_LOOKUP = \"0123456789abcdef\";\n\n    /**\n     * @notice Returns the encoded hex character that represents the lower 4 bits of the argument.\n     * @param _byte The byte\n     * @return _char The encoded hex character\n     */\n    function nibbleHex(uint8 _byte) internal pure returns (uint8 _char) {\n        uint8 _nibble = _byte & 0x0f; // keep bottom 4, 0 top 4\n        _char = uint8(NIBBLE_LOOKUP[_nibble]);\n    }\n    /**\n     * @notice      Returns a uint16 containing the hex-encoded byte.\n     * @param _b    The byte\n     * @return      encoded - The hex-encoded byte\n     */\n    function byteHex(uint8 _b) internal pure returns (uint16 encoded) {\n        encoded |= nibbleHex(_b >> 4); // top 4 bits\n        encoded <<= 8;\n        encoded |= nibbleHex(_b); // lower 4 bits\n    }\n\n    /**\n     * @notice      Encodes the uint256 to hex. `first` contains the encoded top 16 bytes.\n     *              `second` contains the encoded lower 16 bytes.\n     *\n     * @param _b    The 32 bytes as uint256\n     * @return      first - The top 16 bytes\n     * @return      second - The bottom 16 bytes\n     */\n    function encodeHex(uint256 _b) internal pure returns (uint256 first, uint256 second) {\n        for (uint8 i = 31; i > 15; i -= 1) {\n            uint8 _byte = uint8(_b >> (i * 8));\n            first |= byteHex(_byte);\n            if (i != 16) {\n                first <<= 16;\n            }\n        }\n\n        // abusing underflow here =_=\n        for (uint8 i = 15; i < 255 ; i -= 1) {\n            uint8 _byte = uint8(_b >> (i * 8));\n            second |= byteHex(_byte);\n            if (i != 0) {\n                second <<= 16;\n            }\n        }\n    }\n\n    /**\n     * @notice          Changes the endianness of a uint256.\n     * @dev             https://graphics.stanford.edu/~seander/bithacks.html#ReverseParallel\n     * @param _b        The unsigned integer to reverse\n     * @return          v - The reversed value\n     */\n    function reverseUint256(uint256 _b) internal pure returns (uint256 v) {\n        v = _b;\n\n        // swap bytes\n        v = ((v >> 8) & 0x00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF) |\n            ((v & 0x00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF) << 8);\n        // swap 2-byte long pairs\n        v = ((v >> 16) & 0x0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF) |\n            ((v & 0x0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF) << 16);\n        // swap 4-byte long pairs\n        v = ((v >> 32) & 0x00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF) |\n            ((v & 0x00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF) << 32);\n        // swap 8-byte long pairs\n        v = ((v >> 64) & 0x0000000000000000FFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF) |\n            ((v & 0x0000000000000000FFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF) << 64);\n        // swap 16-byte long pairs\n        v = (v >> 128) | (v << 128);\n    }\n\n    /**\n     * @notice      Create a mask with the highest `_len` bits set.\n     * @param _len  The length\n     * @return      mask - The mask\n     */\n    function leftMask(uint8 _len) private pure returns (uint256 mask) {\n        // ugly. redo without assembly?\n        assembly {\n            // solium-disable-previous-line security/no-inline-assembly\n            mask := sar(\n                sub(_len, 1),\n                0x8000000000000000000000000000000000000000000000000000000000000000\n            )\n        }\n    }\n\n    /**\n     * @notice      Return the null view.\n     * @return      bytes29 - The null view\n     */\n    function nullView() internal pure returns (bytes29) {\n        return NULL;\n    }\n\n    /**\n     * @notice      Check if the view is null.\n     * @return      bool - True if the view is null\n     */\n    function isNull(bytes29 memView) internal pure returns (bool) {\n        return memView == NULL;\n    }\n\n    /**\n     * @notice      Check if the view is not null.\n     * @return      bool - True if the view is not null\n     */\n    function notNull(bytes29 memView) internal pure returns (bool) {\n        return !isNull(memView);\n    }\n\n    /**\n     * @notice          Check if the view is of a valid type and points to a valid location\n     *                  in memory.\n     * @dev             We perform this check by examining solidity's unallocated memory\n     *                  pointer and ensuring that the view's upper bound is less than that.\n     * @param memView   The view\n     * @return          ret - True if the view is valid\n     */\n    function isValid(bytes29 memView) internal pure returns (bool ret) {\n        if (typeOf(memView) == 0xffffffffff) {return false;}\n        uint256 _end = end(memView);\n        assembly {\n            // solhint-disable-previous-line no-inline-assembly\n            ret := iszero(gt(_end, mload(0x40)))\n        }\n    }\n\n    /**\n     * @notice          Require that a typed memory view be valid.\n     * @dev             Returns the view for easy chaining.\n     * @param memView   The view\n     * @return          bytes29 - The validated view\n     */\n    function assertValid(bytes29 memView) internal pure returns (bytes29) {\n        require(isValid(memView), \"Validity assertion failed\");\n        return memView;\n    }\n\n    /**\n     * @notice          Return true if the memview is of the expected type. Otherwise false.\n     * @param memView   The view\n     * @param _expected The expected type\n     * @return          bool - True if the memview is of the expected type\n     */\n    function isType(bytes29 memView, uint40 _expected) internal pure returns (bool) {\n        return typeOf(memView) == _expected;\n    }\n\n    /**\n     * @notice          Require that a typed memory view has a specific type.\n     * @dev             Returns the view for easy chaining.\n     * @param memView   The view\n     * @param _expected The expected type\n     * @return          bytes29 - The view with validated type\n     */\n    function assertType(bytes29 memView, uint40 _expected) internal pure returns (bytes29) {\n        if (!isType(memView, _expected)) {\n            (, uint256 g) = encodeHex(uint256(typeOf(memView)));\n            (, uint256 e) = encodeHex(uint256(_expected));\n            string memory err = string(\n                abi.encodePacked(\n                    \"Type assertion failed. Got 0x\",\n                    uint80(g),\n                    \". Expected 0x\",\n                    uint80(e)\n                )\n            );\n            revert(err);\n        }\n        return memView;\n    }\n\n    /**\n     * @notice          Return an identical view with a different type.\n     * @param memView   The view\n     * @param _newType  The new type\n     * @return          newView - The new view with the specified type\n     */\n    function castTo(bytes29 memView, uint40 _newType) internal pure returns (bytes29 newView) {\n        // then | in the new type\n        uint256 _typeShift = SHIFT_TO_TYPE;\n        uint256 _typeBits = 40;\n        assembly {\n            // solium-disable-previous-line security/no-inline-assembly\n            // shift off the top 5 bytes\n            newView := or(newView, shr(_typeBits, shl(_typeBits, memView)))\n            newView := or(newView, shl(_typeShift, _newType))\n        }\n    }\n\n    /**\n     * @notice          Unsafe raw pointer construction. This should generally not be called\n     *                  directly. Prefer `ref` wherever possible.\n     * @dev             Unsafe raw pointer construction. This should generally not be called\n     *                  directly. Prefer `ref` wherever possible.\n     * @param _type     The type\n     * @param _loc      The memory address\n     * @param _len      The length\n     * @return          newView - The new view with the specified type, location and length\n     */\n    function unsafeBuildUnchecked(uint256 _type, uint256 _loc, uint256 _len) private pure returns (bytes29 newView) {\n        uint256 _uint96Bits = 96;\n        uint256 _emptyBits = 24;\n        assembly {\n            // solium-disable-previous-line security/no-inline-assembly\n            newView := shl(_uint96Bits, or(newView, _type)) // insert type\n            newView := shl(_uint96Bits, or(newView, _loc))  // insert loc\n            newView := shl(_emptyBits, or(newView, _len))  // empty bottom 3 bytes\n        }\n    }\n\n    /**\n     * @notice          Instantiate a new memory view. This should generally not be called\n     *                  directly. Prefer `ref` wherever possible.\n     * @dev             Instantiate a new memory view. This should generally not be called\n     *                  directly. Prefer `ref` wherever possible.\n     * @param _type     The type\n     * @param _loc      The memory address\n     * @param _len      The length\n     * @return          newView - The new view with the specified type, location and length\n     */\n    function build(uint256 _type, uint256 _loc, uint256 _len) internal pure returns (bytes29 newView) {\n        uint256 _end = _loc.add(_len);\n        assembly {\n            // solium-disable-previous-line security/no-inline-assembly\n            if gt(_end, mload(0x40)) {\n                _end := 0\n            }\n        }\n        if (_end == 0) {\n            return NULL;\n        }\n        newView = unsafeBuildUnchecked(_type, _loc, _len);\n    }\n\n    /**\n     * @notice          Instantiate a memory view from a byte array.\n     * @dev             Note that due to Solidity memory representation, it is not possible to\n     *                  implement a deref, as the `bytes` type stores its len in memory.\n     * @param arr       The byte array\n     * @param newType   The type\n     * @return          bytes29 - The memory view\n     */\n    function ref(bytes memory arr, uint40 newType) internal pure returns (bytes29) {\n        uint256 _len = arr.length;\n\n        uint256 _loc;\n        assembly {\n            // solium-disable-previous-line security/no-inline-assembly\n            _loc := add(arr, 0x20)  // our view is of the data, not the struct\n        }\n\n        return build(newType, _loc, _len);\n    }\n\n    /**\n     * @notice          Return the associated type information.\n     * @param memView   The memory view\n     * @return          _type - The type associated with the view\n     */\n    function typeOf(bytes29 memView) internal pure returns (uint40 _type) {\n        uint256 _shift = SHIFT_TO_TYPE;\n        assembly {\n            // solium-disable-previous-line security/no-inline-assembly\n            _type := shr(_shift, memView) // shift out lower 27 bytes\n        }\n    }\n\n    /**\n     * @notice          Optimized type comparison. Checks that the 5-byte type flag is equal.\n     * @param left      The first view\n     * @param right     The second view\n     * @return          bool - True if the 5-byte type flag is equal\n     */\n    function sameType(bytes29 left, bytes29 right) internal pure returns (bool) {\n        return (left ^ right) >> SHIFT_TO_TYPE == 0;\n    }\n\n    /**\n     * @notice          Return the memory address of the underlying bytes.\n     * @param memView   The view\n     * @return          _loc - The memory address\n     */\n    function loc(bytes29 memView) internal pure returns (uint96 _loc) {\n        uint256 _mask = LOW_12_MASK;  // assembly can't use globals\n        uint256 _shift = SHIFT_TO_LOC;\n        assembly {\n            // solium-disable-previous-line security/no-inline-assembly\n            _loc := and(shr(_shift, memView), _mask)\n        }\n    }\n\n    /**\n     * @notice          The number of memory words this memory view occupies, rounded up.\n     * @param memView   The view\n     * @return          uint256 - The number of memory words\n     */\n    function words(bytes29 memView) internal pure returns (uint256) {\n        return uint256(len(memView)).add(31) / 32;\n    }\n\n    /**\n     * @notice          The in-memory footprint of a fresh copy of the view.\n     * @param memView   The view\n     * @return          uint256 - The in-memory footprint of a fresh copy of the view.\n     */\n    function footprint(bytes29 memView) internal pure returns (uint256) {\n        return words(memView) * 32;\n    }\n\n    /**\n     * @notice          The number of bytes of the view.\n     * @param memView   The view\n     * @return          _len - The length of the view\n     */\n    function len(bytes29 memView) internal pure returns (uint96 _len) {\n        uint256 _mask = LOW_12_MASK;  // assembly can't use globals\n        uint256 _emptyBits = 24;\n        assembly {\n            // solium-disable-previous-line security/no-inline-assembly\n            _len := and(shr(_emptyBits, memView), _mask)\n        }\n    }\n\n    /**\n     * @notice          Returns the endpoint of `memView`.\n     * @param memView   The view\n     * @return          uint256 - The endpoint of `memView`\n     */\n    function end(bytes29 memView) internal pure returns (uint256) {\n        return loc(memView) + len(memView);\n    }\n\n    /**\n     * @notice          Safe slicing without memory modification.\n     * @param memView   The view\n     * @param _index    The start index\n     * @param _len      The length\n     * @param newType   The new type\n     * @return          bytes29 - The new view\n     */\n    function slice(bytes29 memView, uint256 _index, uint256 _len, uint40 newType) internal pure returns (bytes29) {\n        uint256 _loc = loc(memView);\n\n        // Ensure it doesn't overrun the view\n        if (_loc.add(_index).add(_len) > end(memView)) {\n            return NULL;\n        }\n\n        _loc = _loc.add(_index);\n        return build(newType, _loc, _len);\n    }\n\n    /**\n     * @notice          Shortcut to `slice`. Gets a view representing the first `_len` bytes.\n     * @param memView   The view\n     * @param _len      The length\n     * @param newType   The new type\n     * @return          bytes29 - The new view\n     */\n    function prefix(bytes29 memView, uint256 _len, uint40 newType) internal pure returns (bytes29) {\n        return slice(memView, 0, _len, newType);\n    }\n\n    /**\n     * @notice          Shortcut to `slice`. Gets a view representing the last `_len` byte.\n     * @param memView   The view\n     * @param _len      The length\n     * @param newType   The new type\n     * @return          bytes29 - The new view\n     */\n    function postfix(bytes29 memView, uint256 _len, uint40 newType) internal pure returns (bytes29) {\n        return slice(memView, uint256(len(memView)).sub(_len), _len, newType);\n    }\n\n    /**\n     * @notice          Construct an error message for an indexing overrun.\n     * @param _loc      The memory address\n     * @param _len      The length\n     * @param _index    The index\n     * @param _slice    The slice where the overrun occurred\n     * @return          err - The err\n     */\n    function indexErrOverrun(\n        uint256 _loc,\n        uint256 _len,\n        uint256 _index,\n        uint256 _slice\n    ) internal pure returns (string memory err) {\n        (, uint256 a) = encodeHex(_loc);\n        (, uint256 b) = encodeHex(_len);\n        (, uint256 c) = encodeHex(_index);\n        (, uint256 d) = encodeHex(_slice);\n        err = string(\n            abi.encodePacked(\n                \"TypedMemView/index - Overran the view. Slice is at 0x\",\n                uint48(a),\n                \" with length 0x\",\n                uint48(b),\n                \". Attempted to index at offset 0x\",\n                uint48(c),\n                \" with length 0x\",\n                uint48(d),\n                \".\"\n            )\n        );\n    }\n\n    /**\n     * @notice          Load up to 32 bytes from the view onto the stack.\n     * @dev             Returns a bytes32 with only the `_bytes` highest bytes set.\n     *                  This can be immediately cast to a smaller fixed-length byte array.\n     *                  To automatically cast to an integer, use `indexUint`.\n     * @param memView   The view\n     * @param _index    The index\n     * @param _bytes    The bytes\n     * @return          result - The 32 byte result\n     */\n    function index(bytes29 memView, uint256 _index, uint8 _bytes) internal pure returns (bytes32 result) {\n        if (_bytes == 0) {return bytes32(0);}\n        if (_index.add(_bytes) > len(memView)) {\n            revert(indexErrOverrun(loc(memView), len(memView), _index, uint256(_bytes)));\n        }\n        require(_bytes <= 32, \"TypedMemView/index - Attempted to index more than 32 bytes\");\n\n        uint8 bitLength = _bytes * 8;\n        uint256 _loc = loc(memView);\n        uint256 _mask = leftMask(bitLength);\n        assembly {\n            // solium-disable-previous-line security/no-inline-assembly\n            result := and(mload(add(_loc, _index)), _mask)\n        }\n    }\n\n    /**\n     * @notice          Parse an unsigned integer from the view at `_index`.\n     * @dev             Requires that the view have >= `_bytes` bytes following that index.\n     * @param memView   The view\n     * @param _index    The index\n     * @param _bytes    The bytes\n     * @return          result - The unsigned integer\n     */\n    function indexUint(bytes29 memView, uint256 _index, uint8 _bytes) internal pure returns (uint256 result) {\n        return uint256(index(memView, _index, _bytes)) >> ((32 - _bytes) * 8);\n    }\n\n    /**\n     * @notice          Parse an unsigned integer from LE bytes.\n     * @param memView   The view\n     * @param _index    The index\n     * @param _bytes    The bytes\n     * @return          result - The unsigned integer\n     */\n    function indexLEUint(bytes29 memView, uint256 _index, uint8 _bytes) internal pure returns (uint256 result) {\n        return reverseUint256(uint256(index(memView, _index, _bytes)));\n    }\n\n    /**\n     * @notice          Parse an address from the view at `_index`. Requires that the view have >= 20 bytes\n     *                  following that index.\n     * @param memView   The view\n     * @param _index    The index\n     * @return          address - The address\n     */\n    function indexAddress(bytes29 memView, uint256 _index) internal pure returns (address) {\n        return address(uint160(indexUint(memView, _index, 20)));\n    }\n\n    /**\n     * @notice          Return the keccak256 hash of the underlying memory\n     * @param memView   The view\n     * @return          digest - The keccak256 hash of the underlying memory\n     */\n    function keccak(bytes29 memView) internal pure returns (bytes32 digest) {\n        uint256 _loc = loc(memView);\n        uint256 _len = len(memView);\n        assembly {\n            // solium-disable-previous-line security/no-inline-assembly\n            digest := keccak256(_loc, _len)\n        }\n    }\n\n    /**\n     * @notice          Return the sha2 digest of the underlying memory.\n     * @dev             We explicitly deallocate memory afterwards.\n     * @param memView   The view\n     * @return          digest - The sha2 hash of the underlying memory\n     */\n    function sha2(bytes29 memView) internal view returns (bytes32 digest) {\n        uint256 _loc = loc(memView);\n        uint256 _len = len(memView);\n\n        bool res;\n        assembly {\n            // solium-disable-previous-line security/no-inline-assembly\n            let ptr := mload(0x40)\n            res := staticcall(gas(), 2, _loc, _len, ptr, 0x20) // sha2 #1\n            digest := mload(ptr)\n        }\n        require(res, \"sha2 OOG\");\n    }\n\n    /**\n     * @notice          Implements bitcoin's hash160 (rmd160(sha2()))\n     * @param memView   The pre-image\n     * @return          digest - the Digest\n     */\n    function hash160(bytes29 memView) internal view returns (bytes20 digest) {\n        uint256 _loc = loc(memView);\n        uint256 _len = len(memView);\n        bool res;\n        assembly {\n            // solium-disable-previous-line security/no-inline-assembly\n            let ptr := mload(0x40)\n            res := staticcall(gas(), 2, _loc, _len, ptr, 0x20) // sha2\n            res := and(res, staticcall(gas(), 3, ptr, 0x20, ptr, 0x20)) // rmd160\n            digest := mload(add(ptr, 0xc)) // return value is 0-prefixed.\n        }\n        require(res, \"hash160 OOG\");\n    }\n\n    /**\n     * @notice          Implements bitcoin's hash256 (double sha2)\n     * @param memView   A view of the preimage\n     * @return          digest - the Digest\n     */\n    function hash256(bytes29 memView) internal view returns (bytes32 digest) {\n        uint256 _loc = loc(memView);\n        uint256 _len = len(memView);\n        bool res;\n        assembly {\n            // solium-disable-previous-line security/no-inline-assembly\n            let ptr := mload(0x40)\n            res := staticcall(gas(), 2, _loc, _len, ptr, 0x20) // sha2 #1\n            res := and(res, staticcall(gas(), 2, ptr, 0x20, ptr, 0x20)) // sha2 #2\n            digest := mload(ptr)\n        }\n        require(res, \"hash256 OOG\");\n    }\n\n    /**\n     * @notice          Return true if the underlying memory is equal. Else false.\n     * @param left      The first view\n     * @param right     The second view\n     * @return          bool - True if the underlying memory is equal\n     */\n    function untypedEqual(bytes29 left, bytes29 right) internal pure returns (bool) {\n        return (loc(left) == loc(right) && len(left) == len(right)) || keccak(left) == keccak(right);\n    }\n\n    /**\n     * @notice          Return false if the underlying memory is equal. Else true.\n     * @param left      The first view\n     * @param right     The second view\n     * @return          bool - False if the underlying memory is equal\n     */\n    function untypedNotEqual(bytes29 left, bytes29 right) internal pure returns (bool) {\n        return !untypedEqual(left, right);\n    }\n\n    /**\n     * @notice          Compares type equality.\n     * @dev             Shortcuts if the pointers are identical, otherwise compares type and digest.\n     * @param left      The first view\n     * @param right     The second view\n     * @return          bool - True if the types are the same\n     */\n    function equal(bytes29 left, bytes29 right) internal pure returns (bool) {\n        return left == right || (typeOf(left) == typeOf(right) && keccak(left) == keccak(right));\n    }\n\n    /**\n     * @notice          Compares type inequality.\n     * @dev             Shortcuts if the pointers are identical, otherwise compares type and digest.\n     * @param left      The first view\n     * @param right     The second view\n     * @return          bool - True if the types are not the same\n     */\n    function notEqual(bytes29 left, bytes29 right) internal pure returns (bool) {\n        return !equal(left, right);\n    }\n\n    /**\n     * @notice          Copy the view to a location, return an unsafe memory reference\n     * @dev             Super Dangerous direct memory access.\n     *\n     *                  This reference can be overwritten if anything else modifies memory (!!!).\n     *                  As such it MUST be consumed IMMEDIATELY.\n     *                  This function is private to prevent unsafe usage by callers.\n     * @param memView   The view\n     * @param _newLoc   The new location\n     * @return          written - the unsafe memory reference\n     */\n    function unsafeCopyTo(bytes29 memView, uint256 _newLoc) private view returns (bytes29 written) {\n        require(notNull(memView), \"TypedMemView/copyTo - Null pointer deref\");\n        require(isValid(memView), \"TypedMemView/copyTo - Invalid pointer deref\");\n        uint256 _len = len(memView);\n        uint256 _oldLoc = loc(memView);\n\n        uint256 ptr;\n        bool res;\n        assembly {\n            // solium-disable-previous-line security/no-inline-assembly\n            ptr := mload(0x40)\n            // revert if we're writing in occupied memory\n            if gt(ptr, _newLoc) {\n                revert(0x60, 0x20) // empty revert message\n            }\n\n            // use the identity precompile to copy\n            res := staticcall(gas(), 4, _oldLoc, _len, _newLoc, _len)\n        }\n        require(res, \"identity OOG\");\n        written = unsafeBuildUnchecked(typeOf(memView), _newLoc, _len);\n    }\n\n    /**\n     * @notice          Copies the referenced memory to a new loc in memory, returning a `bytes` pointing to\n     *                  the new memory\n     * @dev             Shortcuts if the pointers are identical, otherwise compares type and digest.\n     * @param memView   The view\n     * @return          ret - The view pointing to the new memory\n     */\n    function clone(bytes29 memView) internal view returns (bytes memory ret) {\n        uint256 ptr;\n        uint256 _len = len(memView);\n        assembly {\n            // solium-disable-previous-line security/no-inline-assembly\n            ptr := mload(0x40) // load unused memory pointer\n            ret := ptr\n        }\n        unsafeCopyTo(memView, ptr + 0x20);\n        assembly {\n            // solium-disable-previous-line security/no-inline-assembly\n            mstore(0x40, add(add(ptr, _len), 0x20)) // write new unused pointer\n            mstore(ptr, _len) // write len of new array (in bytes)\n        }\n    }\n\n    /**\n     * @notice          Join the views in memory, return an unsafe reference to the memory.\n     * @dev             Super Dangerous direct memory access.\n     *\n     *                  This reference can be overwritten if anything else modifies memory (!!!).\n     *                  As such it MUST be consumed IMMEDIATELY.\n     *                  This function is private to prevent unsafe usage by callers.\n     * @param memViews  The views\n     * @param _location The location in memory to which to copy & concatenate\n     * @return          unsafeView - The conjoined view pointing to the new memory\n     */\n    function unsafeJoin(bytes29[] memory memViews, uint256 _location) private view returns (bytes29 unsafeView) {\n        assembly {\n            // solium-disable-previous-line security/no-inline-assembly\n            let ptr := mload(0x40)\n            // revert if we're writing in occupied memory\n            if gt(ptr, _location) {\n                revert(0x60, 0x20) // empty revert message\n            }\n        }\n\n        uint256 _offset = 0;\n        for (uint256 i = 0; i < memViews.length; i ++) {\n            bytes29 memView = memViews[i];\n            unsafeCopyTo(memView, _location + _offset);\n            _offset += len(memView);\n        }\n        unsafeView = unsafeBuildUnchecked(0, _location, _offset);\n    }\n\n    /**\n     * @notice          Produce the keccak256 digest of the concatenated contents of multiple views.\n     * @param memViews  The views\n     * @return          bytes32 - The keccak256 digest\n     */\n    function joinKeccak(bytes29[] memory memViews) internal view returns (bytes32) {\n        uint256 ptr;\n        assembly {\n            // solium-disable-previous-line security/no-inline-assembly\n            ptr := mload(0x40) // load unused memory pointer\n        }\n        return keccak(unsafeJoin(memViews, ptr));\n    }\n\n    /**\n     * @notice          Produce the sha256 digest of the concatenated contents of multiple views.\n     * @param memViews  The views\n     * @return          bytes32 - The sha256 digest\n     */\n    function joinSha2(bytes29[] memory memViews) internal view returns (bytes32) {\n        uint256 ptr;\n        assembly {\n            // solium-disable-previous-line security/no-inline-assembly\n            ptr := mload(0x40) // load unused memory pointer\n        }\n        return sha2(unsafeJoin(memViews, ptr));\n    }\n\n    /**\n     * @notice          copies all views, joins them into a new bytearray.\n     * @param memViews  The views\n     * @return          ret - The new byte array\n     */\n    function join(bytes29[] memory memViews) internal view returns (bytes memory ret) {\n        uint256 ptr;\n        assembly {\n            // solium-disable-previous-line security/no-inline-assembly\n            ptr := mload(0x40) // load unused memory pointer\n        }\n\n        bytes29 _newView = unsafeJoin(memViews, ptr + 0x20);\n        uint256 _written = len(_newView);\n        uint256 _footprint = footprint(_newView);\n\n        assembly {\n            // solium-disable-previous-line security/no-inline-assembly\n            // store the legnth\n            mstore(ptr, _written)\n            // new pointer is old + 0x20 + the footprint of the body\n            mstore(0x40, add(add(ptr, _footprint), 0x20))\n            ret := ptr\n        }\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"contracts/BurnMessage.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/BurnMessage.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"2462","formattedMessage":"@openzeppelin/contracts-0.7/access/Ownable.sol:26:5: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n    constructor () internal {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.","severity":"warning","sourceLocation":{"end":1009,"file":"@openzeppelin/contracts-0.7/access/Ownable.sol","start":850},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"contracts/ReliefPools.sol:228:9: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n        uint32 sourceDomain,\n        ^-----------------^\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":7768,"file":"contracts/ReliefPools.sol","start":7749},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"contracts/ReliefPools.sol:229:9: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n        bytes32 sender,\n        ^------------^\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":7792,"file":"contracts/ReliefPools.sol","start":7778},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"contracts/ReliefPools.sol:230:9: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n        uint32 finalityThresholdExecuted,\n        ^------------------------------^\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":7834,"file":"contracts/ReliefPools.sol","start":7802},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"contracts/ReliefPools.sol:231:9: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n        bytes calldata messageBody\n        ^------------------------^\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":7870,"file":"contracts/ReliefPools.sol","start":7844},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"contracts/ReliefPools.sol:246:9: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n        uint32 finalityThresholdExecuted,\n        ^------------------------------^\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":8459,"file":"contracts/ReliefPools.sol","start":8427},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"contracts/ReliefPools.sol:281:26: Warning: Unused local variable.\n        (uint256 poolId, string memory location) = abi.decode(hookData, (uint256, string));\n                         ^--------------------^\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":9747,"file":"contracts/ReliefPools.sol","start":9725},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"contracts/ReliefPools.sol:513:57: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    function checkPersonClaimedFromPool(uint256 poolId, uint256 nullifier, uint256 userIdentifier) external view returns (bool) {\n                                                        ^---------------^\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":17307,"file":"contracts/ReliefPools.sol","start":17290},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"contracts/ReliefPools.sol:521:36: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    function getPersonClaimedPools(uint256 nullifier, uint256 userIdentifier) external view returns (uint256[] memory) {\n                                   ^---------------^\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":17663,"file":"contracts/ReliefPools.sol","start":17646},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"contracts/ReliefPools.sol:227:5: Warning: Function state mutability can be restricted to pure\n    function handleReceiveFinalizedMessage(\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":7938,"file":"contracts/ReliefPools.sol","start":7701},"type":"Warning"}],"sources":{"@openzeppelin/contracts-0.7/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-0.7/access/Ownable.sol","exportedSymbols":{"Context":[1190],"Ownable":[109]},"id":110,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.6",".0","<","0.8",".0"],"nodeType":"PragmaDirective","src":"33:31:0"},{"absolutePath":"@openzeppelin/contracts-0.7/utils/Context.sol","file":"../utils/Context.sol","id":2,"nodeType":"ImportDirective","scope":110,"sourceUnit":1191,"src":"66:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nodeType":"UserDefinedTypeName","referencedDeclaration":1190,"src":"621:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Context_$1190","typeString":"contract Context"}},"id":5,"nodeType":"InheritanceSpecifier","src":"621:7:0"}],"contractDependencies":[1190],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"97:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":109,"linearizedBaseContracts":[109,1190],"name":"Ownable","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nodeType":"VariableDeclaration","scope":109,"src":"635:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":13,"name":"OwnershipTransferred","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nodeType":"VariableDeclaration","scope":13,"src":"691:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"691:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":13,"src":"722:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"722:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"690:57:0"},"src":"664:84:0"},{"body":{"id":34,"nodeType":"Block","src":"874:135:0","statements":[{"assignments":[18],"declarations":[{"constant":false,"id":18,"mutability":"mutable","name":"msgSender","nodeType":"VariableDeclaration","scope":34,"src":"884:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":21,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":19,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"904:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"904:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"884:32:0"},{"expression":{"id":24,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":22,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"926:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":23,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"935:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"926:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":25,"nodeType":"ExpressionStatement","src":"926:18:0"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":29,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"988:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":28,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"980:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"980:7:0","typeDescriptions":{}}},"id":30,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"980:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":31,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"992:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"}],"id":26,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"959:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":32,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"959:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":33,"nodeType":"EmitStatement","src":"954:48:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"754:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":35,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"862:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"874:0:0"},"scope":109,"src":"850:159:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":43,"nodeType":"Block","src":"1140:30:0","statements":[{"expression":{"id":41,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1157:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":40,"id":42,"nodeType":"Return","src":"1150:13:0"}]},"documentation":{"id":36,"nodeType":"StructuredDocumentation","src":"1015:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":44,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nodeType":"FunctionDefinition","parameters":{"id":37,"nodeType":"ParameterList","parameters":[],"src":"1099:2:0"},"returnParameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":44,"src":"1131:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1131:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1130:9:0"},"scope":109,"src":"1085:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":57,"nodeType":"Block","src":"1279:96:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":48,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1297:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1297:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":50,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"1308:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1308:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"1297:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":53,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1322:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":47,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1289:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1289:68:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1367:1:0"}]},"documentation":{"id":45,"nodeType":"StructuredDocumentation","src":"1176:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nodeType":"ModifierDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[],"src":"1276:2:0"},"src":"1258:117:0","virtual":false,"visibility":"internal"},{"body":{"id":79,"nodeType":"Block","src":"1771:91:0","statements":[{"eventCall":{"arguments":[{"id":65,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1807:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":68,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1823:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":67,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1815:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"1815:7:0","typeDescriptions":{}}},"id":69,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1815:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":64,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1786:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":70,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1786:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":71,"nodeType":"EmitStatement","src":"1781:45:0"},{"expression":{"id":77,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":72,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1836:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":75,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1853:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":74,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1845:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":73,"name":"address","nodeType":"ElementaryTypeName","src":"1845:7:0","typeDescriptions":{}}},"id":76,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1845:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"1836:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":78,"nodeType":"ExpressionStatement","src":"1836:19:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1381:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":80,"implemented":true,"kind":"function","modifiers":[{"id":62,"modifierName":{"id":61,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"1761:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"1761:9:0"}],"name":"renounceOwnership","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1743:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[],"src":"1771:0:0"},"scope":109,"src":"1717:145:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":107,"nodeType":"Block","src":"2081:170:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":94,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":89,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"2099:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":92,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2119:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":91,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2111:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":90,"name":"address","nodeType":"ElementaryTypeName","src":"2111:7:0","typeDescriptions":{}}},"id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2111:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"2099:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":95,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2123:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":88,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2091:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2091:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":97,"nodeType":"ExpressionStatement","src":"2091:73:0"},{"eventCall":{"arguments":[{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2200:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":100,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"2208:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":98,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2179:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2179:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":102,"nodeType":"EmitStatement","src":"2174:43:0"},{"expression":{"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":103,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2227:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":104,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"2236:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2227:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":106,"nodeType":"ExpressionStatement","src":"2227:17:0"}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"1868:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":108,"implemented":true,"kind":"function","modifiers":[{"id":86,"modifierName":{"id":85,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"2071:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"2071:9:0"}],"name":"transferOwnership","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":108,"src":"2038:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":82,"name":"address","nodeType":"ElementaryTypeName","src":"2038:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2037:18:0"},"returnParameters":{"id":87,"nodeType":"ParameterList","parameters":[],"src":"2081:0:0"},"scope":109,"src":"2011:240:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":110,"src":"592:1661:0"}],"src":"33:2221:0"},"id":0},"@openzeppelin/contracts-0.7/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-0.7/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[225]},"id":226,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":111,"literals":["solidity",">=","0.6",".0","<","0.8",".0"],"nodeType":"PragmaDirective","src":"33:31:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":112,"nodeType":"StructuredDocumentation","src":"66:205:1","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":225,"linearizedBaseContracts":[225],"name":"ECDSA","nodeType":"ContractDefinition","nodes":[{"body":{"id":149,"nodeType":"Block","src":"1159:653:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":122,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"1211:9:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1211:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3635","id":124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1231:2:1","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"1211:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":131,"nodeType":"IfStatement","src":"1207:94:1","trueBody":{"id":130,"nodeType":"Block","src":"1235:66:1","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1256:33:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":126,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1249:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1249:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":129,"nodeType":"ExpressionStatement","src":"1249:41:1"}]}},{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","scope":149,"src":"1367:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":132,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1367:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":134,"nodeType":"VariableDeclarationStatement","src":"1367:9:1"},{"assignments":[136],"declarations":[{"constant":false,"id":136,"mutability":"mutable","name":"s","nodeType":"VariableDeclaration","scope":149,"src":"1386:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":135,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1386:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":137,"nodeType":"VariableDeclarationStatement","src":"1386:9:1"},{"assignments":[139],"declarations":[{"constant":false,"id":139,"mutability":"mutable","name":"v","nodeType":"VariableDeclaration","scope":149,"src":"1405:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":138,"name":"uint8","nodeType":"ElementaryTypeName","src":"1405:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":140,"nodeType":"VariableDeclarationStatement","src":"1405:7:1"},{"AST":{"nodeType":"YulBlock","src":"1611:155:1","statements":[{"nodeType":"YulAssignment","src":"1625:32:1","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"1640:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1651:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1636:3:1"},"nodeType":"YulFunctionCall","src":"1636:20:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1630:5:1"},"nodeType":"YulFunctionCall","src":"1630:27:1"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"1625:1:1"}]},{"nodeType":"YulAssignment","src":"1670:32:1","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"1685:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1696:4:1","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1681:3:1"},"nodeType":"YulFunctionCall","src":"1681:20:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1675:5:1"},"nodeType":"YulFunctionCall","src":"1675:27:1"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"1670:1:1"}]},{"nodeType":"YulAssignment","src":"1715:41:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1725:1:1","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"1738:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1749:4:1","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1734:3:1"},"nodeType":"YulFunctionCall","src":"1734:20:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1728:5:1"},"nodeType":"YulFunctionCall","src":"1728:27:1"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1720:4:1"},"nodeType":"YulFunctionCall","src":"1720:36:1"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"1715:1:1"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":133,"isOffset":false,"isSlot":false,"src":"1625:1:1","valueSize":1},{"declaration":136,"isOffset":false,"isSlot":false,"src":"1670:1:1","valueSize":1},{"declaration":117,"isOffset":false,"isSlot":false,"src":"1640:9:1","valueSize":1},{"declaration":117,"isOffset":false,"isSlot":false,"src":"1685:9:1","valueSize":1},{"declaration":117,"isOffset":false,"isSlot":false,"src":"1738:9:1","valueSize":1},{"declaration":139,"isOffset":false,"isSlot":false,"src":"1715:1:1","valueSize":1}],"id":141,"nodeType":"InlineAssembly","src":"1602:164:1"},{"expression":{"arguments":[{"id":143,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"1791:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":144,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"1797:1:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":145,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"1800:1:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":146,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"1803:1:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":142,"name":"recover","nodeType":"Identifier","overloadedDeclarations":[150,207],"referencedDeclaration":207,"src":"1783:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1783:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":121,"id":148,"nodeType":"Return","src":"1776:29:1"}]},"documentation":{"id":113,"nodeType":"StructuredDocumentation","src":"292:775:1","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":150,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":115,"mutability":"mutable","name":"hash","nodeType":"VariableDeclaration","scope":150,"src":"1089:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":114,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1089:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":117,"mutability":"mutable","name":"signature","nodeType":"VariableDeclaration","scope":150,"src":"1103:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":116,"name":"bytes","nodeType":"ElementaryTypeName","src":"1103:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1088:38:1"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":150,"src":"1150:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":119,"name":"address","nodeType":"ElementaryTypeName","src":"1150:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1149:9:1"},"scope":225,"src":"1072:740:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":206,"nodeType":"Block","src":"2054:1320:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":167,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"2954:1:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2946:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":165,"name":"uint256","nodeType":"ElementaryTypeName","src":"2946:7:1","typeDescriptions":{}}},"id":168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2946:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2960:66:1","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"2946:80:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3028:36:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":164,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2938:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2938:127:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":173,"nodeType":"ExpressionStatement","src":"2938:127:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":175,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"3083:1:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3237","id":176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3088:2:1","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"3083:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":178,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"3094:1:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3238","id":179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3099:2:1","typeDescriptions":{"typeIdentifier":"t_rational_28_by_1","typeString":"int_const 28"},"value":"28"},"src":"3094:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3083:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202776272076616c7565","id":182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3103:36:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4","typeString":"literal_string \"ECDSA: invalid signature 'v' value\""},"value":"ECDSA: invalid signature 'v' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4","typeString":"literal_string \"ECDSA: invalid signature 'v' value\""}],"id":174,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3075:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3075:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":184,"nodeType":"ExpressionStatement","src":"3075:65:1"},{"assignments":[186],"declarations":[{"constant":false,"id":186,"mutability":"mutable","name":"signer","nodeType":"VariableDeclaration","scope":206,"src":"3235:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"3235:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":193,"initialValue":{"arguments":[{"id":188,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"3262:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":189,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"3268:1:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":190,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"3271:1:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":191,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"3274:1:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":187,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"3252:9:1","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3252:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3235:41:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":195,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"3294:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3312:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3304:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"3304:7:1","typeDescriptions":{}}},"id":199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3304:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"3294:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3316:26:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":194,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3286:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3286:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":203,"nodeType":"ExpressionStatement","src":"3286:57:1"},{"expression":{"id":204,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"3361:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":163,"id":205,"nodeType":"Return","src":"3354:13:1"}]},"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"1818:137:1","text":" @dev Overload of {ECDSA-recover-bytes32-bytes-} that receives the `v`,\n `r` and `s` signature fields separately."},"id":207,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"hash","nodeType":"VariableDeclaration","scope":207,"src":"1977:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1977:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"v","nodeType":"VariableDeclaration","scope":207,"src":"1991:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":154,"name":"uint8","nodeType":"ElementaryTypeName","src":"1991:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","scope":207,"src":"2000:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":156,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2000:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":159,"mutability":"mutable","name":"s","nodeType":"VariableDeclaration","scope":207,"src":"2011:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":158,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2011:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1976:45:1"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":207,"src":"2045:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"2045:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2044:9:1"},"scope":225,"src":"1960:1414:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":223,"nodeType":"Block","src":"3716:187:1","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","id":218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3854:34:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},"value":"\u0019Ethereum Signed Message:\n32"},{"id":219,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"3890:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":216,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3837:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3837:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3837:58:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":215,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3827:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3827:69:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":214,"id":222,"nodeType":"Return","src":"3820:76:1"}]},"documentation":{"id":208,"nodeType":"StructuredDocumentation","src":"3380:253:1","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n replicates the behavior of the\n https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign[`eth_sign`]\n JSON-RPC method.\n See {recover}."},"id":224,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nodeType":"FunctionDefinition","parameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"hash","nodeType":"VariableDeclaration","scope":224,"src":"3670:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3670:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3669:14:1"},"returnParameters":{"id":214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":213,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":224,"src":"3707:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":212,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3707:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3706:9:1"},"scope":225,"src":"3638:265:1","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":226,"src":"272:3633:1"}],"src":"33:3873:1"},"id":1},"@openzeppelin/contracts-0.7/math/SafeMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-0.7/math/SafeMath.sol","exportedSymbols":{"SafeMath":[580]},"id":581,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":227,"literals":["solidity",">=","0.6",".0","<","0.8",".0"],"nodeType":"PragmaDirective","src":"33:31:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"66:563:2","text":" @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":580,"linearizedBaseContracts":[580],"name":"SafeMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":258,"nodeType":"Block","src":"865:98:2","statements":[{"assignments":[241],"declarations":[{"constant":false,"id":241,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":258,"src":"875:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":240,"name":"uint256","nodeType":"ElementaryTypeName","src":"875:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":245,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":242,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"887:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":243,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"891:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"887:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"875:17:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":246,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"906:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":247,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"910:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"906:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":253,"nodeType":"IfStatement","src":"902:28:2","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"921:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"928:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":251,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"920:10:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":239,"id":252,"nodeType":"Return","src":"913:17:2"}},{"expression":{"components":[{"hexValue":"74727565","id":254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"948:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":255,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"954:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":256,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"947:9:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":239,"id":257,"nodeType":"Return","src":"940:16:2"}]},"documentation":{"id":229,"nodeType":"StructuredDocumentation","src":"653:131:2","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":259,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nodeType":"FunctionDefinition","parameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":259,"src":"805:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":230,"name":"uint256","nodeType":"ElementaryTypeName","src":"805:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":233,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":259,"src":"816:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":232,"name":"uint256","nodeType":"ElementaryTypeName","src":"816:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"804:22:2"},"returnParameters":{"id":239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":259,"src":"850:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":235,"name":"bool","nodeType":"ElementaryTypeName","src":"850:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":238,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":259,"src":"856:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":237,"name":"uint256","nodeType":"ElementaryTypeName","src":"856:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"849:15:2"},"scope":580,"src":"789:174:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":285,"nodeType":"Block","src":"1185:75:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":271,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"1199:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":272,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"1203:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1199:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":278,"nodeType":"IfStatement","src":"1195:28:2","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1214:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1221:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":276,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1213:10:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":270,"id":277,"nodeType":"Return","src":"1206:17:2"}},{"expression":{"components":[{"hexValue":"74727565","id":279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1241:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":280,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"1247:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":281,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"1251:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1247:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":283,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1240:13:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":270,"id":284,"nodeType":"Return","src":"1233:20:2"}]},"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"969:135:2","text":" @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":286,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nodeType":"FunctionDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":286,"src":"1125:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":261,"name":"uint256","nodeType":"ElementaryTypeName","src":"1125:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":286,"src":"1136:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":263,"name":"uint256","nodeType":"ElementaryTypeName","src":"1136:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1124:22:2"},"returnParameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":267,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":286,"src":"1170:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":266,"name":"bool","nodeType":"ElementaryTypeName","src":"1170:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":269,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":286,"src":"1176:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":268,"name":"uint256","nodeType":"ElementaryTypeName","src":"1176:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1169:15:2"},"scope":580,"src":"1109:151:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":326,"nodeType":"Block","src":"1484:359:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":298,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"1716:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1721:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1716:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":305,"nodeType":"IfStatement","src":"1712:28:2","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1732:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1738:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":303,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1731:9:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":297,"id":304,"nodeType":"Return","src":"1724:16:2"}},{"assignments":[307],"declarations":[{"constant":false,"id":307,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":326,"src":"1750:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":306,"name":"uint256","nodeType":"ElementaryTypeName","src":"1750:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":311,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":308,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"1762:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":309,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"1766:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1762:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1750:17:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":312,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"1781:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":313,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"1785:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1781:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":315,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"1790:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1781:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":321,"nodeType":"IfStatement","src":"1777:33:2","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1801:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":319,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1800:10:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":297,"id":320,"nodeType":"Return","src":"1793:17:2"}},{"expression":{"components":[{"hexValue":"74727565","id":322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1828:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":323,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"1834:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":324,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1827:9:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":297,"id":325,"nodeType":"Return","src":"1820:16:2"}]},"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"1266:137:2","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":327,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nodeType":"FunctionDefinition","parameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":327,"src":"1424:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":288,"name":"uint256","nodeType":"ElementaryTypeName","src":"1424:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":291,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":327,"src":"1435:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":290,"name":"uint256","nodeType":"ElementaryTypeName","src":"1435:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1423:22:2"},"returnParameters":{"id":297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":327,"src":"1469:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":293,"name":"bool","nodeType":"ElementaryTypeName","src":"1469:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":296,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":327,"src":"1475:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":295,"name":"uint256","nodeType":"ElementaryTypeName","src":"1475:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1468:15:2"},"scope":580,"src":"1408:435:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":353,"nodeType":"Block","src":"2068:76:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":339,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"2082:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2087:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2082:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":346,"nodeType":"IfStatement","src":"2078:29:2","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2098:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2105:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":344,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2097:10:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":338,"id":345,"nodeType":"Return","src":"2090:17:2"}},{"expression":{"components":[{"hexValue":"74727565","id":347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2125:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":348,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"2131:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":349,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"2135:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2131:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":351,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2124:13:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":338,"id":352,"nodeType":"Return","src":"2117:20:2"}]},"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"1849:138:2","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":354,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nodeType":"FunctionDefinition","parameters":{"id":333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":354,"src":"2008:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":329,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":332,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":354,"src":"2019:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":331,"name":"uint256","nodeType":"ElementaryTypeName","src":"2019:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2007:22:2"},"returnParameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":335,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":354,"src":"2053:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":334,"name":"bool","nodeType":"ElementaryTypeName","src":"2053:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":337,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":354,"src":"2059:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":336,"name":"uint256","nodeType":"ElementaryTypeName","src":"2059:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2052:15:2"},"scope":580,"src":"1992:152:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":380,"nodeType":"Block","src":"2379:76:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":366,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"2393:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2398:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2393:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":373,"nodeType":"IfStatement","src":"2389:29:2","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2409:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2416:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":371,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2408:10:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":365,"id":372,"nodeType":"Return","src":"2401:17:2"}},{"expression":{"components":[{"hexValue":"74727565","id":374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2436:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":375,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"2442:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":376,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"2446:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2442:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":378,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2435:13:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":365,"id":379,"nodeType":"Return","src":"2428:20:2"}]},"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"2150:148:2","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":381,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nodeType":"FunctionDefinition","parameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":381,"src":"2319:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":356,"name":"uint256","nodeType":"ElementaryTypeName","src":"2319:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":359,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":381,"src":"2330:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":358,"name":"uint256","nodeType":"ElementaryTypeName","src":"2330:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2318:22:2"},"returnParameters":{"id":365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":362,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":381,"src":"2364:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":361,"name":"bool","nodeType":"ElementaryTypeName","src":"2364:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":364,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":381,"src":"2370:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":363,"name":"uint256","nodeType":"ElementaryTypeName","src":"2370:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2363:15:2"},"scope":580,"src":"2303:152:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":406,"nodeType":"Block","src":"2757:108:2","statements":[{"assignments":[392],"declarations":[{"constant":false,"id":392,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":406,"src":"2767:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"2767:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":396,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":393,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"2779:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":394,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"2783:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2779:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2767:17:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":398,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"2802:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":399,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"2807:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2802:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a206164646974696f6e206f766572666c6f77","id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2810:29:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""},"value":"SafeMath: addition overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""}],"id":397,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2794:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2794:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":403,"nodeType":"ExpressionStatement","src":"2794:46:2"},{"expression":{"id":404,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"2857:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":390,"id":405,"nodeType":"Return","src":"2850:8:2"}]},"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"2461:224:2","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":407,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":407,"src":"2703:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":383,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":407,"src":"2714:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":385,"name":"uint256","nodeType":"ElementaryTypeName","src":"2714:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2702:22:2"},"returnParameters":{"id":390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":389,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":407,"src":"2748:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":388,"name":"uint256","nodeType":"ElementaryTypeName","src":"2748:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2747:9:2"},"scope":580,"src":"2690:175:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":428,"nodeType":"Block","src":"3203:88:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":418,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"3221:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":419,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"3226:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3221:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a207375627472616374696f6e206f766572666c6f77","id":421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3229:32:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""},"value":"SafeMath: subtraction overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""}],"id":417,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3213:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3213:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":423,"nodeType":"ExpressionStatement","src":"3213:49:2"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":424,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"3279:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":425,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"3283:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3279:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":416,"id":427,"nodeType":"Return","src":"3272:12:2"}]},"documentation":{"id":408,"nodeType":"StructuredDocumentation","src":"2871:260:2","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":429,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":429,"src":"3149:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":409,"name":"uint256","nodeType":"ElementaryTypeName","src":"3149:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":412,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":429,"src":"3160:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":411,"name":"uint256","nodeType":"ElementaryTypeName","src":"3160:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3148:22:2"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":429,"src":"3194:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":414,"name":"uint256","nodeType":"ElementaryTypeName","src":"3194:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3193:9:2"},"scope":580,"src":"3136:155:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":462,"nodeType":"Block","src":"3605:148:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":439,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"3619:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3624:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3619:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":444,"nodeType":"IfStatement","src":"3615:20:2","trueBody":{"expression":{"hexValue":"30","id":442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3634:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":438,"id":443,"nodeType":"Return","src":"3627:8:2"}},{"assignments":[446],"declarations":[{"constant":false,"id":446,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":462,"src":"3645:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":445,"name":"uint256","nodeType":"ElementaryTypeName","src":"3645:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":450,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":447,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"3657:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":448,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"3661:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3657:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3645:17:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":452,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"3680:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":453,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"3684:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3680:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":455,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"3689:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3680:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77","id":457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3692:35:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""},"value":"SafeMath: multiplication overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""}],"id":451,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3672:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3672:56:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":459,"nodeType":"ExpressionStatement","src":"3672:56:2"},{"expression":{"id":460,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"3745:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":438,"id":461,"nodeType":"Return","src":"3738:8:2"}]},"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"3297:236:2","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":463,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nodeType":"FunctionDefinition","parameters":{"id":435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":432,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":463,"src":"3551:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":431,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":434,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":463,"src":"3562:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":433,"name":"uint256","nodeType":"ElementaryTypeName","src":"3562:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3550:22:2"},"returnParameters":{"id":438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":463,"src":"3596:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":436,"name":"uint256","nodeType":"ElementaryTypeName","src":"3596:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3595:9:2"},"scope":580,"src":"3538:215:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":484,"nodeType":"Block","src":"4284:83:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":474,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"4302:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4306:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4302:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a206469766973696f6e206279207a65726f","id":477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4309:28:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""},"value":"SafeMath: division by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""}],"id":473,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4294:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4294:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":479,"nodeType":"ExpressionStatement","src":"4294:44:2"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":480,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"4355:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":481,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"4359:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4355:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":472,"id":483,"nodeType":"Return","src":"4348:12:2"}]},"documentation":{"id":464,"nodeType":"StructuredDocumentation","src":"3759:453:2","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":485,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","parameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":466,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":485,"src":"4230:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":465,"name":"uint256","nodeType":"ElementaryTypeName","src":"4230:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":468,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":485,"src":"4241:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":467,"name":"uint256","nodeType":"ElementaryTypeName","src":"4241:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4229:22:2"},"returnParameters":{"id":472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":471,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":485,"src":"4275:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":470,"name":"uint256","nodeType":"ElementaryTypeName","src":"4275:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4274:9:2"},"scope":580,"src":"4217:150:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":506,"nodeType":"Block","src":"4887:81:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":496,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"4905:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4909:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4905:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a206d6f64756c6f206279207a65726f","id":499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4912:26:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""},"value":"SafeMath: modulo by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""}],"id":495,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4897:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4897:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":501,"nodeType":"ExpressionStatement","src":"4897:42:2"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":502,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"4956:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":503,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"4960:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4956:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":494,"id":505,"nodeType":"Return","src":"4949:12:2"}]},"documentation":{"id":486,"nodeType":"StructuredDocumentation","src":"4373:442:2","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":507,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nodeType":"FunctionDefinition","parameters":{"id":491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":488,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":507,"src":"4833:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":487,"name":"uint256","nodeType":"ElementaryTypeName","src":"4833:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":490,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":507,"src":"4844:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":489,"name":"uint256","nodeType":"ElementaryTypeName","src":"4844:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4832:22:2"},"returnParameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":507,"src":"4878:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":492,"name":"uint256","nodeType":"ElementaryTypeName","src":"4878:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4877:9:2"},"scope":580,"src":"4820:148:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":530,"nodeType":"Block","src":"5527:68:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":520,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"5545:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":521,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"5550:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5545:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":523,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"5553:12:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":519,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5537:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5537:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":525,"nodeType":"ExpressionStatement","src":"5537:29:2"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":526,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"5583:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":527,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"5587:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5583:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":518,"id":529,"nodeType":"Return","src":"5576:12:2"}]},"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"4974:453:2","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":531,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":531,"src":"5445:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":509,"name":"uint256","nodeType":"ElementaryTypeName","src":"5445:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":531,"src":"5456:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":511,"name":"uint256","nodeType":"ElementaryTypeName","src":"5456:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":531,"src":"5467:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":513,"name":"string","nodeType":"ElementaryTypeName","src":"5467:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5444:50:2"},"returnParameters":{"id":518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":517,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":531,"src":"5518:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":516,"name":"uint256","nodeType":"ElementaryTypeName","src":"5518:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5517:9:2"},"scope":580,"src":"5432:163:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":554,"nodeType":"Block","src":"6347:67:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":544,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6365:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6365:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":547,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"6372:12:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":543,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6357:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6357:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":549,"nodeType":"ExpressionStatement","src":"6357:28:2"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":550,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"6402:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":551,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6406:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6402:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":542,"id":553,"nodeType":"Return","src":"6395:12:2"}]},"documentation":{"id":532,"nodeType":"StructuredDocumentation","src":"5601:646:2","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":555,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","parameters":{"id":539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":534,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":555,"src":"6265:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":533,"name":"uint256","nodeType":"ElementaryTypeName","src":"6265:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":536,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":555,"src":"6276:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":535,"name":"uint256","nodeType":"ElementaryTypeName","src":"6276:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":538,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":555,"src":"6287:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":537,"name":"string","nodeType":"ElementaryTypeName","src":"6287:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6264:50:2"},"returnParameters":{"id":542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":541,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":555,"src":"6338:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":540,"name":"uint256","nodeType":"ElementaryTypeName","src":"6338:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6337:9:2"},"scope":580,"src":"6252:162:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":578,"nodeType":"Block","src":"7155:67:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":568,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"7173:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7177:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7173:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":571,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"7180:12:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":567,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7165:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7165:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":573,"nodeType":"ExpressionStatement","src":"7165:28:2"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":574,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"7210:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":575,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"7214:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7210:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":566,"id":577,"nodeType":"Return","src":"7203:12:2"}]},"documentation":{"id":556,"nodeType":"StructuredDocumentation","src":"6420:635:2","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":579,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nodeType":"FunctionDefinition","parameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":579,"src":"7073:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":557,"name":"uint256","nodeType":"ElementaryTypeName","src":"7073:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":560,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":579,"src":"7084:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":559,"name":"uint256","nodeType":"ElementaryTypeName","src":"7084:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":579,"src":"7095:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":561,"name":"string","nodeType":"ElementaryTypeName","src":"7095:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7072:50:2"},"returnParameters":{"id":566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":565,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":579,"src":"7146:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":564,"name":"uint256","nodeType":"ElementaryTypeName","src":"7146:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7145:9:2"},"scope":580,"src":"7060:162:2","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":581,"src":"630:6594:2"}],"src":"33:7192:2"},"id":2},"@openzeppelin/contracts-0.7/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-0.7/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[658]},"id":659,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":582,"literals":["solidity",">=","0.6",".0","<","0.8",".0"],"nodeType":"PragmaDirective","src":"33:31:3"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":583,"nodeType":"StructuredDocumentation","src":"66:70:3","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":658,"linearizedBaseContracts":[658],"name":"IERC20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":584,"nodeType":"StructuredDocumentation","src":"160:66:3","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":589,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","parameters":{"id":585,"nodeType":"ParameterList","parameters":[],"src":"251:2:3"},"returnParameters":{"id":588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":589,"src":"277:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":586,"name":"uint256","nodeType":"ElementaryTypeName","src":"277:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"276:9:3"},"scope":658,"src":"231:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":590,"nodeType":"StructuredDocumentation","src":"292:72:3","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":597,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","parameters":{"id":593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":592,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":597,"src":"388:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":591,"name":"address","nodeType":"ElementaryTypeName","src":"388:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"387:17:3"},"returnParameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":595,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":597,"src":"428:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":594,"name":"uint256","nodeType":"ElementaryTypeName","src":"428:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"427:9:3"},"scope":658,"src":"369:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":598,"nodeType":"StructuredDocumentation","src":"443:209:3","text":" @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":607,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":607,"src":"675:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":599,"name":"address","nodeType":"ElementaryTypeName","src":"675:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":602,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":607,"src":"694:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":601,"name":"uint256","nodeType":"ElementaryTypeName","src":"694:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"674:35:3"},"returnParameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":607,"src":"728:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":604,"name":"bool","nodeType":"ElementaryTypeName","src":"728:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"727:6:3"},"scope":658,"src":"657:77:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":608,"nodeType":"StructuredDocumentation","src":"740:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":617,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":617,"src":"1028:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":609,"name":"address","nodeType":"ElementaryTypeName","src":"1028:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":612,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":617,"src":"1043:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":611,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1027:32:3"},"returnParameters":{"id":616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":615,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":617,"src":"1083:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":614,"name":"uint256","nodeType":"ElementaryTypeName","src":"1083:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1082:9:3"},"scope":658,"src":"1009:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":618,"nodeType":"StructuredDocumentation","src":"1098:642:3","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":627,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":627,"src":"1762:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":619,"name":"address","nodeType":"ElementaryTypeName","src":"1762:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":622,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":627,"src":"1779:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":621,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1761:33:3"},"returnParameters":{"id":626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":625,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":627,"src":"1813:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":624,"name":"bool","nodeType":"ElementaryTypeName","src":"1813:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1812:6:3"},"scope":658,"src":"1745:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":628,"nodeType":"StructuredDocumentation","src":"1825:296:3","text":" @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":639,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":630,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":639,"src":"2148:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":629,"name":"address","nodeType":"ElementaryTypeName","src":"2148:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":632,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":639,"src":"2164:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":631,"name":"address","nodeType":"ElementaryTypeName","src":"2164:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":634,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":639,"src":"2183:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":633,"name":"uint256","nodeType":"ElementaryTypeName","src":"2183:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2147:51:3"},"returnParameters":{"id":638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":639,"src":"2217:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":636,"name":"bool","nodeType":"ElementaryTypeName","src":"2217:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2216:6:3"},"scope":658,"src":"2126:97:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":640,"nodeType":"StructuredDocumentation","src":"2229:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":648,"name":"Transfer","nodeType":"EventDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":648,"src":"2407:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":641,"name":"address","nodeType":"ElementaryTypeName","src":"2407:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":644,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":648,"src":"2429:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":643,"name":"address","nodeType":"ElementaryTypeName","src":"2429:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":646,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":648,"src":"2449:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":645,"name":"uint256","nodeType":"ElementaryTypeName","src":"2449:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2406:57:3"},"src":"2392:72:3"},{"anonymous":false,"documentation":{"id":649,"nodeType":"StructuredDocumentation","src":"2470:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":657,"name":"Approval","nodeType":"EventDefinition","parameters":{"id":656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":651,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":657,"src":"2638:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":650,"name":"address","nodeType":"ElementaryTypeName","src":"2638:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":653,"indexed":true,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":657,"src":"2661:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":652,"name":"address","nodeType":"ElementaryTypeName","src":"2661:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":655,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":657,"src":"2686:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":654,"name":"uint256","nodeType":"ElementaryTypeName","src":"2686:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2637:63:3"},"src":"2623:78:3"}],"scope":659,"src":"137:2566:3"}],"src":"33:2671:3"},"id":3},"@openzeppelin/contracts-0.7/token/ERC20/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-0.7/token/ERC20/SafeERC20.sol","exportedSymbols":{"Address":[1167],"IERC20":[658],"SafeERC20":[871],"SafeMath":[580]},"id":872,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":660,"literals":["solidity",">=","0.6",".0","<","0.8",".0"],"nodeType":"PragmaDirective","src":"33:31:4"},{"absolutePath":"@openzeppelin/contracts-0.7/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":661,"nodeType":"ImportDirective","scope":872,"sourceUnit":659,"src":"66:22:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-0.7/math/SafeMath.sol","file":"../../math/SafeMath.sol","id":662,"nodeType":"ImportDirective","scope":872,"sourceUnit":581,"src":"89:33:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-0.7/utils/Address.sol","file":"../../utils/Address.sol","id":663,"nodeType":"ImportDirective","scope":872,"sourceUnit":1168,"src":"123:33:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":664,"nodeType":"StructuredDocumentation","src":"158:457:4","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":871,"linearizedBaseContracts":[871],"name":"SafeERC20","nodeType":"ContractDefinition","nodes":[{"id":667,"libraryName":{"id":665,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":580,"src":"646:8:4","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$580","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"640:27:4","typeName":{"id":666,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":670,"libraryName":{"id":668,"name":"Address","nodeType":"UserDefinedTypeName","referencedDeclaration":1167,"src":"678:7:4","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1167","typeString":"library Address"}},"nodeType":"UsingForDirective","src":"672:26:4","typeName":{"id":669,"name":"address","nodeType":"ElementaryTypeName","src":"690:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":691,"nodeType":"Block","src":"776:103:4","statements":[{"expression":{"arguments":[{"id":680,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"806:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":683,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"836:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"}},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":607,"src":"836:14:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"836:23:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":686,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"861:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"865:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":681,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"813:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"813:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"813:58:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":679,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"786:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"786:86:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":690,"nodeType":"ExpressionStatement","src":"786:86:4"}]},"id":692,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nodeType":"FunctionDefinition","parameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":672,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":692,"src":"726:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"},"typeName":{"id":671,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":658,"src":"726:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":674,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":692,"src":"740:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":673,"name":"address","nodeType":"ElementaryTypeName","src":"740:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":676,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":692,"src":"752:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":675,"name":"uint256","nodeType":"ElementaryTypeName","src":"752:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"725:41:4"},"returnParameters":{"id":678,"nodeType":"ParameterList","parameters":[],"src":"776:0:4"},"scope":871,"src":"704:175:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":716,"nodeType":"Block","src":"975:113:4","statements":[{"expression":{"arguments":[{"id":704,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"1005:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":707,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"1035:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":639,"src":"1035:18:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1035:27:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":710,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"1064:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":711,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"1070:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"1074:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":705,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1012:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1012:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1012:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":703,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"985:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"985:96:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":715,"nodeType":"ExpressionStatement","src":"985:96:4"}]},"id":717,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nodeType":"FunctionDefinition","parameters":{"id":701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":717,"src":"911:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"},"typeName":{"id":693,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":658,"src":"911:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":696,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":717,"src":"925:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":695,"name":"address","nodeType":"ElementaryTypeName","src":"925:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":698,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":717,"src":"939:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":697,"name":"address","nodeType":"ElementaryTypeName","src":"939:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":700,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":717,"src":"951:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":699,"name":"uint256","nodeType":"ElementaryTypeName","src":"951:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"910:55:4"},"returnParameters":{"id":702,"nodeType":"ParameterList","parameters":[],"src":"975:0:4"},"scope":871,"src":"885:203:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":759,"nodeType":"Block","src":"1424:537:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"1713:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1722:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1713:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":731,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1712:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":736,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1753:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$871","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$871","typeString":"library SafeERC20"}],"id":735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1745:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":734,"name":"address","nodeType":"ElementaryTypeName","src":"1745:7:4","typeDescriptions":{}}},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1745:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":738,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"1760:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":732,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"1729:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":617,"src":"1729:15:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1729:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1772:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1729:44:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":742,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1728:46:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1712:62:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1788:56:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":727,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1704:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1704:150:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"ExpressionStatement","src":"1704:150:4"},{"expression":{"arguments":[{"id":748,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"1884:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":751,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"1914:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":627,"src":"1914:13:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1914:22:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":754,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"1938:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"1947:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":749,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1891:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1891:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1891:62:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":747,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"1864:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1864:90:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":758,"nodeType":"ExpressionStatement","src":"1864:90:4"}]},"documentation":{"id":718,"nodeType":"StructuredDocumentation","src":"1094:249:4","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":760,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nodeType":"FunctionDefinition","parameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":720,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":760,"src":"1369:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"},"typeName":{"id":719,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":658,"src":"1369:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":722,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":760,"src":"1383:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":721,"name":"address","nodeType":"ElementaryTypeName","src":"1383:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":724,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":760,"src":"1400:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":723,"name":"uint256","nodeType":"ElementaryTypeName","src":"1400:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1368:46:4"},"returnParameters":{"id":726,"nodeType":"ParameterList","parameters":[],"src":"1424:0:4"},"scope":871,"src":"1348:613:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":795,"nodeType":"Block","src":"2053:197:4","statements":[{"assignments":[770],"declarations":[{"constant":false,"id":770,"mutability":"mutable","name":"newAllowance","nodeType":"VariableDeclaration","scope":795,"src":"2063:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":769,"name":"uint256","nodeType":"ElementaryTypeName","src":"2063:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":782,"initialValue":{"arguments":[{"id":780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"2130:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":775,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2110:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$871","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$871","typeString":"library SafeERC20"}],"id":774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2102:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":773,"name":"address","nodeType":"ElementaryTypeName","src":"2102:7:4","typeDescriptions":{}}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2102:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":777,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"2117:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":771,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"2086:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":617,"src":"2086:15:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2086:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":407,"src":"2086:43:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2086:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2063:73:4"},{"expression":{"arguments":[{"id":784,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"2166:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":787,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"2196:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":627,"src":"2196:13:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2196:22:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":790,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"2220:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":791,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"2229:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":785,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2173:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2173:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2173:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":783,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"2146:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2146:97:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":794,"nodeType":"ExpressionStatement","src":"2146:97:4"}]},"id":796,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nodeType":"FunctionDefinition","parameters":{"id":767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":796,"src":"1998:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"},"typeName":{"id":761,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":658,"src":"1998:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":764,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":796,"src":"2012:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":763,"name":"address","nodeType":"ElementaryTypeName","src":"2012:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":766,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":796,"src":"2029:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":765,"name":"uint256","nodeType":"ElementaryTypeName","src":"2029:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1997:46:4"},"returnParameters":{"id":768,"nodeType":"ParameterList","parameters":[],"src":"2053:0:4"},"scope":871,"src":"1967:283:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":832,"nodeType":"Block","src":"2342:242:4","statements":[{"assignments":[806],"declarations":[{"constant":false,"id":806,"mutability":"mutable","name":"newAllowance","nodeType":"VariableDeclaration","scope":832,"src":"2352:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":805,"name":"uint256","nodeType":"ElementaryTypeName","src":"2352:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":819,"initialValue":{"arguments":[{"id":816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"2419:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2426:43:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"expression":{"arguments":[{"arguments":[{"id":811,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2399:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$871","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$871","typeString":"library SafeERC20"}],"id":810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2391:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":809,"name":"address","nodeType":"ElementaryTypeName","src":"2391:7:4","typeDescriptions":{}}},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2391:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":813,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"2406:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":807,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"2375:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"}},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":617,"src":"2375:15:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2375:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":531,"src":"2375:43:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2375:95:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2352:118:4"},{"expression":{"arguments":[{"id":821,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"2500:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":824,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"2530:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"}},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":627,"src":"2530:13:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2530:22:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":827,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"2554:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":828,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"2563:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":822,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2507:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2507:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2507:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":820,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"2480:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2480:97:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":831,"nodeType":"ExpressionStatement","src":"2480:97:4"}]},"id":833,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nodeType":"FunctionDefinition","parameters":{"id":803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":798,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":833,"src":"2287:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"},"typeName":{"id":797,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":658,"src":"2287:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":800,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":833,"src":"2301:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"2301:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":802,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":833,"src":"2318:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":801,"name":"uint256","nodeType":"ElementaryTypeName","src":"2318:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2286:46:4"},"returnParameters":{"id":804,"nodeType":"ParameterList","parameters":[],"src":"2342:0:4"},"scope":871,"src":"2256:328:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":869,"nodeType":"Block","src":"3037:681:4","statements":[{"assignments":[842],"declarations":[{"constant":false,"id":842,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":869,"src":"3386:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":841,"name":"bytes","nodeType":"ElementaryTypeName","src":"3386:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":851,"initialValue":{"arguments":[{"id":848,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"3440:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3446:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":845,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"3420:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"}],"id":844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3412:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":843,"name":"address","nodeType":"ElementaryTypeName","src":"3412:7:4","typeDescriptions":{}}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3412:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":962,"src":"3412:27:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3412:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3386:95:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":852,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"3495:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3495:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3515:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3495:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":868,"nodeType":"IfStatement","src":"3491:221:4","trueBody":{"id":867,"nodeType":"Block","src":"3518:194:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":859,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"3635:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3648:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":860,"name":"bool","nodeType":"ElementaryTypeName","src":"3648:4:4","typeDescriptions":{}}}],"id":862,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3647:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":857,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3624:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"3624:10:4","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3624:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3656:44:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":856,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3616:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3616:85:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":866,"nodeType":"ExpressionStatement","src":"3616:85:4"}]}}]},"documentation":{"id":834,"nodeType":"StructuredDocumentation","src":"2590:372:4","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":870,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nodeType":"FunctionDefinition","parameters":{"id":839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":836,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":870,"src":"2996:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"},"typeName":{"id":835,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":658,"src":"2996:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":838,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":870,"src":"3010:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":837,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2995:33:4"},"returnParameters":{"id":840,"nodeType":"ParameterList","parameters":[],"src":"3037:0:4"},"scope":871,"src":"2967:751:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":872,"src":"616:3104:4"}],"src":"33:3688:4"},"id":4},"@openzeppelin/contracts-0.7/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-0.7/utils/Address.sol","exportedSymbols":{"Address":[1167]},"id":1168,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":873,"literals":["solidity",">=","0.6",".2","<","0.8",".0"],"nodeType":"PragmaDirective","src":"33:31:5"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":874,"nodeType":"StructuredDocumentation","src":"66:67:5","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1167,"linearizedBaseContracts":[1167],"name":"Address","nodeType":"ContractDefinition","nodes":[{"body":{"id":890,"nodeType":"Block","src":"792:347:5","statements":[{"assignments":[883],"declarations":[{"constant":false,"id":883,"mutability":"mutable","name":"size","nodeType":"VariableDeclaration","scope":890,"src":"989:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":882,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":884,"nodeType":"VariableDeclarationStatement","src":"989:12:5"},{"AST":{"nodeType":"YulBlock","src":"1076:32:5","statements":[{"nodeType":"YulAssignment","src":"1078:28:5","value":{"arguments":[{"name":"account","nodeType":"YulIdentifier","src":"1098:7:5"}],"functionName":{"name":"extcodesize","nodeType":"YulIdentifier","src":"1086:11:5"},"nodeType":"YulFunctionCall","src":"1086:20:5"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1078:4:5"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":877,"isOffset":false,"isSlot":false,"src":"1098:7:5","valueSize":1},{"declaration":883,"isOffset":false,"isSlot":false,"src":"1078:4:5","valueSize":1}],"id":885,"nodeType":"InlineAssembly","src":"1067:41:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":886,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"1124:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1131:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1124:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":881,"id":889,"nodeType":"Return","src":"1117:15:5"}]},"documentation":{"id":875,"nodeType":"StructuredDocumentation","src":"156:565:5","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="},"id":891,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nodeType":"FunctionDefinition","parameters":{"id":878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":877,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":891,"src":"746:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":876,"name":"address","nodeType":"ElementaryTypeName","src":"746:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"745:17:5"},"returnParameters":{"id":881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":880,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":891,"src":"786:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":879,"name":"bool","nodeType":"ElementaryTypeName","src":"786:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"785:6:5"},"scope":1167,"src":"726:413:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":924,"nodeType":"Block","src":"2127:320:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":902,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2153:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1167","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1167","typeString":"library Address"}],"id":901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":900,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:5","typeDescriptions":{}}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2145:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2145:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":905,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"2170:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2145:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2178:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":899,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2137:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2137:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":909,"nodeType":"ExpressionStatement","src":"2137:73:5"},{"assignments":[911,null],"declarations":[{"constant":false,"id":911,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":924,"src":"2299:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":910,"name":"bool","nodeType":"ElementaryTypeName","src":"2299:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":918,"initialValue":{"arguments":[{"hexValue":"","id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2349:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":912,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"2317:9:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2317:14:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":914,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"2340:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2317:31:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2317:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2298:54:5"},{"expression":{"arguments":[{"id":920,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"2370:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2379:60:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":919,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2362:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2362:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":923,"nodeType":"ExpressionStatement","src":"2362:78:5"}]},"documentation":{"id":892,"nodeType":"StructuredDocumentation","src":"1145:906:5","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":925,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nodeType":"FunctionDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":925,"src":"2075:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"2075:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":925,"src":"2102:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":895,"name":"uint256","nodeType":"ElementaryTypeName","src":"2102:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2074:43:5"},"returnParameters":{"id":898,"nodeType":"ParameterList","parameters":[],"src":"2127:0:5"},"scope":1167,"src":"2056:391:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":941,"nodeType":"Block","src":"3277:82:5","statements":[{"expression":{"arguments":[{"id":936,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"3305:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":937,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"3313:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3319:32:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":935,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[942,962],"referencedDeclaration":962,"src":"3292:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3292:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":934,"id":940,"nodeType":"Return","src":"3285:67:5"}]},"documentation":{"id":926,"nodeType":"StructuredDocumentation","src":"2453:730:5","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":942,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nodeType":"FunctionDefinition","parameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":928,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":942,"src":"3210:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":927,"name":"address","nodeType":"ElementaryTypeName","src":"3210:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":930,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":942,"src":"3226:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":929,"name":"bytes","nodeType":"ElementaryTypeName","src":"3226:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3209:35:5"},"returnParameters":{"id":934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":933,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":942,"src":"3263:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":932,"name":"bytes","nodeType":"ElementaryTypeName","src":"3263:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3262:14:5"},"scope":1167,"src":"3188:171:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":961,"nodeType":"Block","src":"3698:76:5","statements":[{"expression":{"arguments":[{"id":955,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"3737:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":956,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"3745:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3751:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":958,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"3754:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":954,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[982,1032],"referencedDeclaration":1032,"src":"3715:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3715:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":953,"id":960,"nodeType":"Return","src":"3708:59:5"}]},"documentation":{"id":943,"nodeType":"StructuredDocumentation","src":"3365:211:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":962,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nodeType":"FunctionDefinition","parameters":{"id":950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":945,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":962,"src":"3603:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":944,"name":"address","nodeType":"ElementaryTypeName","src":"3603:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":947,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":962,"src":"3619:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":946,"name":"bytes","nodeType":"ElementaryTypeName","src":"3619:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":949,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":962,"src":"3638:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":948,"name":"string","nodeType":"ElementaryTypeName","src":"3638:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3602:63:5"},"returnParameters":{"id":953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":952,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":962,"src":"3684:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":951,"name":"bytes","nodeType":"ElementaryTypeName","src":"3684:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3683:14:5"},"scope":1167,"src":"3581:193:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":981,"nodeType":"Block","src":"4249:111:5","statements":[{"expression":{"arguments":[{"id":975,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"4288:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":976,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"4296:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"4302:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4309:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":974,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[982,1032],"referencedDeclaration":1032,"src":"4266:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4266:87:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":973,"id":980,"nodeType":"Return","src":"4259:94:5"}]},"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"3780:351:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":982,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nodeType":"FunctionDefinition","parameters":{"id":970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":982,"src":"4167:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"4167:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":982,"src":"4183:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":966,"name":"bytes","nodeType":"ElementaryTypeName","src":"4183:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":969,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":982,"src":"4202:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":968,"name":"uint256","nodeType":"ElementaryTypeName","src":"4202:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4166:50:5"},"returnParameters":{"id":973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":972,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":982,"src":"4235:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":971,"name":"bytes","nodeType":"ElementaryTypeName","src":"4235:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4234:14:5"},"scope":1167,"src":"4136:224:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1031,"nodeType":"Block","src":"4749:382:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":999,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4775:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1167","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1167","typeString":"library Address"}],"id":998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4767:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":997,"name":"address","nodeType":"ElementaryTypeName","src":"4767:7:5","typeDescriptions":{}}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4767:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"4767:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"4792:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4767:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4799:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":996,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4759:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4759:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1006,"nodeType":"ExpressionStatement","src":"4759:81:5"},{"expression":{"arguments":[{"arguments":[{"id":1009,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"4869:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1008,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"4858:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4858:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4878:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1007,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4850:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4850:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1013,"nodeType":"ExpressionStatement","src":"4850:60:5"},{"assignments":[1015,1017],"declarations":[{"constant":false,"id":1015,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":1031,"src":"4981:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1014,"name":"bool","nodeType":"ElementaryTypeName","src":"4981:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1017,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":1031,"src":"4995:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1016,"name":"bytes","nodeType":"ElementaryTypeName","src":"4995:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1024,"initialValue":{"arguments":[{"id":1022,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"5050:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1018,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"5022:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5022:11:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"5042:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5022:27:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5022:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4980:75:5"},{"expression":{"arguments":[{"id":1026,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"5090:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1027,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"5099:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1028,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"5111:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1025,"name":"_verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"5072:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5072:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":995,"id":1030,"nodeType":"Return","src":"5065:59:5"}]},"documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"4366:237:5","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1032,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nodeType":"FunctionDefinition","parameters":{"id":992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":1032,"src":"4639:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":984,"name":"address","nodeType":"ElementaryTypeName","src":"4639:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1032,"src":"4655:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":986,"name":"bytes","nodeType":"ElementaryTypeName","src":"4655:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":989,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":1032,"src":"4674:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":988,"name":"uint256","nodeType":"ElementaryTypeName","src":"4674:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":991,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":1032,"src":"4689:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":990,"name":"string","nodeType":"ElementaryTypeName","src":"4689:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4638:78:5"},"returnParameters":{"id":995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":994,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1032,"src":"4735:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":993,"name":"bytes","nodeType":"ElementaryTypeName","src":"4735:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4734:14:5"},"scope":1167,"src":"4608:523:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1048,"nodeType":"Block","src":"5408:97:5","statements":[{"expression":{"arguments":[{"id":1043,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"5444:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1044,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"5452:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5458:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1042,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1049,1084],"referencedDeclaration":1084,"src":"5425:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5425:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1041,"id":1047,"nodeType":"Return","src":"5418:80:5"}]},"documentation":{"id":1033,"nodeType":"StructuredDocumentation","src":"5137:166:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1049,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nodeType":"FunctionDefinition","parameters":{"id":1038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1035,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":1049,"src":"5336:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1034,"name":"address","nodeType":"ElementaryTypeName","src":"5336:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1037,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1049,"src":"5352:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1036,"name":"bytes","nodeType":"ElementaryTypeName","src":"5352:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5335:35:5"},"returnParameters":{"id":1041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1040,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1049,"src":"5394:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1039,"name":"bytes","nodeType":"ElementaryTypeName","src":"5394:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5393:14:5"},"scope":1167,"src":"5308:197:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1083,"nodeType":"Block","src":"5817:288:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":1063,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"5846:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1062,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"5835:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5835:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":1065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5855:38:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":1061,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5827:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5827:67:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1067,"nodeType":"ExpressionStatement","src":"5827:67:5"},{"assignments":[1069,1071],"declarations":[{"constant":false,"id":1069,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":1083,"src":"5965:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1068,"name":"bool","nodeType":"ElementaryTypeName","src":"5965:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1071,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":1083,"src":"5979:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1070,"name":"bytes","nodeType":"ElementaryTypeName","src":"5979:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1076,"initialValue":{"arguments":[{"id":1074,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"6024:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1072,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"6006:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6006:17:5","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6006:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5964:65:5"},{"expression":{"arguments":[{"id":1078,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"6064:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1079,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"6073:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1080,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"6085:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1077,"name":"_verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"6046:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6046:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1060,"id":1082,"nodeType":"Return","src":"6039:59:5"}]},"documentation":{"id":1050,"nodeType":"StructuredDocumentation","src":"5511:173:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1084,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nodeType":"FunctionDefinition","parameters":{"id":1057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1052,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":1084,"src":"5717:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1051,"name":"address","nodeType":"ElementaryTypeName","src":"5717:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1054,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1084,"src":"5733:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1053,"name":"bytes","nodeType":"ElementaryTypeName","src":"5733:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1056,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":1084,"src":"5752:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1055,"name":"string","nodeType":"ElementaryTypeName","src":"5752:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5716:63:5"},"returnParameters":{"id":1060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1059,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1084,"src":"5803:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1058,"name":"bytes","nodeType":"ElementaryTypeName","src":"5803:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5802:14:5"},"scope":1167,"src":"5689:416:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1100,"nodeType":"Block","src":"6381:101:5","statements":[{"expression":{"arguments":[{"id":1095,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"6419:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1096,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"6427:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6433:41:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1094,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1101,1136],"referencedDeclaration":1136,"src":"6398:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6398:77:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1093,"id":1099,"nodeType":"Return","src":"6391:84:5"}]},"documentation":{"id":1085,"nodeType":"StructuredDocumentation","src":"6111:168:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1101,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nodeType":"FunctionDefinition","parameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1087,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":1101,"src":"6314:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1086,"name":"address","nodeType":"ElementaryTypeName","src":"6314:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1089,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1101,"src":"6330:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1088,"name":"bytes","nodeType":"ElementaryTypeName","src":"6330:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6313:35:5"},"returnParameters":{"id":1093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1092,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1101,"src":"6367:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1091,"name":"bytes","nodeType":"ElementaryTypeName","src":"6367:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6366:14:5"},"scope":1167,"src":"6284:198:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1135,"nodeType":"Block","src":"6793:292:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":1115,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"6822:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1114,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"6811:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6811:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6831:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":1113,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6803:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6803:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1119,"nodeType":"ExpressionStatement","src":"6803:69:5"},{"assignments":[1121,1123],"declarations":[{"constant":false,"id":1121,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":1135,"src":"6943:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1120,"name":"bool","nodeType":"ElementaryTypeName","src":"6943:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1123,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":1135,"src":"6957:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1122,"name":"bytes","nodeType":"ElementaryTypeName","src":"6957:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1128,"initialValue":{"arguments":[{"id":1126,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"7004:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1124,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"6984:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"6984:19:5","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6984:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6942:67:5"},{"expression":{"arguments":[{"id":1130,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"7044:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1131,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"7053:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1132,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"7065:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1129,"name":"_verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"7026:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7026:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1112,"id":1134,"nodeType":"Return","src":"7019:59:5"}]},"documentation":{"id":1102,"nodeType":"StructuredDocumentation","src":"6488:175:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1136,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nodeType":"FunctionDefinition","parameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":1136,"src":"6698:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1103,"name":"address","nodeType":"ElementaryTypeName","src":"6698:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1106,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1136,"src":"6714:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1105,"name":"bytes","nodeType":"ElementaryTypeName","src":"6714:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1108,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":1136,"src":"6733:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1107,"name":"string","nodeType":"ElementaryTypeName","src":"6733:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6697:63:5"},"returnParameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1136,"src":"6779:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1110,"name":"bytes","nodeType":"ElementaryTypeName","src":"6779:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6778:14:5"},"scope":1167,"src":"6668:417:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1165,"nodeType":"Block","src":"7220:596:5","statements":[{"condition":{"id":1147,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"7234:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1163,"nodeType":"Block","src":"7291:519:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1151,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"7375:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7375:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7395:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7375:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1161,"nodeType":"Block","src":"7747:53:5","statements":[{"expression":{"arguments":[{"id":1158,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"7772:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1157,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7765:6:5","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7765:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1160,"nodeType":"ExpressionStatement","src":"7765:20:5"}]},"id":1162,"nodeType":"IfStatement","src":"7371:429:5","trueBody":{"id":1156,"nodeType":"Block","src":"7398:343:5","statements":[{"AST":{"nodeType":"YulBlock","src":"7582:145:5","statements":[{"nodeType":"YulVariableDeclaration","src":"7604:40:5","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"7633:10:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7627:5:5"},"nodeType":"YulFunctionCall","src":"7627:17:5"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"7608:15:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7676:2:5","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"7680:10:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7672:3:5"},"nodeType":"YulFunctionCall","src":"7672:19:5"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"7693:15:5"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7665:6:5"},"nodeType":"YulFunctionCall","src":"7665:44:5"},"nodeType":"YulExpressionStatement","src":"7665:44:5"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1140,"isOffset":false,"isSlot":false,"src":"7633:10:5","valueSize":1},{"declaration":1140,"isOffset":false,"isSlot":false,"src":"7680:10:5","valueSize":1}],"id":1155,"nodeType":"InlineAssembly","src":"7573:154:5"}]}}]},"id":1164,"nodeType":"IfStatement","src":"7230:580:5","trueBody":{"id":1150,"nodeType":"Block","src":"7243:42:5","statements":[{"expression":{"id":1148,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"7264:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1146,"id":1149,"nodeType":"Return","src":"7257:17:5"}]}}]},"id":1166,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyCallResult","nodeType":"FunctionDefinition","parameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1138,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":1166,"src":"7118:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1137,"name":"bool","nodeType":"ElementaryTypeName","src":"7118:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1140,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":1166,"src":"7132:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1139,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1142,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":1166,"src":"7157:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1141,"name":"string","nodeType":"ElementaryTypeName","src":"7157:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7117:67:5"},"returnParameters":{"id":1146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1145,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1166,"src":"7206:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1144,"name":"bytes","nodeType":"ElementaryTypeName","src":"7206:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7205:14:5"},"scope":1167,"src":"7091:725:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1168,"src":"134:7684:5"}],"src":"33:7786:5"},"id":5},"@openzeppelin/contracts-0.7/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-0.7/utils/Context.sol","exportedSymbols":{"Context":[1190]},"id":1191,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1169,"literals":["solidity",">=","0.6",".0","<","0.8",".0"],"nodeType":"PragmaDirective","src":"33:31:6"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1190,"linearizedBaseContracts":[1190],"name":"Context","nodeType":"ContractDefinition","nodes":[{"body":{"id":1177,"nodeType":"Block","src":"668:34:6","statements":[{"expression":{"expression":{"id":1174,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"685:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"685:10:6","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":1173,"id":1176,"nodeType":"Return","src":"678:17:6"}]},"id":1178,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nodeType":"FunctionDefinition","parameters":{"id":1170,"nodeType":"ParameterList","parameters":[],"src":"617:2:6"},"returnParameters":{"id":1173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1172,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1178,"src":"651:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1171,"name":"address","nodeType":"ElementaryTypeName","src":"651:15:6","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"650:17:6"},"scope":1190,"src":"598:104:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1188,"nodeType":"Block","src":"773:165:6","statements":[{"expression":{"id":1183,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"783:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_Context_$1190","typeString":"contract Context"}},"id":1184,"nodeType":"ExpressionStatement","src":"783:4:6"},{"expression":{"expression":{"id":1185,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"923:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"923:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1182,"id":1187,"nodeType":"Return","src":"916:15:6"}]},"id":1189,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nodeType":"FunctionDefinition","parameters":{"id":1179,"nodeType":"ParameterList","parameters":[],"src":"725:2:6"},"returnParameters":{"id":1182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1181,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1189,"src":"759:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1180,"name":"bytes","nodeType":"ElementaryTypeName","src":"759:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"758:14:6"},"scope":1190,"src":"708:230:6","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1191,"src":"566:374:6"}],"src":"33:908:6"},"id":6},"contracts/BurnMessage.sol":{"ast":{"absolutePath":"contracts/BurnMessage.sol","exportedSymbols":{"BurnMessage":[1361],"SafeMath":[580],"TypedMemView":[4090]},"id":1362,"nodeType":"SourceUnit","nodes":[{"id":1192,"literals":["solidity","0.7",".6"],"nodeType":"PragmaDirective","src":"619:22:7"},{"absolutePath":"contracts/TypedMemView.sol","file":"./TypedMemView.sol","id":1193,"nodeType":"ImportDirective","scope":1362,"sourceUnit":4091,"src":"643:28:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1194,"nodeType":"StructuredDocumentation","src":"673:438:7","text":" @title BurnMessage Library\n @notice Library for formatted BurnMessages used by TokenMessenger.\n @dev BurnMessage format:\n Field                 Bytes      Type       Index\n version               4          uint32     0\n burnToken             32         bytes32    4\n mintRecipient         32         bytes32    36\n amount                32         uint256    68\n messageSender         32         bytes32    100*"},"fullyImplemented":true,"id":1361,"linearizedBaseContracts":[1361],"name":"BurnMessage","nodeType":"ContractDefinition","nodes":[{"id":1197,"libraryName":{"id":1195,"name":"TypedMemView","nodeType":"UserDefinedTypeName","referencedDeclaration":4090,"src":"1144:12:7","typeDescriptions":{"typeIdentifier":"t_contract$_TypedMemView_$4090","typeString":"library TypedMemView"}},"nodeType":"UsingForDirective","src":"1138:29:7","typeName":{"id":1196,"name":"bytes","nodeType":"ElementaryTypeName","src":"1161:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},{"id":1200,"libraryName":{"id":1198,"name":"TypedMemView","nodeType":"UserDefinedTypeName","referencedDeclaration":4090,"src":"1178:12:7","typeDescriptions":{"typeIdentifier":"t_contract$_TypedMemView_$4090","typeString":"library TypedMemView"}},"nodeType":"UsingForDirective","src":"1172:31:7","typeName":{"id":1199,"name":"bytes29","nodeType":"ElementaryTypeName","src":"1195:7:7","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}},{"constant":true,"id":1203,"mutability":"constant","name":"VERSION_INDEX","nodeType":"VariableDeclaration","scope":1361,"src":"1209:40:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1201,"name":"uint8","nodeType":"ElementaryTypeName","src":"1209:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"30","id":1202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1248:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"private"},{"constant":true,"id":1206,"mutability":"constant","name":"VERSION_LEN","nodeType":"VariableDeclaration","scope":1361,"src":"1255:38:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1204,"name":"uint8","nodeType":"ElementaryTypeName","src":"1255:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"34","id":1205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1292:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"visibility":"private"},{"constant":true,"id":1209,"mutability":"constant","name":"BURN_TOKEN_INDEX","nodeType":"VariableDeclaration","scope":1361,"src":"1299:43:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1207,"name":"uint8","nodeType":"ElementaryTypeName","src":"1299:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"34","id":1208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1341:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"visibility":"private"},{"constant":true,"id":1212,"mutability":"constant","name":"BURN_TOKEN_LEN","nodeType":"VariableDeclaration","scope":1361,"src":"1348:42:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1210,"name":"uint8","nodeType":"ElementaryTypeName","src":"1348:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3332","id":1211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1388:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"visibility":"private"},{"constant":true,"id":1215,"mutability":"constant","name":"MINT_RECIPIENT_INDEX","nodeType":"VariableDeclaration","scope":1361,"src":"1396:48:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1213,"name":"uint8","nodeType":"ElementaryTypeName","src":"1396:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3336","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1442:2:7","typeDescriptions":{"typeIdentifier":"t_rational_36_by_1","typeString":"int_const 36"},"value":"36"},"visibility":"private"},{"constant":true,"id":1218,"mutability":"constant","name":"MINT_RECIPIENT_LEN","nodeType":"VariableDeclaration","scope":1361,"src":"1450:46:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1216,"name":"uint8","nodeType":"ElementaryTypeName","src":"1450:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3332","id":1217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1494:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"visibility":"private"},{"constant":true,"id":1221,"mutability":"constant","name":"AMOUNT_INDEX","nodeType":"VariableDeclaration","scope":1361,"src":"1502:40:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1219,"name":"uint8","nodeType":"ElementaryTypeName","src":"1502:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3638","id":1220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1540:2:7","typeDescriptions":{"typeIdentifier":"t_rational_68_by_1","typeString":"int_const 68"},"value":"68"},"visibility":"private"},{"constant":true,"id":1224,"mutability":"constant","name":"AMOUNT_LEN","nodeType":"VariableDeclaration","scope":1361,"src":"1548:38:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1222,"name":"uint8","nodeType":"ElementaryTypeName","src":"1548:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3332","id":1223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1584:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"visibility":"private"},{"constant":true,"id":1227,"mutability":"constant","name":"MSG_SENDER_INDEX","nodeType":"VariableDeclaration","scope":1361,"src":"1592:45:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1225,"name":"uint8","nodeType":"ElementaryTypeName","src":"1592:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"313030","id":1226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1634:3:7","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"private"},{"constant":true,"id":1230,"mutability":"constant","name":"MSG_SENDER_LEN","nodeType":"VariableDeclaration","scope":1361,"src":"1643:42:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1228,"name":"uint8","nodeType":"ElementaryTypeName","src":"1643:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3332","id":1229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1683:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"visibility":"private"},{"constant":true,"id":1233,"mutability":"constant","name":"BURN_MESSAGE_LEN","nodeType":"VariableDeclaration","scope":1361,"src":"1802:45:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1231,"name":"uint8","nodeType":"ElementaryTypeName","src":"1802:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"313332","id":1232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1844:3:7","typeDescriptions":{"typeIdentifier":"t_rational_132_by_1","typeString":"int_const 132"},"value":"132"},"visibility":"private"},{"body":{"id":1258,"nodeType":"Block","src":"2431:209:7","statements":[{"expression":{"arguments":[{"id":1251,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"2494:8:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":1252,"name":"_burnToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"2520:10:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1253,"name":"_mintRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"2548:14:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1254,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"2580:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1255,"name":"_messageSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"2605:14:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1249,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2460:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"2460:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2460:173:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1248,"id":1257,"nodeType":"Return","src":"2441:192:7"}]},"documentation":{"id":1234,"nodeType":"StructuredDocumentation","src":"1854:363:7","text":" @notice Formats Burn message\n @param _version The message body version\n @param _burnToken The burn token address on source domain as bytes32\n @param _mintRecipient The mint recipient address as bytes32\n @param _amount The burn amount\n @param _messageSender The message sender\n @return Burn formatted message."},"id":1259,"implemented":true,"kind":"function","modifiers":[],"name":"_formatMessage","nodeType":"FunctionDefinition","parameters":{"id":1245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1236,"mutability":"mutable","name":"_version","nodeType":"VariableDeclaration","scope":1259,"src":"2255:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1235,"name":"uint32","nodeType":"ElementaryTypeName","src":"2255:6:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1238,"mutability":"mutable","name":"_burnToken","nodeType":"VariableDeclaration","scope":1259,"src":"2280:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1237,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2280:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1240,"mutability":"mutable","name":"_mintRecipient","nodeType":"VariableDeclaration","scope":1259,"src":"2308:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1239,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2308:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1242,"mutability":"mutable","name":"_amount","nodeType":"VariableDeclaration","scope":1259,"src":"2340:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1241,"name":"uint256","nodeType":"ElementaryTypeName","src":"2340:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1244,"mutability":"mutable","name":"_messageSender","nodeType":"VariableDeclaration","scope":1259,"src":"2365:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1243,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2365:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2245:148:7"},"returnParameters":{"id":1248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1247,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1259,"src":"2417:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1246,"name":"bytes","nodeType":"ElementaryTypeName","src":"2417:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2416:14:7"},"scope":1361,"src":"2222:418:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1273,"nodeType":"Block","src":"2921:72:7","statements":[{"expression":{"arguments":[{"id":1269,"name":"MSG_SENDER_INDEX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"2953:16:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1270,"name":"MSG_SENDER_LEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"2971:14:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":1267,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"2938:8:7","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"index","nodeType":"MemberAccess","referencedDeclaration":3577,"src":"2938:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_uint256_$_t_uint8_$returns$_t_bytes32_$bound_to$_t_bytes29_$","typeString":"function (bytes29,uint256,uint8) pure returns (bytes32)"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2938:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1266,"id":1272,"nodeType":"Return","src":"2931:55:7"}]},"documentation":{"id":1260,"nodeType":"StructuredDocumentation","src":"2646:165:7","text":" @notice Retrieves the burnToken from a DepositForBurn BurnMessage\n @param _message The message\n @return sourceToken address as bytes32"},"id":1274,"implemented":true,"kind":"function","modifiers":[],"name":"_getMessageSender","nodeType":"FunctionDefinition","parameters":{"id":1263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1262,"mutability":"mutable","name":"_message","nodeType":"VariableDeclaration","scope":1274,"src":"2843:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":1261,"name":"bytes29","nodeType":"ElementaryTypeName","src":"2843:7:7","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"2842:18:7"},"returnParameters":{"id":1266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1265,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1274,"src":"2908:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1264,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2908:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2907:9:7"},"scope":1361,"src":"2816:177:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1288,"nodeType":"Block","src":"3242:72:7","statements":[{"expression":{"arguments":[{"id":1284,"name":"BURN_TOKEN_INDEX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"3274:16:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1285,"name":"BURN_TOKEN_LEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"3292:14:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":1282,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"3259:8:7","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"index","nodeType":"MemberAccess","referencedDeclaration":3577,"src":"3259:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_uint256_$_t_uint8_$returns$_t_bytes32_$bound_to$_t_bytes29_$","typeString":"function (bytes29,uint256,uint8) pure returns (bytes32)"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3259:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1281,"id":1287,"nodeType":"Return","src":"3252:55:7"}]},"documentation":{"id":1275,"nodeType":"StructuredDocumentation","src":"2999:165:7","text":" @notice Retrieves the burnToken from a DepositForBurn BurnMessage\n @param _message The message\n @return sourceToken address as bytes32"},"id":1289,"implemented":true,"kind":"function","modifiers":[],"name":"_getBurnToken","nodeType":"FunctionDefinition","parameters":{"id":1278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1277,"mutability":"mutable","name":"_message","nodeType":"VariableDeclaration","scope":1289,"src":"3192:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":1276,"name":"bytes29","nodeType":"ElementaryTypeName","src":"3192:7:7","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"3191:18:7"},"returnParameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1289,"src":"3233:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1279,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3233:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3232:9:7"},"scope":1361,"src":"3169:145:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1303,"nodeType":"Block","src":"3567:80:7","statements":[{"expression":{"arguments":[{"id":1299,"name":"MINT_RECIPIENT_INDEX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"3599:20:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1300,"name":"MINT_RECIPIENT_LEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"3621:18:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":1297,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"3584:8:7","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"index","nodeType":"MemberAccess","referencedDeclaration":3577,"src":"3584:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_uint256_$_t_uint8_$returns$_t_bytes32_$bound_to$_t_bytes29_$","typeString":"function (bytes29,uint256,uint8) pure returns (bytes32)"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3584:56:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1296,"id":1302,"nodeType":"Return","src":"3577:63:7"}]},"documentation":{"id":1290,"nodeType":"StructuredDocumentation","src":"3320:137:7","text":" @notice Retrieves the mintRecipient from a BurnMessage\n @param _message The message\n @return mintRecipient"},"id":1304,"implemented":true,"kind":"function","modifiers":[],"name":"_getMintRecipient","nodeType":"FunctionDefinition","parameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"mutability":"mutable","name":"_message","nodeType":"VariableDeclaration","scope":1304,"src":"3489:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":1291,"name":"bytes29","nodeType":"ElementaryTypeName","src":"3489:7:7","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"3488:18:7"},"returnParameters":{"id":1296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1295,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1304,"src":"3554:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1294,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3554:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3553:9:7"},"scope":1361,"src":"3462:185:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1318,"nodeType":"Block","src":"3851:68:7","statements":[{"expression":{"arguments":[{"id":1314,"name":"AMOUNT_INDEX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"3887:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1315,"name":"AMOUNT_LEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"3901:10:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":1312,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"3868:8:7","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"indexUint","nodeType":"MemberAccess","referencedDeclaration":3607,"src":"3868:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_uint256_$_t_uint8_$returns$_t_uint256_$bound_to$_t_bytes29_$","typeString":"function (bytes29,uint256,uint8) pure returns (uint256)"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3868:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1311,"id":1317,"nodeType":"Return","src":"3861:51:7"}]},"documentation":{"id":1305,"nodeType":"StructuredDocumentation","src":"3653:123:7","text":" @notice Retrieves the amount from a BurnMessage\n @param _message The message\n @return amount"},"id":1319,"implemented":true,"kind":"function","modifiers":[],"name":"_getAmount","nodeType":"FunctionDefinition","parameters":{"id":1308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1307,"mutability":"mutable","name":"_message","nodeType":"VariableDeclaration","scope":1319,"src":"3801:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":1306,"name":"bytes29","nodeType":"ElementaryTypeName","src":"3801:7:7","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"3800:18:7"},"returnParameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1319,"src":"3842:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1309,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3841:9:7"},"scope":1361,"src":"3781:138:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1336,"nodeType":"Block","src":"4126:78:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1331,"name":"VERSION_INDEX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"4169:13:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1332,"name":"VERSION_LEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"4184:11:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":1329,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"4150:8:7","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"indexUint","nodeType":"MemberAccess","referencedDeclaration":3607,"src":"4150:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_uint256_$_t_uint8_$returns$_t_uint256_$bound_to$_t_bytes29_$","typeString":"function (bytes29,uint256,uint8) pure returns (uint256)"}},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4150:46:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4143:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":1327,"name":"uint32","nodeType":"ElementaryTypeName","src":"4143:6:7","typeDescriptions":{}}},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4143:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":1326,"id":1335,"nodeType":"Return","src":"4136:61:7"}]},"documentation":{"id":1320,"nodeType":"StructuredDocumentation","src":"3925:126:7","text":" @notice Retrieves the version from a Burn message\n @param _message The message\n @return version"},"id":1337,"implemented":true,"kind":"function","modifiers":[],"name":"_getVersion","nodeType":"FunctionDefinition","parameters":{"id":1323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1322,"mutability":"mutable","name":"_message","nodeType":"VariableDeclaration","scope":1337,"src":"4077:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":1321,"name":"bytes29","nodeType":"ElementaryTypeName","src":"4077:7:7","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"4076:18:7"},"returnParameters":{"id":1326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1325,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1337,"src":"4118:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1324,"name":"uint32","nodeType":"ElementaryTypeName","src":"4118:6:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4117:8:7"},"scope":1361,"src":"4056:148:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1359,"nodeType":"Block","src":"4415:144:7","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1344,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"4433:8:7","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isValid","nodeType":"MemberAccess","referencedDeclaration":3011,"src":"4433:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bool_$bound_to$_t_bytes29_$","typeString":"function (bytes29) pure returns (bool)"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4433:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d616c666f726d6564206d657373616765","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4453:19:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_6aa48674e27153274c8d5e6c059fdd68ef7c7da1904043a7f3ef41951a4238fb","typeString":"literal_string \"Malformed message\""},"value":"Malformed message"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6aa48674e27153274c8d5e6c059fdd68ef7c7da1904043a7f3ef41951a4238fb","typeString":"literal_string \"Malformed message\""}],"id":1343,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4425:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4425:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1349,"nodeType":"ExpressionStatement","src":"4425:48:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1351,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"4491:8:7","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"len","nodeType":"MemberAccess","referencedDeclaration":3319,"src":"4491:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$bound_to$_t_bytes29_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4491:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1354,"name":"BURN_MESSAGE_LEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"4509:16:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4491:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206d657373616765206c656e677468","id":1356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4527:24:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_19b20a402f9200e565c50b34f55bee5a78a3eddb08f1ac324f0288b1fbe611a9","typeString":"literal_string \"Invalid message length\""},"value":"Invalid message length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_19b20a402f9200e565c50b34f55bee5a78a3eddb08f1ac324f0288b1fbe611a9","typeString":"literal_string \"Invalid message length\""}],"id":1350,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4483:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4483:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1358,"nodeType":"ExpressionStatement","src":"4483:69:7"}]},"documentation":{"id":1338,"nodeType":"StructuredDocumentation","src":"4210:132:7","text":" @notice Reverts if burn message is malformed or invalid length\n @param _message The burn message as bytes29"},"id":1360,"implemented":true,"kind":"function","modifiers":[],"name":"_validateBurnMessageFormat","nodeType":"FunctionDefinition","parameters":{"id":1341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1340,"mutability":"mutable","name":"_message","nodeType":"VariableDeclaration","scope":1360,"src":"4383:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":1339,"name":"bytes29","nodeType":"ElementaryTypeName","src":"4383:7:7","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"4382:18:7"},"returnParameters":{"id":1342,"nodeType":"ParameterList","parameters":[],"src":"4415:0:7"},"scope":1361,"src":"4347:212:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1362,"src":"1112:3449:7"}],"src":"619:3942:7"},"id":7},"contracts/BurnMessageV2.sol":{"ast":{"absolutePath":"contracts/BurnMessageV2.sol","exportedSymbols":{"BurnMessage":[1361],"BurnMessageV2":[1574],"TypedMemView":[4090]},"id":1575,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1363,"literals":["solidity","0.7",".6"],"nodeType":"PragmaDirective","src":"675:22:8"},{"absolutePath":"contracts/TypedMemView.sol","file":"./TypedMemView.sol","id":1365,"nodeType":"ImportDirective","scope":1575,"sourceUnit":4091,"src":"699:48:8","symbolAliases":[{"foreign":{"id":1364,"name":"TypedMemView","nodeType":"Identifier","overloadedDeclarations":[],"src":"707:12:8","typeDescriptions":{}}}],"unitAlias":""},{"absolutePath":"contracts/BurnMessage.sol","file":"./BurnMessage.sol","id":1367,"nodeType":"ImportDirective","scope":1575,"sourceUnit":1362,"src":"748:46:8","symbolAliases":[{"foreign":{"id":1366,"name":"BurnMessage","nodeType":"Identifier","overloadedDeclarations":[],"src":"756:11:8","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1368,"nodeType":"StructuredDocumentation","src":"796:742:8","text":" @title BurnMessageV2 Library\n @notice Library for formatted V2 BurnMessages used by TokenMessengerV2.\n @dev BurnMessageV2 format:\n Field                 Bytes      Type       Index\n version               4          uint32     0\n burnToken             32         bytes32    4\n mintRecipient         32         bytes32    36\n amount                32         uint256    68\n messageSender         32         bytes32    100\n maxFee                32         uint256    132\n feeExecuted           32         uint256    164\n expirationBlock       32         uint256    196\n hookData              dynamic    bytes      228\n @dev Additions from v1:\n - maxFee\n - feeExecuted\n - expirationBlock\n - hookData*"},"fullyImplemented":true,"id":1574,"linearizedBaseContracts":[1574],"name":"BurnMessageV2","nodeType":"ContractDefinition","nodes":[{"id":1371,"libraryName":{"id":1369,"name":"TypedMemView","nodeType":"UserDefinedTypeName","referencedDeclaration":4090,"src":"1573:12:8","typeDescriptions":{"typeIdentifier":"t_contract$_TypedMemView_$4090","typeString":"library TypedMemView"}},"nodeType":"UsingForDirective","src":"1567:29:8","typeName":{"id":1370,"name":"bytes","nodeType":"ElementaryTypeName","src":"1590:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},{"id":1374,"libraryName":{"id":1372,"name":"TypedMemView","nodeType":"UserDefinedTypeName","referencedDeclaration":4090,"src":"1607:12:8","typeDescriptions":{"typeIdentifier":"t_contract$_TypedMemView_$4090","typeString":"library TypedMemView"}},"nodeType":"UsingForDirective","src":"1601:31:8","typeName":{"id":1373,"name":"bytes29","nodeType":"ElementaryTypeName","src":"1624:7:8","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}},{"id":1377,"libraryName":{"id":1375,"name":"BurnMessage","nodeType":"UserDefinedTypeName","referencedDeclaration":1361,"src":"1643:11:8","typeDescriptions":{"typeIdentifier":"t_contract$_BurnMessage_$1361","typeString":"library BurnMessage"}},"nodeType":"UsingForDirective","src":"1637:30:8","typeName":{"id":1376,"name":"bytes29","nodeType":"ElementaryTypeName","src":"1659:7:8","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}},{"constant":true,"id":1380,"mutability":"constant","name":"MAX_FEE_INDEX","nodeType":"VariableDeclaration","scope":1574,"src":"1694:42:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1378,"name":"uint8","nodeType":"ElementaryTypeName","src":"1694:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"313332","id":1379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1733:3:8","typeDescriptions":{"typeIdentifier":"t_rational_132_by_1","typeString":"int_const 132"},"value":"132"},"visibility":"private"},{"constant":true,"id":1383,"mutability":"constant","name":"FEE_EXECUTED_INDEX","nodeType":"VariableDeclaration","scope":1574,"src":"1742:47:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1381,"name":"uint8","nodeType":"ElementaryTypeName","src":"1742:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"313634","id":1382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1786:3:8","typeDescriptions":{"typeIdentifier":"t_rational_164_by_1","typeString":"int_const 164"},"value":"164"},"visibility":"private"},{"constant":true,"id":1386,"mutability":"constant","name":"EXPIRATION_BLOCK_INDEX","nodeType":"VariableDeclaration","scope":1574,"src":"1795:51:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1384,"name":"uint8","nodeType":"ElementaryTypeName","src":"1795:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"313936","id":1385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:3:8","typeDescriptions":{"typeIdentifier":"t_rational_196_by_1","typeString":"int_const 196"},"value":"196"},"visibility":"private"},{"constant":true,"id":1389,"mutability":"constant","name":"HOOK_DATA_INDEX","nodeType":"VariableDeclaration","scope":1574,"src":"1852:44:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1387,"name":"uint8","nodeType":"ElementaryTypeName","src":"1852:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"323238","id":1388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1893:3:8","typeDescriptions":{"typeIdentifier":"t_rational_228_by_1","typeString":"int_const 228"},"value":"228"},"visibility":"private"},{"constant":true,"id":1392,"mutability":"constant","name":"EMPTY_FEE_EXECUTED","nodeType":"VariableDeclaration","scope":1574,"src":"1903:47:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1390,"name":"uint256","nodeType":"ElementaryTypeName","src":"1903:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1949:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"private"},{"constant":true,"id":1395,"mutability":"constant","name":"EMPTY_EXPIRATION_BLOCK","nodeType":"VariableDeclaration","scope":1574,"src":"1956:51:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1393,"name":"uint256","nodeType":"ElementaryTypeName","src":"1956:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2006:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"private"},{"body":{"id":1428,"nodeType":"Block","src":"2824:337:8","statements":[{"expression":{"arguments":[{"id":1417,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"2887:8:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":1418,"name":"_burnToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"2913:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1419,"name":"_mintRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"2941:14:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1420,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"2973:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1421,"name":"_messageSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"2998:14:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1422,"name":"_maxFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"3030:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1423,"name":"EMPTY_FEE_EXECUTED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"3055:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1424,"name":"EMPTY_EXPIRATION_BLOCK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"3091:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1425,"name":"_hookData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"3131:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1415,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2853:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"2853:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2853:301:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1414,"id":1427,"nodeType":"Return","src":"2834:320:8"}]},"documentation":{"id":1396,"nodeType":"StructuredDocumentation","src":"2014:529:8","text":" @notice Formats a V2 burn message\n @param _version The message body version\n @param _burnToken The burn token address on the source domain, as bytes32\n @param _mintRecipient The mint recipient address as bytes32\n @param _amount The burn amount\n @param _messageSender The message sender\n @param _maxFee The maximum fee to be paid on destination domain\n @param _hookData Optional hook data for processing on the destination domain\n @return Formatted message bytes."},"id":1429,"implemented":true,"kind":"function","modifiers":[],"name":"_formatMessageForRelay","nodeType":"FunctionDefinition","parameters":{"id":1411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1398,"mutability":"mutable","name":"_version","nodeType":"VariableDeclaration","scope":1429,"src":"2589:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1397,"name":"uint32","nodeType":"ElementaryTypeName","src":"2589:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1400,"mutability":"mutable","name":"_burnToken","nodeType":"VariableDeclaration","scope":1429,"src":"2614:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1399,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2614:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1402,"mutability":"mutable","name":"_mintRecipient","nodeType":"VariableDeclaration","scope":1429,"src":"2642:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1401,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2642:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1404,"mutability":"mutable","name":"_amount","nodeType":"VariableDeclaration","scope":1429,"src":"2674:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1403,"name":"uint256","nodeType":"ElementaryTypeName","src":"2674:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1406,"mutability":"mutable","name":"_messageSender","nodeType":"VariableDeclaration","scope":1429,"src":"2699:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1405,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2699:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1408,"mutability":"mutable","name":"_maxFee","nodeType":"VariableDeclaration","scope":1429,"src":"2731:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1407,"name":"uint256","nodeType":"ElementaryTypeName","src":"2731:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1410,"mutability":"mutable","name":"_hookData","nodeType":"VariableDeclaration","scope":1429,"src":"2756:24:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1409,"name":"bytes","nodeType":"ElementaryTypeName","src":"2756:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2579:207:8"},"returnParameters":{"id":1414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1413,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1429,"src":"2810:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1412,"name":"bytes","nodeType":"ElementaryTypeName","src":"2810:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2809:14:8"},"scope":1574,"src":"2548:613:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1440,"nodeType":"Block","src":"3285:46:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1436,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"3302:8:8","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_getVersion","nodeType":"MemberAccess","referencedDeclaration":1337,"src":"3302:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint32_$bound_to$_t_bytes29_$","typeString":"function (bytes29) pure returns (uint32)"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3302:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":1435,"id":1439,"nodeType":"Return","src":"3295:29:8"}]},"id":1441,"implemented":true,"kind":"function","modifiers":[],"name":"_getVersion","nodeType":"FunctionDefinition","parameters":{"id":1432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1431,"mutability":"mutable","name":"_message","nodeType":"VariableDeclaration","scope":1441,"src":"3236:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":1430,"name":"bytes29","nodeType":"ElementaryTypeName","src":"3236:7:8","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"3235:18:8"},"returnParameters":{"id":1435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1434,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1441,"src":"3277:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1433,"name":"uint32","nodeType":"ElementaryTypeName","src":"3277:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3276:8:8"},"scope":1574,"src":"3215:116:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1452,"nodeType":"Block","src":"3460:48:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1448,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"3477:8:8","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_getBurnToken","nodeType":"MemberAccess","referencedDeclaration":1289,"src":"3477:22:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bytes32_$bound_to$_t_bytes29_$","typeString":"function (bytes29) pure returns (bytes32)"}},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3477:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1447,"id":1451,"nodeType":"Return","src":"3470:31:8"}]},"id":1453,"implemented":true,"kind":"function","modifiers":[],"name":"_getBurnToken","nodeType":"FunctionDefinition","parameters":{"id":1444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1443,"mutability":"mutable","name":"_message","nodeType":"VariableDeclaration","scope":1453,"src":"3410:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":1442,"name":"bytes29","nodeType":"ElementaryTypeName","src":"3410:7:8","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"3409:18:8"},"returnParameters":{"id":1447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1446,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1453,"src":"3451:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3451:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3450:9:8"},"scope":1574,"src":"3387:121:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1464,"nodeType":"Block","src":"3659:52:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1460,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"3676:8:8","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_getMintRecipient","nodeType":"MemberAccess","referencedDeclaration":1304,"src":"3676:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bytes32_$bound_to$_t_bytes29_$","typeString":"function (bytes29) pure returns (bytes32)"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3676:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1459,"id":1463,"nodeType":"Return","src":"3669:35:8"}]},"id":1465,"implemented":true,"kind":"function","modifiers":[],"name":"_getMintRecipient","nodeType":"FunctionDefinition","parameters":{"id":1456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1455,"mutability":"mutable","name":"_message","nodeType":"VariableDeclaration","scope":1465,"src":"3604:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":1454,"name":"bytes29","nodeType":"ElementaryTypeName","src":"3604:7:8","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"3594:32:8"},"returnParameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1458,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1465,"src":"3650:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1457,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3650:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3649:9:8"},"scope":1574,"src":"3568:143:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1476,"nodeType":"Block","src":"3834:45:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1472,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"3851:8:8","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_getAmount","nodeType":"MemberAccess","referencedDeclaration":1319,"src":"3851:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint256_$bound_to$_t_bytes29_$","typeString":"function (bytes29) pure returns (uint256)"}},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3851:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1471,"id":1475,"nodeType":"Return","src":"3844:28:8"}]},"id":1477,"implemented":true,"kind":"function","modifiers":[],"name":"_getAmount","nodeType":"FunctionDefinition","parameters":{"id":1468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1467,"mutability":"mutable","name":"_message","nodeType":"VariableDeclaration","scope":1477,"src":"3784:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":1466,"name":"bytes29","nodeType":"ElementaryTypeName","src":"3784:7:8","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"3783:18:8"},"returnParameters":{"id":1471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1470,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1477,"src":"3825:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1469,"name":"uint256","nodeType":"ElementaryTypeName","src":"3825:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3824:9:8"},"scope":1574,"src":"3764:115:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1488,"nodeType":"Block","src":"4030:52:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1484,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"4047:8:8","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_getMessageSender","nodeType":"MemberAccess","referencedDeclaration":1274,"src":"4047:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bytes32_$bound_to$_t_bytes29_$","typeString":"function (bytes29) pure returns (bytes32)"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4047:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1483,"id":1487,"nodeType":"Return","src":"4040:35:8"}]},"id":1489,"implemented":true,"kind":"function","modifiers":[],"name":"_getMessageSender","nodeType":"FunctionDefinition","parameters":{"id":1480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1479,"mutability":"mutable","name":"_message","nodeType":"VariableDeclaration","scope":1489,"src":"3975:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":1478,"name":"bytes29","nodeType":"ElementaryTypeName","src":"3975:7:8","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"3965:32:8"},"returnParameters":{"id":1483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1482,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1489,"src":"4021:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1481,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4021:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4020:9:8"},"scope":1574,"src":"3939:143:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1502,"nodeType":"Block","src":"4205:61:8","statements":[{"expression":{"arguments":[{"id":1498,"name":"MAX_FEE_INDEX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"4241:13:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"hexValue":"3332","id":1499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4256:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":1496,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"4222:8:8","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"indexUint","nodeType":"MemberAccess","referencedDeclaration":3607,"src":"4222:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_uint256_$_t_uint8_$returns$_t_uint256_$bound_to$_t_bytes29_$","typeString":"function (bytes29,uint256,uint8) pure returns (uint256)"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4222:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1495,"id":1501,"nodeType":"Return","src":"4215:44:8"}]},"id":1503,"implemented":true,"kind":"function","modifiers":[],"name":"_getMaxFee","nodeType":"FunctionDefinition","parameters":{"id":1492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1491,"mutability":"mutable","name":"_message","nodeType":"VariableDeclaration","scope":1503,"src":"4155:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":1490,"name":"bytes29","nodeType":"ElementaryTypeName","src":"4155:7:8","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"4154:18:8"},"returnParameters":{"id":1495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1503,"src":"4196:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1493,"name":"uint256","nodeType":"ElementaryTypeName","src":"4196:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4195:9:8"},"scope":1574,"src":"4135:131:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1516,"nodeType":"Block","src":"4399:66:8","statements":[{"expression":{"arguments":[{"id":1512,"name":"FEE_EXECUTED_INDEX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"4435:18:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"hexValue":"3332","id":1513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4455:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":1510,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"4416:8:8","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"indexUint","nodeType":"MemberAccess","referencedDeclaration":3607,"src":"4416:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_uint256_$_t_uint8_$returns$_t_uint256_$bound_to$_t_bytes29_$","typeString":"function (bytes29,uint256,uint8) pure returns (uint256)"}},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4416:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1509,"id":1515,"nodeType":"Return","src":"4409:49:8"}]},"id":1517,"implemented":true,"kind":"function","modifiers":[],"name":"_getFeeExecuted","nodeType":"FunctionDefinition","parameters":{"id":1506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1505,"mutability":"mutable","name":"_message","nodeType":"VariableDeclaration","scope":1517,"src":"4349:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":1504,"name":"bytes29","nodeType":"ElementaryTypeName","src":"4349:7:8","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"4348:18:8"},"returnParameters":{"id":1509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1508,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1517,"src":"4390:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1507,"name":"uint256","nodeType":"ElementaryTypeName","src":"4390:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4389:9:8"},"scope":1574,"src":"4324:141:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1530,"nodeType":"Block","src":"4620:70:8","statements":[{"expression":{"arguments":[{"id":1526,"name":"EXPIRATION_BLOCK_INDEX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"4656:22:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"hexValue":"3332","id":1527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4680:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":1524,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"4637:8:8","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"indexUint","nodeType":"MemberAccess","referencedDeclaration":3607,"src":"4637:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_uint256_$_t_uint8_$returns$_t_uint256_$bound_to$_t_bytes29_$","typeString":"function (bytes29,uint256,uint8) pure returns (uint256)"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4637:46:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1523,"id":1529,"nodeType":"Return","src":"4630:53:8"}]},"id":1531,"implemented":true,"kind":"function","modifiers":[],"name":"_getExpirationBlock","nodeType":"FunctionDefinition","parameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"mutability":"mutable","name":"_message","nodeType":"VariableDeclaration","scope":1531,"src":"4565:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":1518,"name":"bytes29","nodeType":"ElementaryTypeName","src":"4565:7:8","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"4555:32:8"},"returnParameters":{"id":1523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1522,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1531,"src":"4611:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1521,"name":"uint256","nodeType":"ElementaryTypeName","src":"4611:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4610:9:8"},"scope":1574,"src":"4527:163:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1549,"nodeType":"Block","src":"4817:166:8","statements":[{"expression":{"arguments":[{"id":1540,"name":"HOOK_DATA_INDEX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"4878:15:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1541,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"4911:8:8","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"len","nodeType":"MemberAccess","referencedDeclaration":3319,"src":"4911:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$bound_to$_t_bytes29_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4911:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1544,"name":"HOOK_DATA_INDEX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"4928:15:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4911:32:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4961:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1538,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"4846:8:8","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"slice","nodeType":"MemberAccess","referencedDeclaration":3385,"src":"4846:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_uint256_$_t_uint256_$_t_uint40_$returns$_t_bytes29_$bound_to$_t_bytes29_$","typeString":"function (bytes29,uint256,uint256,uint40) pure returns (bytes29)"}},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4846:130:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"functionReturnParameters":1537,"id":1548,"nodeType":"Return","src":"4827:149:8"}]},"id":1550,"implemented":true,"kind":"function","modifiers":[],"name":"_getHookData","nodeType":"FunctionDefinition","parameters":{"id":1534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1533,"mutability":"mutable","name":"_message","nodeType":"VariableDeclaration","scope":1550,"src":"4767:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":1532,"name":"bytes29","nodeType":"ElementaryTypeName","src":"4767:7:8","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"4766:18:8"},"returnParameters":{"id":1537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1536,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1550,"src":"4808:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":1535,"name":"bytes29","nodeType":"ElementaryTypeName","src":"4808:7:8","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"4807:9:8"},"scope":1574,"src":"4745:238:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1572,"nodeType":"Block","src":"5194:186:8","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1557,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"5212:8:8","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isValid","nodeType":"MemberAccess","referencedDeclaration":3011,"src":"5212:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bool_$bound_to$_t_bytes29_$","typeString":"function (bytes29) pure returns (bool)"}},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5212:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d616c666f726d6564206d657373616765","id":1560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5232:19:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_6aa48674e27153274c8d5e6c059fdd68ef7c7da1904043a7f3ef41951a4238fb","typeString":"literal_string \"Malformed message\""},"value":"Malformed message"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6aa48674e27153274c8d5e6c059fdd68ef7c7da1904043a7f3ef41951a4238fb","typeString":"literal_string \"Malformed message\""}],"id":1556,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5204:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5204:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1562,"nodeType":"ExpressionStatement","src":"5204:48:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1564,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"5283:8:8","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"len","nodeType":"MemberAccess","referencedDeclaration":3319,"src":"5283:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$bound_to$_t_bytes29_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5283:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1567,"name":"HOOK_DATA_INDEX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"5301:15:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5283:33:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206275726e206d6573736167653a20746f6f2073686f7274","id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5330:33:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_d228821069777f3c8e1c2bdf7e5d66600c387faee92f37a5488148d3f91d1501","typeString":"literal_string \"Invalid burn message: too short\""},"value":"Invalid burn message: too short"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d228821069777f3c8e1c2bdf7e5d66600c387faee92f37a5488148d3f91d1501","typeString":"literal_string \"Invalid burn message: too short\""}],"id":1563,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5262:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5262:111:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1571,"nodeType":"ExpressionStatement","src":"5262:111:8"}]},"documentation":{"id":1551,"nodeType":"StructuredDocumentation","src":"4989:132:8","text":" @notice Reverts if burn message is malformed or invalid length\n @param _message The burn message as bytes29"},"id":1573,"implemented":true,"kind":"function","modifiers":[],"name":"_validateBurnMessageFormat","nodeType":"FunctionDefinition","parameters":{"id":1554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1553,"mutability":"mutable","name":"_message","nodeType":"VariableDeclaration","scope":1573,"src":"5162:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":1552,"name":"bytes29","nodeType":"ElementaryTypeName","src":"5162:7:8","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"5161:18:8"},"returnParameters":{"id":1555,"nodeType":"ParameterList","parameters":[],"src":"5194:0:8"},"scope":1574,"src":"5126:254:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1575,"src":"1539:3843:8"}],"src":"675:4707:8"},"id":8},"contracts/ReliefPools.sol":{"ast":{"absolutePath":"contracts/ReliefPools.sol","exportedSymbols":{"Address":[1167],"BurnMessage":[1361],"BurnMessageV2":[1574],"Context":[1190],"ECDSA":[225],"IERC20":[658],"IMessageHandlerV2":[1611],"Ownable":[109],"ReliefPools":[2670],"SafeERC20":[871],"SafeMath":[580],"TypedMemView":[4090]},"id":2671,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":1576,"literals":["solidity","0.7",".6"],"nodeType":"PragmaDirective","src":"39:22:9"},{"id":1577,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"62:19:9"},{"absolutePath":"@openzeppelin/contracts-0.7/access/Ownable.sol","file":"@openzeppelin/contracts-0.7/access/Ownable.sol","id":1578,"nodeType":"ImportDirective","scope":2671,"sourceUnit":110,"src":"83:56:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-0.7/cryptography/ECDSA.sol","file":"@openzeppelin/contracts-0.7/cryptography/ECDSA.sol","id":1579,"nodeType":"ImportDirective","scope":2671,"sourceUnit":226,"src":"140:60:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-0.7/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts-0.7/token/ERC20/IERC20.sol","id":1580,"nodeType":"ImportDirective","scope":2671,"sourceUnit":659,"src":"201:60:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-0.7/token/ERC20/SafeERC20.sol","file":"@openzeppelin/contracts-0.7/token/ERC20/SafeERC20.sol","id":1581,"nodeType":"ImportDirective","scope":2671,"sourceUnit":872,"src":"262:63:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/BurnMessageV2.sol","file":"./BurnMessageV2.sol","id":1582,"nodeType":"ImportDirective","scope":2671,"sourceUnit":1575,"src":"326:29:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/TypedMemView.sol","file":"./TypedMemView.sol","id":1583,"nodeType":"ImportDirective","scope":2671,"sourceUnit":4091,"src":"356:28:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1611,"linearizedBaseContracts":[1611],"name":"IMessageHandlerV2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1584,"nodeType":"StructuredDocumentation","src":"475:491:9","text":" @notice Handles an incoming unfinalized message from an IReceiverV2\n @dev Unfinalized messages have finality threshold values less than 2000\n @param sourceDomain The source domain of the message\n @param sender The sender of the message\n @param finalityThresholdExecuted The finality threshold at which the message was attested to\n @param messageBody The raw bytes of the message body\n @return success True, if successful; false, if not."},"functionSelector":"7c92f219","id":1597,"implemented":false,"kind":"function","modifiers":[],"name":"handleReceiveUnfinalizedMessage","nodeType":"FunctionDefinition","parameters":{"id":1593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1586,"mutability":"mutable","name":"sourceDomain","nodeType":"VariableDeclaration","scope":1597,"src":"1021:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1585,"name":"uint32","nodeType":"ElementaryTypeName","src":"1021:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1588,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":1597,"src":"1050:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1587,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1050:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1590,"mutability":"mutable","name":"finalityThresholdExecuted","nodeType":"VariableDeclaration","scope":1597,"src":"1074:32:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1589,"name":"uint32","nodeType":"ElementaryTypeName","src":"1074:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1592,"mutability":"mutable","name":"messageBody","nodeType":"VariableDeclaration","scope":1597,"src":"1116:26:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1591,"name":"bytes","nodeType":"ElementaryTypeName","src":"1116:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1011:137:9"},"returnParameters":{"id":1596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1595,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1597,"src":"1167:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1594,"name":"bool","nodeType":"ElementaryTypeName","src":"1167:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1166:6:9"},"scope":1611,"src":"971:202:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"11cffb67","id":1610,"implemented":false,"kind":"function","modifiers":[],"name":"handleReceiveFinalizedMessage","nodeType":"FunctionDefinition","parameters":{"id":1606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1599,"mutability":"mutable","name":"sourceDomain","nodeType":"VariableDeclaration","scope":1610,"src":"1227:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1598,"name":"uint32","nodeType":"ElementaryTypeName","src":"1227:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1601,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":1610,"src":"1256:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1600,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1256:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1603,"mutability":"mutable","name":"finalityThresholdExecuted","nodeType":"VariableDeclaration","scope":1610,"src":"1280:32:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1602,"name":"uint32","nodeType":"ElementaryTypeName","src":"1280:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1605,"mutability":"mutable","name":"messageBody","nodeType":"VariableDeclaration","scope":1610,"src":"1322:26:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1604,"name":"bytes","nodeType":"ElementaryTypeName","src":"1322:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1217:137:9"},"returnParameters":{"id":1609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1608,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1610,"src":"1373:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1607,"name":"bool","nodeType":"ElementaryTypeName","src":"1373:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1372:6:9"},"scope":1611,"src":"1179:200:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2671,"src":"441:940:9"},{"abstract":false,"baseContracts":[{"baseName":{"id":1612,"name":"Ownable","nodeType":"UserDefinedTypeName","referencedDeclaration":109,"src":"1483:7:9","typeDescriptions":{"typeIdentifier":"t_contract$_Ownable_$109","typeString":"contract Ownable"}},"id":1613,"nodeType":"InheritanceSpecifier","src":"1483:7:9"},{"baseName":{"id":1614,"name":"IMessageHandlerV2","nodeType":"UserDefinedTypeName","referencedDeclaration":1611,"src":"1492:17:9","typeDescriptions":{"typeIdentifier":"t_contract$_IMessageHandlerV2_$1611","typeString":"contract IMessageHandlerV2"}},"id":1615,"nodeType":"InheritanceSpecifier","src":"1492:17:9"}],"contractDependencies":[109,1190,1611],"contractKind":"contract","fullyImplemented":true,"id":2670,"linearizedBaseContracts":[2670,1611,109,1190],"name":"ReliefPools","nodeType":"ContractDefinition","nodes":[{"id":1618,"libraryName":{"id":1616,"name":"ECDSA","nodeType":"UserDefinedTypeName","referencedDeclaration":225,"src":"1522:5:9","typeDescriptions":{"typeIdentifier":"t_contract$_ECDSA_$225","typeString":"library ECDSA"}},"nodeType":"UsingForDirective","src":"1516:24:9","typeName":{"id":1617,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1532:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"id":1621,"libraryName":{"id":1619,"name":"SafeERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":871,"src":"1551:9:9","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$871","typeString":"library SafeERC20"}},"nodeType":"UsingForDirective","src":"1545:27:9","typeName":{"id":1620,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":658,"src":"1565:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"}}},{"id":1624,"libraryName":{"id":1622,"name":"BurnMessageV2","nodeType":"UserDefinedTypeName","referencedDeclaration":1574,"src":"1583:13:9","typeDescriptions":{"typeIdentifier":"t_contract$_BurnMessageV2_$1574","typeString":"library BurnMessageV2"}},"nodeType":"UsingForDirective","src":"1577:32:9","typeName":{"id":1623,"name":"bytes29","nodeType":"ElementaryTypeName","src":"1601:7:9","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}},{"id":1627,"libraryName":{"id":1625,"name":"TypedMemView","nodeType":"UserDefinedTypeName","referencedDeclaration":4090,"src":"1620:12:9","typeDescriptions":{"typeIdentifier":"t_contract$_TypedMemView_$4090","typeString":"library TypedMemView"}},"nodeType":"UsingForDirective","src":"1614:29:9","typeName":{"id":1626,"name":"bytes","nodeType":"ElementaryTypeName","src":"1637:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},{"id":1630,"libraryName":{"id":1628,"name":"TypedMemView","nodeType":"UserDefinedTypeName","referencedDeclaration":4090,"src":"1654:12:9","typeDescriptions":{"typeIdentifier":"t_contract$_TypedMemView_$4090","typeString":"library TypedMemView"}},"nodeType":"UsingForDirective","src":"1648:31:9","typeName":{"id":1629,"name":"bytes29","nodeType":"ElementaryTypeName","src":"1671:7:9","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}},{"constant":false,"functionSelector":"fc6f9468","id":1632,"mutability":"mutable","name":"adminAddress","nodeType":"VariableDeclaration","scope":2670,"src":"1689:27:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1631,"name":"address","nodeType":"ElementaryTypeName","src":"1689:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"11eac855","id":1634,"mutability":"immutable","name":"usdcToken","nodeType":"VariableDeclaration","scope":2670,"src":"1722:33:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"},"typeName":{"id":1633,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":658,"src":"1722:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"8c73eb04","id":1636,"mutability":"mutable","name":"cctpMessageTransmitter","nodeType":"VariableDeclaration","scope":2670,"src":"1761:37:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1635,"name":"address","nodeType":"ElementaryTypeName","src":"1761:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"9e3079cb","id":1638,"mutability":"mutable","name":"poolCounter","nodeType":"VariableDeclaration","scope":2670,"src":"1845:26:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1637,"name":"uint256","nodeType":"ElementaryTypeName","src":"1845:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"canonicalName":"ReliefPools.Beneficiary","id":1649,"members":[{"constant":false,"id":1640,"mutability":"mutable","name":"nullifier","nodeType":"VariableDeclaration","scope":1649,"src":"1911:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1639,"name":"uint256","nodeType":"ElementaryTypeName","src":"1911:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1642,"mutability":"mutable","name":"userIdentifier","nodeType":"VariableDeclaration","scope":1649,"src":"1938:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1641,"name":"uint256","nodeType":"ElementaryTypeName","src":"1938:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1644,"mutability":"mutable","name":"walletAddress","nodeType":"VariableDeclaration","scope":1649,"src":"2002:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1643,"name":"address","nodeType":"ElementaryTypeName","src":"2002:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1646,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1649,"src":"2033:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1645,"name":"uint256","nodeType":"ElementaryTypeName","src":"2033:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1648,"mutability":"mutable","name":"timestamp","nodeType":"VariableDeclaration","scope":1649,"src":"2073:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1647,"name":"uint256","nodeType":"ElementaryTypeName","src":"2073:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Beneficiary","nodeType":"StructDefinition","scope":2670,"src":"1882:215:9","visibility":"public"},{"canonicalName":"ReliefPools.Donor","id":1664,"members":[{"constant":false,"id":1651,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":1664,"src":"2126:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1650,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1653,"mutability":"mutable","name":"walletAddress","nodeType":"VariableDeclaration","scope":1664,"src":"2219:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1652,"name":"address","nodeType":"ElementaryTypeName","src":"2219:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1655,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1664,"src":"2250:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1654,"name":"uint256","nodeType":"ElementaryTypeName","src":"2250:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1657,"mutability":"mutable","name":"timestamp","nodeType":"VariableDeclaration","scope":1664,"src":"2290:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1656,"name":"uint256","nodeType":"ElementaryTypeName","src":"2290:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1659,"mutability":"mutable","name":"isCrossChain","nodeType":"VariableDeclaration","scope":1664,"src":"2317:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1658,"name":"bool","nodeType":"ElementaryTypeName","src":"2317:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1661,"mutability":"mutable","name":"sourceDomain","nodeType":"VariableDeclaration","scope":1664,"src":"2383:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1660,"name":"uint32","nodeType":"ElementaryTypeName","src":"2383:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1663,"mutability":"mutable","name":"location","nodeType":"VariableDeclaration","scope":1664,"src":"2495:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1662,"name":"string","nodeType":"ElementaryTypeName","src":"2495:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Donor","nodeType":"StructDefinition","scope":2670,"src":"2103:459:9","visibility":"public"},{"canonicalName":"ReliefPools.DisasterTypeEnum","id":1669,"members":[{"id":1665,"name":"Earthquake","nodeType":"EnumValue","src":"2600:10:9"},{"id":1666,"name":"Flood","nodeType":"EnumValue","src":"2620:5:9"},{"id":1667,"name":"Wildfire","nodeType":"EnumValue","src":"2635:8:9"},{"id":1668,"name":"Warzone","nodeType":"EnumValue","src":"2653:7:9"}],"name":"DisasterTypeEnum","nodeType":"EnumDefinition","src":"2568:98:9"},{"canonicalName":"ReliefPools.ClassificationEnum","id":1672,"members":[{"id":1670,"name":"Critical","nodeType":"EnumValue","src":"2706:8:9"},{"id":1671,"name":"HighPriority","nodeType":"EnumValue","src":"2724:12:9"}],"name":"ClassificationEnum","nodeType":"EnumDefinition","src":"2672:70:9"},{"canonicalName":"ReliefPools.ReliefPool","id":1693,"members":[{"constant":false,"id":1674,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":1693,"src":"2776:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1673,"name":"uint256","nodeType":"ElementaryTypeName","src":"2776:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1676,"mutability":"mutable","name":"disasterType","nodeType":"VariableDeclaration","scope":1693,"src":"2796:29:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DisasterTypeEnum_$1669","typeString":"enum ReliefPools.DisasterTypeEnum"},"typeName":{"id":1675,"name":"DisasterTypeEnum","nodeType":"UserDefinedTypeName","referencedDeclaration":1669,"src":"2796:16:9","typeDescriptions":{"typeIdentifier":"t_enum$_DisasterTypeEnum_$1669","typeString":"enum ReliefPools.DisasterTypeEnum"}},"visibility":"internal"},{"constant":false,"id":1678,"mutability":"mutable","name":"classification","nodeType":"VariableDeclaration","scope":1693,"src":"2835:33:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ClassificationEnum_$1672","typeString":"enum ReliefPools.ClassificationEnum"},"typeName":{"id":1677,"name":"ClassificationEnum","nodeType":"UserDefinedTypeName","referencedDeclaration":1672,"src":"2835:18:9","typeDescriptions":{"typeIdentifier":"t_enum$_ClassificationEnum_$1672","typeString":"enum ReliefPools.ClassificationEnum"}},"visibility":"internal"},{"constant":false,"id":1680,"mutability":"mutable","name":"nationalityRequired","nodeType":"VariableDeclaration","scope":1693,"src":"2878:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1679,"name":"string","nodeType":"ElementaryTypeName","src":"2878:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1682,"mutability":"mutable","name":"allocatedFundsPerPerson","nodeType":"VariableDeclaration","scope":1693,"src":"2932:31:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1681,"name":"uint256","nodeType":"ElementaryTypeName","src":"2932:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1684,"mutability":"mutable","name":"totalBeneficiaries","nodeType":"VariableDeclaration","scope":1693,"src":"2985:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1683,"name":"uint256","nodeType":"ElementaryTypeName","src":"2985:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1686,"mutability":"mutable","name":"totalDonors","nodeType":"VariableDeclaration","scope":1693,"src":"3021:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1685,"name":"uint256","nodeType":"ElementaryTypeName","src":"3021:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1688,"mutability":"mutable","name":"totalAmountClaimed","nodeType":"VariableDeclaration","scope":1693,"src":"3050:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1687,"name":"uint256","nodeType":"ElementaryTypeName","src":"3050:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1690,"mutability":"mutable","name":"totalAmountDonated","nodeType":"VariableDeclaration","scope":1693,"src":"3086:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1689,"name":"uint256","nodeType":"ElementaryTypeName","src":"3086:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1692,"mutability":"mutable","name":"isActive","nodeType":"VariableDeclaration","scope":1693,"src":"3122:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1691,"name":"bool","nodeType":"ElementaryTypeName","src":"3122:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ReliefPool","nodeType":"StructDefinition","scope":2670,"src":"2748:394:9","visibility":"public"},{"constant":false,"functionSelector":"3644e515","id":1695,"mutability":"immutable","name":"DOMAIN_SEPARATOR","nodeType":"VariableDeclaration","scope":2670,"src":"3199:41:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1694,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3199:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"e1a788eb","id":1700,"mutability":"constant","name":"VERIFICATION_MESSAGE_TYPEHASH","nodeType":"VariableDeclaration","scope":2670,"src":"3322:201:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1696,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3322:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"566572696669636174696f6e4d65737361676528616464726573732075736572416464726573732c75696e74323536206e756c6c69666965722c75696e7432353620757365724964656e7469666965722c737472696e67206e6174696f6e616c6974792c75696e743235362074696d657374616d7029","id":1698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3397:120:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_8db8d84faf8b2365d4ffd175c1a5bf60a3c3bb8fd65fb126c9bbc39786d11da7","typeString":"literal_string \"VerificationMessage(address userAddress,uint256 nullifier,uint256 userIdentifier,string nationality,uint256 timestamp)\""},"value":"VerificationMessage(address userAddress,uint256 nullifier,uint256 userIdentifier,string nationality,uint256 timestamp)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8db8d84faf8b2365d4ffd175c1a5bf60a3c3bb8fd65fb126c9bbc39786d11da7","typeString":"literal_string \"VerificationMessage(address userAddress,uint256 nullifier,uint256 userIdentifier,string nationality,uint256 timestamp)\""}],"id":1697,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3378:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3378:145:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"19c2799f","id":1704,"mutability":"mutable","name":"reliefPools","nodeType":"VariableDeclaration","scope":2670,"src":"3558:49:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ReliefPool_$1693_storage_$","typeString":"mapping(uint256 => struct ReliefPools.ReliefPool)"},"typeName":{"id":1703,"keyType":{"id":1701,"name":"uint256","nodeType":"ElementaryTypeName","src":"3566:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3558:30:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ReliefPool_$1693_storage_$","typeString":"mapping(uint256 => struct ReliefPools.ReliefPool)"},"valueType":{"id":1702,"name":"ReliefPool","nodeType":"UserDefinedTypeName","referencedDeclaration":1693,"src":"3577:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage_ptr","typeString":"struct ReliefPools.ReliefPool"}}},"visibility":"public"},{"constant":false,"functionSelector":"59b3c2d8","id":1710,"mutability":"mutable","name":"poolBeneficiaries","nodeType":"VariableDeclaration","scope":2670,"src":"3613:76:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Beneficiary_$1649_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct ReliefPools.Beneficiary))"},"typeName":{"id":1709,"keyType":{"id":1705,"name":"uint256","nodeType":"ElementaryTypeName","src":"3621:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3613:51:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Beneficiary_$1649_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct ReliefPools.Beneficiary))"},"valueType":{"id":1708,"keyType":{"id":1706,"name":"address","nodeType":"ElementaryTypeName","src":"3640:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3632:31:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Beneficiary_$1649_storage_$","typeString":"mapping(address => struct ReliefPools.Beneficiary)"},"valueType":{"id":1707,"name":"Beneficiary","nodeType":"UserDefinedTypeName","referencedDeclaration":1649,"src":"3651:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Beneficiary_$1649_storage_ptr","typeString":"struct ReliefPools.Beneficiary"}}}},"visibility":"public"},{"constant":false,"functionSelector":"f594dbf4","id":1716,"mutability":"mutable","name":"poolDonors","nodeType":"VariableDeclaration","scope":2670,"src":"3695:63:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Donor_$1664_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct ReliefPools.Donor))"},"typeName":{"id":1715,"keyType":{"id":1711,"name":"uint256","nodeType":"ElementaryTypeName","src":"3703:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3695:45:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Donor_$1664_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct ReliefPools.Donor))"},"valueType":{"id":1714,"keyType":{"id":1712,"name":"address","nodeType":"ElementaryTypeName","src":"3722:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3714:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Donor_$1664_storage_$","typeString":"mapping(address => struct ReliefPools.Donor)"},"valueType":{"id":1713,"name":"Donor","nodeType":"UserDefinedTypeName","referencedDeclaration":1664,"src":"3733:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_Donor_$1664_storage_ptr","typeString":"struct ReliefPools.Donor"}}}},"visibility":"public"},{"constant":false,"functionSelector":"3b121902","id":1722,"mutability":"mutable","name":"hasPersonClaimedFromPool","nodeType":"VariableDeclaration","scope":2670,"src":"3934:76:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(uint256 => bool))"},"typeName":{"id":1721,"keyType":{"id":1717,"name":"uint256","nodeType":"ElementaryTypeName","src":"3942:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3934:44:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(uint256 => bool))"},"valueType":{"id":1720,"keyType":{"id":1718,"name":"uint256","nodeType":"ElementaryTypeName","src":"3961:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3953:24:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueType":{"id":1719,"name":"bool","nodeType":"ElementaryTypeName","src":"3972:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"constant":false,"functionSelector":"feb16532","id":1727,"mutability":"mutable","name":"personClaimedPools","nodeType":"VariableDeclaration","scope":2670,"src":"4052:55:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[])"},"typeName":{"id":1726,"keyType":{"id":1723,"name":"uint256","nodeType":"ElementaryTypeName","src":"4060:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"4052:29:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[])"},"valueType":{"baseType":{"id":1724,"name":"uint256","nodeType":"ElementaryTypeName","src":"4071:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1725,"nodeType":"ArrayTypeName","src":"4071:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"anonymous":false,"id":1739,"name":"ReliefPoolCreated","nodeType":"EventDefinition","parameters":{"id":1738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1729,"indexed":true,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":1739,"src":"4196:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1728,"name":"uint256","nodeType":"ElementaryTypeName","src":"4196:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1731,"indexed":false,"mutability":"mutable","name":"disasterType","nodeType":"VariableDeclaration","scope":1739,"src":"4228:29:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DisasterTypeEnum_$1669","typeString":"enum ReliefPools.DisasterTypeEnum"},"typeName":{"id":1730,"name":"DisasterTypeEnum","nodeType":"UserDefinedTypeName","referencedDeclaration":1669,"src":"4228:16:9","typeDescriptions":{"typeIdentifier":"t_enum$_DisasterTypeEnum_$1669","typeString":"enum ReliefPools.DisasterTypeEnum"}},"visibility":"internal"},{"constant":false,"id":1733,"indexed":false,"mutability":"mutable","name":"classification","nodeType":"VariableDeclaration","scope":1739,"src":"4267:33:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ClassificationEnum_$1672","typeString":"enum ReliefPools.ClassificationEnum"},"typeName":{"id":1732,"name":"ClassificationEnum","nodeType":"UserDefinedTypeName","referencedDeclaration":1672,"src":"4267:18:9","typeDescriptions":{"typeIdentifier":"t_enum$_ClassificationEnum_$1672","typeString":"enum ReliefPools.ClassificationEnum"}},"visibility":"internal"},{"constant":false,"id":1735,"indexed":false,"mutability":"mutable","name":"nationalityRequired","nodeType":"VariableDeclaration","scope":1739,"src":"4310:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1734,"name":"string","nodeType":"ElementaryTypeName","src":"4310:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1737,"indexed":false,"mutability":"mutable","name":"allocatedFundsPerPerson","nodeType":"VariableDeclaration","scope":1739,"src":"4346:31:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1736,"name":"uint256","nodeType":"ElementaryTypeName","src":"4346:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4186:197:9"},"src":"4163:221:9"},{"anonymous":false,"id":1757,"name":"FundsClaimed","nodeType":"EventDefinition","parameters":{"id":1756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1741,"indexed":true,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":1757,"src":"4422:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1740,"name":"uint256","nodeType":"ElementaryTypeName","src":"4422:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1743,"indexed":true,"mutability":"mutable","name":"claimer","nodeType":"VariableDeclaration","scope":1757,"src":"4454:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1742,"name":"address","nodeType":"ElementaryTypeName","src":"4454:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1745,"indexed":true,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":1757,"src":"4487:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1744,"name":"address","nodeType":"ElementaryTypeName","src":"4487:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1747,"indexed":false,"mutability":"mutable","name":"nullifier","nodeType":"VariableDeclaration","scope":1757,"src":"4522:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1746,"name":"uint256","nodeType":"ElementaryTypeName","src":"4522:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1749,"indexed":false,"mutability":"mutable","name":"userIdentifier","nodeType":"VariableDeclaration","scope":1757,"src":"4549:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1748,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1751,"indexed":false,"mutability":"mutable","name":"nationality","nodeType":"VariableDeclaration","scope":1757,"src":"4581:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1750,"name":"string","nodeType":"ElementaryTypeName","src":"4581:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1753,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1757,"src":"4609:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1752,"name":"uint256","nodeType":"ElementaryTypeName","src":"4609:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1755,"indexed":false,"mutability":"mutable","name":"timestamp","nodeType":"VariableDeclaration","scope":1757,"src":"4633:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1754,"name":"uint256","nodeType":"ElementaryTypeName","src":"4633:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4412:244:9"},"src":"4394:263:9"},{"anonymous":false,"id":1771,"name":"DonationMade","nodeType":"EventDefinition","parameters":{"id":1770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1759,"indexed":true,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":1771,"src":"4695:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1758,"name":"uint256","nodeType":"ElementaryTypeName","src":"4695:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1761,"indexed":true,"mutability":"mutable","name":"donor","nodeType":"VariableDeclaration","scope":1771,"src":"4727:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1760,"name":"address","nodeType":"ElementaryTypeName","src":"4727:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1763,"indexed":false,"mutability":"mutable","name":"sourceDomain","nodeType":"VariableDeclaration","scope":1771,"src":"4758:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1762,"name":"uint32","nodeType":"ElementaryTypeName","src":"4758:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1765,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1771,"src":"4851:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1764,"name":"uint256","nodeType":"ElementaryTypeName","src":"4851:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1767,"indexed":false,"mutability":"mutable","name":"timestamp","nodeType":"VariableDeclaration","scope":1771,"src":"4875:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1766,"name":"uint256","nodeType":"ElementaryTypeName","src":"4875:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1769,"indexed":false,"mutability":"mutable","name":"location","nodeType":"VariableDeclaration","scope":1771,"src":"4902:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1768,"name":"string","nodeType":"ElementaryTypeName","src":"4902:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4685:283:9"},"src":"4667:302:9"},{"anonymous":false,"id":1777,"name":"PoolStatusChanged","nodeType":"EventDefinition","parameters":{"id":1776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1773,"indexed":true,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":1777,"src":"5003:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1772,"name":"uint256","nodeType":"ElementaryTypeName","src":"5003:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1775,"indexed":false,"mutability":"mutable","name":"isActive","nodeType":"VariableDeclaration","scope":1777,"src":"5027:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1774,"name":"bool","nodeType":"ElementaryTypeName","src":"5027:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5002:39:9"},"src":"4979:63:9"},{"body":{"id":1833,"nodeType":"Block","src":"5646:587:9","statements":[{"expression":{"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1786,"name":"adminAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"5656:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1787,"name":"_adminAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"5671:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5656:28:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1789,"nodeType":"ExpressionStatement","src":"5656:28:9"},{"expression":{"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1790,"name":"usdcToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"5694:9:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1792,"name":"_usdcToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"5713:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1791,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"5706:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$658_$","typeString":"type(contract IERC20)"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5706:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"}},"src":"5694:30:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"}},"id":1795,"nodeType":"ExpressionStatement","src":"5694:30:9"},{"expression":{"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1796,"name":"cctpMessageTransmitter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"5734:22:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1797,"name":"_cctpMessageTransmitter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"5759:23:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5734:48:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1799,"nodeType":"ExpressionStatement","src":"5734:48:9"},{"expression":{"arguments":[{"expression":{"id":1801,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5810:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5810:10:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":1800,"name":"transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"5792:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5792:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1804,"nodeType":"ExpressionStatement","src":"5792:29:9"},{"expression":{"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1805,"name":"DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"5879:16:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":1810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5959:84:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":1809,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5949:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5949:95:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"hexValue":"52656c696566506f6f6c73","id":1815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6078:13:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_3323a8070b7081e28ca423d850c49e17147e941af41daf0ad176ecf1a5481b67","typeString":"literal_string \"ReliefPools\""},"value":"ReliefPools"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3323a8070b7081e28ca423d850c49e17147e941af41daf0ad176ecf1a5481b67","typeString":"literal_string \"ReliefPools\""}],"id":1814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6072:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1813,"name":"bytes","nodeType":"ElementaryTypeName","src":"6072:5:9","typeDescriptions":{}}},"id":1816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6072:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1812,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6062:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6062:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"hexValue":"31","id":1821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6127:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""}],"id":1820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6121:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1819,"name":"bytes","nodeType":"ElementaryTypeName","src":"6121:5:9","typeDescriptions":{}}},"id":1822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6121:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1818,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6111:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6111:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"38343533","id":1824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6150:4:9","typeDescriptions":{"typeIdentifier":"t_rational_8453_by_1","typeString":"int_const 8453"},"value":"8453"},{"arguments":[{"id":1827,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6197:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_ReliefPools_$2670","typeString":"contract ReliefPools"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ReliefPools_$2670","typeString":"contract ReliefPools"}],"id":1826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6189:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1825,"name":"address","nodeType":"ElementaryTypeName","src":"6189:7:9","typeDescriptions":{}}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6189:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_8453_by_1","typeString":"int_const 8453"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1807,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5921:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"5921:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5921:295:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1806,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5898:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5898:328:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5879:347:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1832,"nodeType":"ExpressionStatement","src":"5879:347:9"}]},"id":1834,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1779,"mutability":"mutable","name":"_adminAddress","nodeType":"VariableDeclaration","scope":1834,"src":"5548:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1778,"name":"address","nodeType":"ElementaryTypeName","src":"5548:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1781,"mutability":"mutable","name":"_usdcToken","nodeType":"VariableDeclaration","scope":1834,"src":"5580:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1780,"name":"address","nodeType":"ElementaryTypeName","src":"5580:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1783,"mutability":"mutable","name":"_cctpMessageTransmitter","nodeType":"VariableDeclaration","scope":1834,"src":"5608:31:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1782,"name":"address","nodeType":"ElementaryTypeName","src":"5608:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5538:107:9"},"returnParameters":{"id":1785,"nodeType":"ParameterList","parameters":[],"src":"5646:0:9"},"scope":2670,"src":"5527:706:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1846,"nodeType":"Block","src":"6375:95:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1838,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6393:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6393:10:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1840,"name":"cctpMessageTransmitter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"6407:22:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6393:36:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e617574686f72697a656443616c6c6572","id":1842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6431:20:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_ede1a3593ba4cc1179efac6ca3c84eee5b40d87537257a00e5715a9e107e43f2","typeString":"literal_string \"UnauthorizedCaller\""},"value":"UnauthorizedCaller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ede1a3593ba4cc1179efac6ca3c84eee5b40d87537257a00e5715a9e107e43f2","typeString":"literal_string \"UnauthorizedCaller\""}],"id":1837,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6385:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6385:67:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1844,"nodeType":"ExpressionStatement","src":"6385:67:9"},{"id":1845,"nodeType":"PlaceholderStatement","src":"6462:1:9"}]},"documentation":{"id":1835,"nodeType":"StructuredDocumentation","src":"6243:96:9","text":" @dev Modifier to ensure only CCTP Message Transmitter can call hook functions"},"id":1847,"name":"onlyCCTPTransmitter","nodeType":"ModifierDefinition","parameters":{"id":1836,"nodeType":"ParameterList","parameters":[],"src":"6372:2:9"},"src":"6344:126:9","virtual":false,"visibility":"internal"},{"body":{"id":1913,"nodeType":"Block","src":"6768:872:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1866,"name":"nationalityRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"6792:19:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6786:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1864,"name":"bytes","nodeType":"ElementaryTypeName","src":"6786:5:9","typeDescriptions":{}}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6786:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6786:33:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6822:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6786:37:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69644e6174696f6e616c697479","id":1871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6825:20:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_458175237385bace94a4d132a3bee7efde50498b86fcf8d7b44596cad42dccdb","typeString":"literal_string \"InvalidNationality\""},"value":"InvalidNationality"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_458175237385bace94a4d132a3bee7efde50498b86fcf8d7b44596cad42dccdb","typeString":"literal_string \"InvalidNationality\""}],"id":1863,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6778:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6778:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1873,"nodeType":"ExpressionStatement","src":"6778:68:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1875,"name":"allocatedFundsPerPerson","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"6864:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6890:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6864:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964416d6f756e74","id":1878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6893:15:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_483313f3910f88408dc57d1e1e6afbe0d5fb0a2ab36e197f65b49ed489f7c914","typeString":"literal_string \"InvalidAmount\""},"value":"InvalidAmount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_483313f3910f88408dc57d1e1e6afbe0d5fb0a2ab36e197f65b49ed489f7c914","typeString":"literal_string \"InvalidAmount\""}],"id":1874,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6856:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6856:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1880,"nodeType":"ExpressionStatement","src":"6856:53:9"},{"assignments":[1882],"declarations":[{"constant":false,"id":1882,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":1913,"src":"6928:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1881,"name":"uint256","nodeType":"ElementaryTypeName","src":"6928:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1885,"initialValue":{"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6945:13:9","subExpression":{"id":1883,"name":"poolCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"6945:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6928:30:9"},{"expression":{"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1886,"name":"reliefPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"6977:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ReliefPool_$1693_storage_$","typeString":"mapping(uint256 => struct ReliefPools.ReliefPool storage ref)"}},"id":1888,"indexExpression":{"id":1887,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"6989:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6977:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage","typeString":"struct ReliefPools.ReliefPool storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1890,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"7028:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1891,"name":"disasterType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"7062:12:9","typeDescriptions":{"typeIdentifier":"t_enum$_DisasterTypeEnum_$1669","typeString":"enum ReliefPools.DisasterTypeEnum"}},{"id":1892,"name":"classification","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"7104:14:9","typeDescriptions":{"typeIdentifier":"t_enum$_ClassificationEnum_$1672","typeString":"enum ReliefPools.ClassificationEnum"}},{"id":1893,"name":"nationalityRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"7153:19:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1894,"name":"allocatedFundsPerPerson","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"7211:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":1895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7268:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7296:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7331:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7366:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"74727565","id":1899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7391:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_DisasterTypeEnum_$1669","typeString":"enum ReliefPools.DisasterTypeEnum"},{"typeIdentifier":"t_enum$_ClassificationEnum_$1672","typeString":"enum ReliefPools.ClassificationEnum"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1889,"name":"ReliefPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"6999:10:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ReliefPool_$1693_storage_ptr_$","typeString":"type(struct ReliefPools.ReliefPool storage pointer)"}},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["id","disasterType","classification","nationalityRequired","allocatedFundsPerPerson","totalBeneficiaries","totalDonors","totalAmountClaimed","totalAmountDonated","isActive"],"nodeType":"FunctionCall","src":"6999:407:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_memory_ptr","typeString":"struct ReliefPools.ReliefPool memory"}},"src":"6977:429:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage","typeString":"struct ReliefPools.ReliefPool storage ref"}},"id":1902,"nodeType":"ExpressionStatement","src":"6977:429:9"},{"eventCall":{"arguments":[{"id":1904,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"7461:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1905,"name":"disasterType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"7481:12:9","typeDescriptions":{"typeIdentifier":"t_enum$_DisasterTypeEnum_$1669","typeString":"enum ReliefPools.DisasterTypeEnum"}},{"id":1906,"name":"classification","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"7507:14:9","typeDescriptions":{"typeIdentifier":"t_enum$_ClassificationEnum_$1672","typeString":"enum ReliefPools.ClassificationEnum"}},{"id":1907,"name":"nationalityRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"7535:19:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1908,"name":"allocatedFundsPerPerson","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"7568:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_DisasterTypeEnum_$1669","typeString":"enum ReliefPools.DisasterTypeEnum"},{"typeIdentifier":"t_enum$_ClassificationEnum_$1672","typeString":"enum ReliefPools.ClassificationEnum"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1903,"name":"ReliefPoolCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"7430:17:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_DisasterTypeEnum_$1669_$_t_enum$_ClassificationEnum_$1672_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint256,enum ReliefPools.DisasterTypeEnum,enum ReliefPools.ClassificationEnum,string memory,uint256)"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7430:171:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1910,"nodeType":"EmitStatement","src":"7425:176:9"},{"expression":{"id":1911,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"7627:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1862,"id":1912,"nodeType":"Return","src":"7620:13:9"}]},"documentation":{"id":1848,"nodeType":"StructuredDocumentation","src":"6480:48:9","text":" @dev Create a new relief pool"},"functionSelector":"8b29caf5","id":1914,"implemented":true,"kind":"function","modifiers":[{"id":1859,"modifierName":{"id":1858,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"6740:9:9","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"6740:9:9"}],"name":"createReliefPool","nodeType":"FunctionDefinition","parameters":{"id":1857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1850,"mutability":"mutable","name":"disasterType","nodeType":"VariableDeclaration","scope":1914,"src":"6568:29:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_DisasterTypeEnum_$1669","typeString":"enum ReliefPools.DisasterTypeEnum"},"typeName":{"id":1849,"name":"DisasterTypeEnum","nodeType":"UserDefinedTypeName","referencedDeclaration":1669,"src":"6568:16:9","typeDescriptions":{"typeIdentifier":"t_enum$_DisasterTypeEnum_$1669","typeString":"enum ReliefPools.DisasterTypeEnum"}},"visibility":"internal"},{"constant":false,"id":1852,"mutability":"mutable","name":"classification","nodeType":"VariableDeclaration","scope":1914,"src":"6607:33:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ClassificationEnum_$1672","typeString":"enum ReliefPools.ClassificationEnum"},"typeName":{"id":1851,"name":"ClassificationEnum","nodeType":"UserDefinedTypeName","referencedDeclaration":1672,"src":"6607:18:9","typeDescriptions":{"typeIdentifier":"t_enum$_ClassificationEnum_$1672","typeString":"enum ReliefPools.ClassificationEnum"}},"visibility":"internal"},{"constant":false,"id":1854,"mutability":"mutable","name":"nationalityRequired","nodeType":"VariableDeclaration","scope":1914,"src":"6650:33:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1853,"name":"string","nodeType":"ElementaryTypeName","src":"6650:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1856,"mutability":"mutable","name":"allocatedFundsPerPerson","nodeType":"VariableDeclaration","scope":1914,"src":"6693:31:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1855,"name":"uint256","nodeType":"ElementaryTypeName","src":"6693:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6558:172:9"},"returnParameters":{"id":1862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1861,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1914,"src":"6759:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1860,"name":"uint256","nodeType":"ElementaryTypeName","src":"6759:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6758:9:9"},"scope":2670,"src":"6533:1107:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1610],"body":{"id":1930,"nodeType":"Block","src":"7910:28:9","statements":[{"expression":{"hexValue":"74727565","id":1928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7927:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1927,"id":1929,"nodeType":"Return","src":"7920:11:9"}]},"functionSelector":"11cffb67","id":1931,"implemented":true,"kind":"function","modifiers":[],"name":"handleReceiveFinalizedMessage","nodeType":"FunctionDefinition","overrides":{"id":1924,"nodeType":"OverrideSpecifier","overrides":[],"src":"7886:8:9"},"parameters":{"id":1923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1916,"mutability":"mutable","name":"sourceDomain","nodeType":"VariableDeclaration","scope":1931,"src":"7749:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1915,"name":"uint32","nodeType":"ElementaryTypeName","src":"7749:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1918,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":1931,"src":"7778:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1917,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7778:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1920,"mutability":"mutable","name":"finalityThresholdExecuted","nodeType":"VariableDeclaration","scope":1931,"src":"7802:32:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1919,"name":"uint32","nodeType":"ElementaryTypeName","src":"7802:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1922,"mutability":"mutable","name":"messageBody","nodeType":"VariableDeclaration","scope":1931,"src":"7844:26:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1921,"name":"bytes","nodeType":"ElementaryTypeName","src":"7844:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7739:137:9"},"returnParameters":{"id":1927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1926,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1931,"src":"7904:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1925,"name":"bool","nodeType":"ElementaryTypeName","src":"7904:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7903:6:9"},"scope":2670,"src":"7701:237:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1597],"body":{"id":1963,"nodeType":"Block","src":"8555:167:9","statements":[{"clauses":[{"block":{"id":1956,"nodeType":"Block","src":"8636:36:9","statements":[{"expression":{"hexValue":"74727565","id":1954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8657:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1947,"id":1955,"nodeType":"Return","src":"8650:11:9"}]},"errorName":"","id":1957,"nodeType":"TryCatchClause","src":"8636:36:9"},{"block":{"id":1960,"nodeType":"Block","src":"8679:37:9","statements":[{"expression":{"hexValue":"66616c7365","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8700:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1947,"id":1959,"nodeType":"Return","src":"8693:12:9"}]},"errorName":"","id":1961,"nodeType":"TryCatchClause","src":"8673:43:9"}],"externalCall":{"arguments":[{"id":1950,"name":"sourceDomain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"8601:12:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":1951,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"8615:6:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1952,"name":"messageBody","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"8623:11:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1948,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8569:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_ReliefPools_$2670","typeString":"contract ReliefPools"}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_processCrossChainDonation","nodeType":"MemberAccess","referencedDeclaration":2118,"src":"8569:31:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint32_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint32,bytes32,bytes memory) external"}},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8569:66:9","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1962,"nodeType":"TryStatement","src":"8565:151:9"}]},"documentation":{"id":1932,"nodeType":"StructuredDocumentation","src":"7944:375:9","text":" @dev CCTP v2 hook function to handle cross-chain donations\n @param sourceDomain The source domain of the message\n @param sender The sender of the message (as bytes32)\n @param finalityThresholdExecuted The finality threshold at which the message was attested to\n @param messageBody The raw bytes of the message body containing poolId"},"functionSelector":"7c92f219","id":1964,"implemented":true,"kind":"function","modifiers":[{"id":1944,"modifierName":{"id":1943,"name":"onlyCCTPTransmitter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"8520:19:9","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"8520:19:9"}],"name":"handleReceiveUnfinalizedMessage","nodeType":"FunctionDefinition","overrides":{"id":1942,"nodeType":"OverrideSpecifier","overrides":[],"src":"8511:8:9"},"parameters":{"id":1941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1934,"mutability":"mutable","name":"sourceDomain","nodeType":"VariableDeclaration","scope":1964,"src":"8374:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1933,"name":"uint32","nodeType":"ElementaryTypeName","src":"8374:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1936,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":1964,"src":"8403:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1935,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8403:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1938,"mutability":"mutable","name":"finalityThresholdExecuted","nodeType":"VariableDeclaration","scope":1964,"src":"8427:32:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1937,"name":"uint32","nodeType":"ElementaryTypeName","src":"8427:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1940,"mutability":"mutable","name":"messageBody","nodeType":"VariableDeclaration","scope":1964,"src":"8469:26:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1939,"name":"bytes","nodeType":"ElementaryTypeName","src":"8469:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8364:137:9"},"returnParameters":{"id":1947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1946,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1964,"src":"8549:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1945,"name":"bool","nodeType":"ElementaryTypeName","src":"8549:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8548:6:9"},"scope":2670,"src":"8324:398:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2117,"nodeType":"Block","src":"9148:1855:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1975,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9237:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"9237:10:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1979,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9259:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_ReliefPools_$2670","typeString":"contract ReliefPools"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ReliefPools_$2670","typeString":"contract ReliefPools"}],"id":1978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9251:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1977,"name":"address","nodeType":"ElementaryTypeName","src":"9251:7:9","typeDescriptions":{}}},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9251:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9237:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e7465726e616c2066756e6374696f6e206f6e6c79","id":1982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9266:24:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_6378970b6df3ebf384bf9ab3a985c67d1495bbfa66239ddc466b9b36aabfc3c0","typeString":"literal_string \"Internal function only\""},"value":"Internal function only"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6378970b6df3ebf384bf9ab3a985c67d1495bbfa66239ddc466b9b36aabfc3c0","typeString":"literal_string \"Internal function only\""}],"id":1974,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9229:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9229:62:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1984,"nodeType":"ExpressionStatement","src":"9229:62:9"},{"assignments":[1986],"declarations":[{"constant":false,"id":1986,"mutability":"mutable","name":"_msg","nodeType":"VariableDeclaration","scope":2117,"src":"9310:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":1985,"name":"bytes29","nodeType":"ElementaryTypeName","src":"9310:7:9","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"id":1991,"initialValue":{"arguments":[{"hexValue":"30","id":1989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9341:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1987,"name":"messageBody","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"9325:11:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ref","nodeType":"MemberAccess","referencedDeclaration":3213,"src":"9325:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint40_$returns$_t_bytes29_$bound_to$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint40) pure returns (bytes29)"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9325:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"nodeType":"VariableDeclarationStatement","src":"9310:33:9"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1992,"name":"_msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"9397:4:9","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_validateBurnMessageFormat","nodeType":"MemberAccess","referencedDeclaration":1573,"src":"9397:31:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$__$bound_to$_t_bytes29_$","typeString":"function (bytes29) pure"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9397:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1996,"nodeType":"ExpressionStatement","src":"9397:33:9"},{"assignments":[1998],"declarations":[{"constant":false,"id":1998,"mutability":"mutable","name":"hookDataView","nodeType":"VariableDeclaration","scope":2117,"src":"9478:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":1997,"name":"bytes29","nodeType":"ElementaryTypeName","src":"9478:7:9","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"id":2002,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1999,"name":"_msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"9501:4:9","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_getHookData","nodeType":"MemberAccess","referencedDeclaration":1550,"src":"9501:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bytes29_$bound_to$_t_bytes29_$","typeString":"function (bytes29) pure returns (bytes29)"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9501:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"nodeType":"VariableDeclarationStatement","src":"9478:42:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2004,"name":"hookDataView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"9538:12:9","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"len","nodeType":"MemberAccess","referencedDeclaration":3319,"src":"9538:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$bound_to$_t_bytes29_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9538:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9559:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9538:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20686f6f6b20646174612070726f7669646564","id":2009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9562:23:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c36ba545cd82429076ebd7f7d2e176f2fe180384a1840447ebeedd850fffb9c5","typeString":"literal_string \"No hook data provided\""},"value":"No hook data provided"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c36ba545cd82429076ebd7f7d2e176f2fe180384a1840447ebeedd850fffb9c5","typeString":"literal_string \"No hook data provided\""}],"id":2003,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9530:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9530:56:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2011,"nodeType":"ExpressionStatement","src":"9530:56:9"},{"assignments":[2013],"declarations":[{"constant":false,"id":2013,"mutability":"mutable","name":"hookData","nodeType":"VariableDeclaration","scope":2117,"src":"9596:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2012,"name":"bytes","nodeType":"ElementaryTypeName","src":"9596:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2017,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2014,"name":"hookDataView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"9620:12:9","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"clone","nodeType":"MemberAccess","referencedDeclaration":3954,"src":"9620:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes29_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes29_$","typeString":"function (bytes29) view returns (bytes memory)"}},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9620:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9596:44:9"},{"assignments":[2019,2021],"declarations":[{"constant":false,"id":2019,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":2117,"src":"9709:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2018,"name":"uint256","nodeType":"ElementaryTypeName","src":"9709:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2021,"mutability":"mutable","name":"location","nodeType":"VariableDeclaration","scope":2117,"src":"9725:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2020,"name":"string","nodeType":"ElementaryTypeName","src":"9725:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2031,"initialValue":{"arguments":[{"id":2024,"name":"hookData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"9762:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9773:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2025,"name":"uint256","nodeType":"ElementaryTypeName","src":"9773:7:9","typeDescriptions":{}}},{"id":2028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9782:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2027,"name":"string","nodeType":"ElementaryTypeName","src":"9782:6:9","typeDescriptions":{}}}],"id":2029,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9772:17:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_string_storage_ptr_$_$","typeString":"tuple(type(uint256),type(string storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_string_storage_ptr_$_$","typeString":"tuple(type(uint256),type(string storage pointer))"}],"expression":{"id":2022,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9751:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"9751:10:9","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9751:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_string_memory_ptr_$","typeString":"tuple(uint256,string memory)"}},"nodeType":"VariableDeclarationStatement","src":"9708:82:9"},{"assignments":[2033],"declarations":[{"constant":false,"id":2033,"mutability":"mutable","name":"donationAmount","nodeType":"VariableDeclaration","scope":2117,"src":"9844:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2032,"name":"uint256","nodeType":"ElementaryTypeName","src":"9844:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2037,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2034,"name":"_msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"9869:4:9","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_getAmount","nodeType":"MemberAccess","referencedDeclaration":1477,"src":"9869:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint256_$bound_to$_t_bytes29_$","typeString":"function (bytes29) pure returns (uint256)"}},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9869:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9844:42:9"},{"assignments":[2039],"declarations":[{"constant":false,"id":2039,"mutability":"mutable","name":"pool","nodeType":"VariableDeclaration","scope":2117,"src":"9905:23:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage_ptr","typeString":"struct ReliefPools.ReliefPool"},"typeName":{"id":2038,"name":"ReliefPool","nodeType":"UserDefinedTypeName","referencedDeclaration":1693,"src":"9905:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage_ptr","typeString":"struct ReliefPools.ReliefPool"}},"visibility":"internal"}],"id":2043,"initialValue":{"baseExpression":{"id":2040,"name":"reliefPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"9931:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ReliefPool_$1693_storage_$","typeString":"mapping(uint256 => struct ReliefPools.ReliefPool storage ref)"}},"id":2042,"indexExpression":{"id":2041,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"9943:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9931:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage","typeString":"struct ReliefPools.ReliefPool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9905:45:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2045,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"10006:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage_ptr","typeString":"struct ReliefPools.ReliefPool storage pointer"}},"id":2046,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":1674,"src":"10006:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2047,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"10017:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10006:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964506f6f6c","id":2049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10025:13:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_5c68e0213938b1801b388ff78c6baada7bed83db5b5cf0948cc4e453d00382f8","typeString":"literal_string \"InvalidPool\""},"value":"InvalidPool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5c68e0213938b1801b388ff78c6baada7bed83db5b5cf0948cc4e453d00382f8","typeString":"literal_string \"InvalidPool\""}],"id":2044,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9998:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9998:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2051,"nodeType":"ExpressionStatement","src":"9998:41:9"},{"expression":{"arguments":[{"expression":{"id":2053,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"10057:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage_ptr","typeString":"struct ReliefPools.ReliefPool storage pointer"}},"id":2054,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1692,"src":"10057:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6f6c496e616374697665","id":2055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10072:14:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cea4cbe3d2d2029f106bbd6d2c93feedfb34cb9dab628d750e618312175cac3c","typeString":"literal_string \"PoolInactive\""},"value":"PoolInactive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cea4cbe3d2d2029f106bbd6d2c93feedfb34cb9dab628d750e618312175cac3c","typeString":"literal_string \"PoolInactive\""}],"id":2052,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10049:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10049:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2057,"nodeType":"ExpressionStatement","src":"10049:38:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2059,"name":"donationAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"10105:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10122:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10105:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964416d6f756e74","id":2062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10125:15:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_483313f3910f88408dc57d1e1e6afbe0d5fb0a2ab36e197f65b49ed489f7c914","typeString":"literal_string \"InvalidAmount\""},"value":"InvalidAmount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_483313f3910f88408dc57d1e1e6afbe0d5fb0a2ab36e197f65b49ed489f7c914","typeString":"literal_string \"InvalidAmount\""}],"id":2058,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10097:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10097:44:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2064,"nodeType":"ExpressionStatement","src":"10097:44:9"},{"expression":{"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10189:18:9","subExpression":{"expression":{"id":2065,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"10189:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage_ptr","typeString":"struct ReliefPools.ReliefPool storage pointer"}},"id":2067,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"totalDonors","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"10189:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2069,"nodeType":"ExpressionStatement","src":"10189:18:9"},{"expression":{"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2070,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"10217:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage_ptr","typeString":"struct ReliefPools.ReliefPool storage pointer"}},"id":2072,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"totalAmountDonated","nodeType":"MemberAccess","referencedDeclaration":1690,"src":"10217:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2073,"name":"donationAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"10244:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10217:41:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2075,"nodeType":"ExpressionStatement","src":"10217:41:9"},{"assignments":[2077],"declarations":[{"constant":false,"id":2077,"mutability":"mutable","name":"senderAddress","nodeType":"VariableDeclaration","scope":2117,"src":"10345:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2076,"name":"address","nodeType":"ElementaryTypeName","src":"10345:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2088,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2084,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"10393:6:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10385:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2082,"name":"uint256","nodeType":"ElementaryTypeName","src":"10385:7:9","typeDescriptions":{}}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10385:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10377:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2080,"name":"uint160","nodeType":"ElementaryTypeName","src":"10377:7:9","typeDescriptions":{}}},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10377:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10369:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2078,"name":"address","nodeType":"ElementaryTypeName","src":"10369:7:9","typeDescriptions":{}}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10369:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"10345:57:9"},{"expression":{"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2089,"name":"poolDonors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"10457:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Donor_$1664_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct ReliefPools.Donor storage ref))"}},"id":2092,"indexExpression":{"id":2090,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"10468:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10457:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Donor_$1664_storage_$","typeString":"mapping(address => struct ReliefPools.Donor storage ref)"}},"id":2093,"indexExpression":{"id":2091,"name":"senderAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"10476:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10457:33:9","typeDescriptions":{"typeIdentifier":"t_struct$_Donor_$1664_storage","typeString":"struct ReliefPools.Donor storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2095,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"10517:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage_ptr","typeString":"struct ReliefPools.ReliefPool storage pointer"}},"id":2096,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"totalDonors","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"10517:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2097,"name":"senderAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"10562:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2098,"name":"donationAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"10597:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2099,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10636:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"10636:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10679:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2102,"name":"sourceDomain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"10711:12:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"63726f73732d636861696e","id":2103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10747:13:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_bd876a4a5961cdfed0b8e6c469c044c8852b321773f68dc2514cfe08a70411c2","typeString":"literal_string \"cross-chain\""},"value":"cross-chain"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_stringliteral_bd876a4a5961cdfed0b8e6c469c044c8852b321773f68dc2514cfe08a70411c2","typeString":"literal_string \"cross-chain\""}],"id":2094,"name":"Donor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"10493:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Donor_$1664_storage_ptr_$","typeString":"type(struct ReliefPools.Donor storage pointer)"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["id","walletAddress","amount","timestamp","isCrossChain","sourceDomain","location"],"nodeType":"FunctionCall","src":"10493:300:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Donor_$1664_memory_ptr","typeString":"struct ReliefPools.Donor memory"}},"src":"10457:336:9","typeDescriptions":{"typeIdentifier":"t_struct$_Donor_$1664_storage","typeString":"struct ReliefPools.Donor storage ref"}},"id":2106,"nodeType":"ExpressionStatement","src":"10457:336:9"},{"eventCall":{"arguments":[{"id":2108,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"10843:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2109,"name":"senderAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"10863:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2110,"name":"sourceDomain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"10890:12:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2111,"name":"donationAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"10916:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2112,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10944:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"10944:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"63726f73732d636861696e","id":2114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10973:13:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_bd876a4a5961cdfed0b8e6c469c044c8852b321773f68dc2514cfe08a70411c2","typeString":"literal_string \"cross-chain\""},"value":"cross-chain"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_bd876a4a5961cdfed0b8e6c469c044c8852b321773f68dc2514cfe08a70411c2","typeString":"literal_string \"cross-chain\""}],"id":2107,"name":"DonationMade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"10817:12:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,uint32,uint256,uint256,string memory)"}},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10817:179:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2116,"nodeType":"EmitStatement","src":"10812:184:9"}]},"documentation":{"id":1965,"nodeType":"StructuredDocumentation","src":"8732:271:9","text":" @dev Internal function to process cross-chain donation\n @param sourceDomain The source domain of the message\n @param sender The sender of the message (as bytes32)\n @param messageBody The raw bytes containing the burn message structure"},"functionSelector":"db5e4c75","id":2118,"implemented":true,"kind":"function","modifiers":[],"name":"_processCrossChainDonation","nodeType":"FunctionDefinition","parameters":{"id":1972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1967,"mutability":"mutable","name":"sourceDomain","nodeType":"VariableDeclaration","scope":2118,"src":"9053:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1966,"name":"uint32","nodeType":"ElementaryTypeName","src":"9053:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1969,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":2118,"src":"9082:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1968,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9082:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1971,"mutability":"mutable","name":"messageBody","nodeType":"VariableDeclaration","scope":2118,"src":"9106:26:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1970,"name":"bytes","nodeType":"ElementaryTypeName","src":"9106:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9043:95:9"},"returnParameters":{"id":1973,"nodeType":"ParameterList","parameters":[],"src":"9148:0:9"},"scope":2670,"src":"9008:1995:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2209,"nodeType":"Block","src":"11189:1042:9","statements":[{"assignments":[2129],"declarations":[{"constant":false,"id":2129,"mutability":"mutable","name":"pool","nodeType":"VariableDeclaration","scope":2209,"src":"11199:23:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage_ptr","typeString":"struct ReliefPools.ReliefPool"},"typeName":{"id":2128,"name":"ReliefPool","nodeType":"UserDefinedTypeName","referencedDeclaration":1693,"src":"11199:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage_ptr","typeString":"struct ReliefPools.ReliefPool"}},"visibility":"internal"}],"id":2133,"initialValue":{"baseExpression":{"id":2130,"name":"reliefPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"11225:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ReliefPool_$1693_storage_$","typeString":"mapping(uint256 => struct ReliefPools.ReliefPool storage ref)"}},"id":2132,"indexExpression":{"id":2131,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"11237:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11225:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage","typeString":"struct ReliefPools.ReliefPool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11199:45:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2135,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"11271:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage_ptr","typeString":"struct ReliefPools.ReliefPool storage pointer"}},"id":2136,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":1674,"src":"11271:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2137,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"11282:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11271:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964506f6f6c","id":2139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11290:13:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_5c68e0213938b1801b388ff78c6baada7bed83db5b5cf0948cc4e453d00382f8","typeString":"literal_string \"InvalidPool\""},"value":"InvalidPool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5c68e0213938b1801b388ff78c6baada7bed83db5b5cf0948cc4e453d00382f8","typeString":"literal_string \"InvalidPool\""}],"id":2134,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11263:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11263:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2141,"nodeType":"ExpressionStatement","src":"11263:41:9"},{"expression":{"arguments":[{"expression":{"id":2143,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"11322:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage_ptr","typeString":"struct ReliefPools.ReliefPool storage pointer"}},"id":2144,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1692,"src":"11322:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6f6c496e616374697665","id":2145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11337:14:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cea4cbe3d2d2029f106bbd6d2c93feedfb34cb9dab628d750e618312175cac3c","typeString":"literal_string \"PoolInactive\""},"value":"PoolInactive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cea4cbe3d2d2029f106bbd6d2c93feedfb34cb9dab628d750e618312175cac3c","typeString":"literal_string \"PoolInactive\""}],"id":2142,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11314:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11314:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2147,"nodeType":"ExpressionStatement","src":"11314:38:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2149,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"11370:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11379:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11370:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964416d6f756e74","id":2152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11382:15:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_483313f3910f88408dc57d1e1e6afbe0d5fb0a2ab36e197f65b49ed489f7c914","typeString":"literal_string \"InvalidAmount\""},"value":"InvalidAmount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_483313f3910f88408dc57d1e1e6afbe0d5fb0a2ab36e197f65b49ed489f7c914","typeString":"literal_string \"InvalidAmount\""}],"id":2148,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11362:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11362:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2154,"nodeType":"ExpressionStatement","src":"11362:36:9"},{"expression":{"arguments":[{"expression":{"id":2158,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11492:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"11492:10:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"arguments":[{"id":2162,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11512:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_ReliefPools_$2670","typeString":"contract ReliefPools"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ReliefPools_$2670","typeString":"contract ReliefPools"}],"id":2161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11504:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2160,"name":"address","nodeType":"ElementaryTypeName","src":"11504:7:9","typeDescriptions":{}}},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11504:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2164,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"11519:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2155,"name":"usdcToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"11465:9:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"}},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":717,"src":"11465:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$658_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11465:61:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2166,"nodeType":"ExpressionStatement","src":"11465:61:9"},{"expression":{"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11574:18:9","subExpression":{"expression":{"id":2167,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"11574:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage_ptr","typeString":"struct ReliefPools.ReliefPool storage pointer"}},"id":2169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"totalDonors","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"11574:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2171,"nodeType":"ExpressionStatement","src":"11574:18:9"},{"expression":{"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2172,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"11602:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage_ptr","typeString":"struct ReliefPools.ReliefPool storage pointer"}},"id":2174,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"totalAmountDonated","nodeType":"MemberAccess","referencedDeclaration":1690,"src":"11602:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2175,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"11629:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11602:33:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2177,"nodeType":"ExpressionStatement","src":"11602:33:9"},{"expression":{"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2178,"name":"poolDonors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"11685:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Donor_$1664_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct ReliefPools.Donor storage ref))"}},"id":2182,"indexExpression":{"id":2179,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"11696:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11685:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Donor_$1664_storage_$","typeString":"mapping(address => struct ReliefPools.Donor storage ref)"}},"id":2183,"indexExpression":{"expression":{"id":2180,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11704:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"11704:10:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11685:30:9","typeDescriptions":{"typeIdentifier":"t_struct$_Donor_$1664_storage","typeString":"struct ReliefPools.Donor storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2185,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"11742:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage_ptr","typeString":"struct ReliefPools.ReliefPool storage pointer"}},"id":2186,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"totalDonors","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"11742:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2187,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11787:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"11787:10:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2189,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"11819:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2190,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11850:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"11850:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11893:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"36","id":2193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11926:1:9","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},{"id":2194,"name":"location","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"11990:8:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2184,"name":"Donor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"11718:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Donor_$1664_storage_ptr_$","typeString":"type(struct ReliefPools.Donor storage pointer)"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["id","walletAddress","amount","timestamp","isCrossChain","sourceDomain","location"],"nodeType":"FunctionCall","src":"11718:291:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Donor_$1664_memory_ptr","typeString":"struct ReliefPools.Donor memory"}},"src":"11685:324:9","typeDescriptions":{"typeIdentifier":"t_struct$_Donor_$1664_storage","typeString":"struct ReliefPools.Donor storage ref"}},"id":2197,"nodeType":"ExpressionStatement","src":"11685:324:9"},{"eventCall":{"arguments":[{"id":2199,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"12059:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2200,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12079:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"12079:10:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"hexValue":"36","id":2202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12103:1:9","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},{"id":2203,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"12157:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2204,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12177:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"12177:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2206,"name":"location","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"12206:8:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2198,"name":"DonationMade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"12033:12:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,uint32,uint256,uint256,string memory)"}},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12033:191:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2208,"nodeType":"EmitStatement","src":"12028:196:9"}]},"documentation":{"id":2119,"nodeType":"StructuredDocumentation","src":"11013:90:9","text":" @dev Make a direct donation to a specific relief pool (on Base network)"},"functionSelector":"16c3cdf5","id":2210,"implemented":true,"kind":"function","modifiers":[],"name":"donate","nodeType":"FunctionDefinition","parameters":{"id":2126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2121,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":2210,"src":"11124:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2120,"name":"uint256","nodeType":"ElementaryTypeName","src":"11124:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2123,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2210,"src":"11140:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2122,"name":"uint256","nodeType":"ElementaryTypeName","src":"11140:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2125,"mutability":"mutable","name":"location","nodeType":"VariableDeclaration","scope":2210,"src":"11156:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2124,"name":"string","nodeType":"ElementaryTypeName","src":"11156:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11123:56:9"},"returnParameters":{"id":2127,"nodeType":"ParameterList","parameters":[],"src":"11189:0:9"},"scope":2670,"src":"11108:1123:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2222,"nodeType":"Block","src":"12406:65:9","statements":[{"expression":{"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2218,"name":"cctpMessageTransmitter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"12416:22:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2219,"name":"_cctpMessageTransmitter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"12441:23:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12416:48:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2221,"nodeType":"ExpressionStatement","src":"12416:48:9"}]},"documentation":{"id":2211,"nodeType":"StructuredDocumentation","src":"12241:73:9","text":" @dev Set CCTP Message Transmitter address (only owner)"},"functionSelector":"d9db6e03","id":2223,"implemented":true,"kind":"function","modifiers":[{"id":2216,"modifierName":{"id":2215,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"12396:9:9","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"12396:9:9"}],"name":"setCCTPMessageTransmitter","nodeType":"FunctionDefinition","parameters":{"id":2214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2213,"mutability":"mutable","name":"_cctpMessageTransmitter","nodeType":"VariableDeclaration","scope":2223,"src":"12354:31:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2212,"name":"address","nodeType":"ElementaryTypeName","src":"12354:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12353:33:9"},"returnParameters":{"id":2217,"nodeType":"ParameterList","parameters":[],"src":"12406:0:9"},"scope":2670,"src":"12319:152:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2391,"nodeType":"Block","src":"12807:2041:9","statements":[{"assignments":[2242],"declarations":[{"constant":false,"id":2242,"mutability":"mutable","name":"pool","nodeType":"VariableDeclaration","scope":2391,"src":"12817:23:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage_ptr","typeString":"struct ReliefPools.ReliefPool"},"typeName":{"id":2241,"name":"ReliefPool","nodeType":"UserDefinedTypeName","referencedDeclaration":1693,"src":"12817:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage_ptr","typeString":"struct ReliefPools.ReliefPool"}},"visibility":"internal"}],"id":2246,"initialValue":{"baseExpression":{"id":2243,"name":"reliefPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"12843:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ReliefPool_$1693_storage_$","typeString":"mapping(uint256 => struct ReliefPools.ReliefPool storage ref)"}},"id":2245,"indexExpression":{"id":2244,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"12855:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12843:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage","typeString":"struct ReliefPools.ReliefPool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12817:45:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2248,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"12918:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage_ptr","typeString":"struct ReliefPools.ReliefPool storage pointer"}},"id":2249,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":1674,"src":"12918:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2250,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"12929:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12918:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964506f6f6c","id":2252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12937:13:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_5c68e0213938b1801b388ff78c6baada7bed83db5b5cf0948cc4e453d00382f8","typeString":"literal_string \"InvalidPool\""},"value":"InvalidPool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5c68e0213938b1801b388ff78c6baada7bed83db5b5cf0948cc4e453d00382f8","typeString":"literal_string \"InvalidPool\""}],"id":2247,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12910:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12910:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2254,"nodeType":"ExpressionStatement","src":"12910:41:9"},{"expression":{"arguments":[{"expression":{"id":2256,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"12969:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage_ptr","typeString":"struct ReliefPools.ReliefPool storage pointer"}},"id":2257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1692,"src":"12969:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6f6c496e616374697665","id":2258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12984:14:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cea4cbe3d2d2029f106bbd6d2c93feedfb34cb9dab628d750e618312175cac3c","typeString":"literal_string \"PoolInactive\""},"value":"PoolInactive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cea4cbe3d2d2029f106bbd6d2c93feedfb34cb9dab628d750e618312175cac3c","typeString":"literal_string \"PoolInactive\""}],"id":2255,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12961:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12961:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2260,"nodeType":"ExpressionStatement","src":"12961:38:9"},{"expression":{"arguments":[{"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13017:49:9","subExpression":{"baseExpression":{"baseExpression":{"id":2262,"name":"hasPersonClaimedFromPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"13018:24:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(uint256 => bool))"}},"id":2264,"indexExpression":{"id":2263,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"13043:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13018:32:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":2266,"indexExpression":{"id":2265,"name":"userIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"13051:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13018:48:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c7265616479436c61696d6564","id":2268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13068:16:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1b3442bbeff8c60abd0f004b91e82e19cb839acf9a91a5e5b6c59a74157707b","typeString":"literal_string \"AlreadyClaimed\""},"value":"AlreadyClaimed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d1b3442bbeff8c60abd0f004b91e82e19cb839acf9a91a5e5b6c59a74157707b","typeString":"literal_string \"AlreadyClaimed\""}],"id":2261,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13009:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13009:76:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2270,"nodeType":"ExpressionStatement","src":"13009:76:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2272,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"13103:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13124:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13116:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2273,"name":"address","nodeType":"ElementaryTypeName","src":"13116:7:9","typeDescriptions":{}}},"id":2276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13116:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"13103:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964526563697069656e74","id":2278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13128:18:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_5a59791da5e1793a3002179f4942b6a9467f5e9aa375b40eb65586f20e547a9f","typeString":"literal_string \"InvalidRecipient\""},"value":"InvalidRecipient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5a59791da5e1793a3002179f4942b6a9467f5e9aa375b40eb65586f20e547a9f","typeString":"literal_string \"InvalidRecipient\""}],"id":2271,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13095:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13095:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2280,"nodeType":"ExpressionStatement","src":"13095:52:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2285,"name":"nationality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"13258:11:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13252:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2283,"name":"bytes","nodeType":"ElementaryTypeName","src":"13252:5:9","typeDescriptions":{}}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13252:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2282,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"13242:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13242:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"expression":{"id":2291,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"13291:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage_ptr","typeString":"struct ReliefPools.ReliefPool storage pointer"}},"id":2292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"nationalityRequired","nodeType":"MemberAccess","referencedDeclaration":1680,"src":"13291:24:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13285:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2289,"name":"bytes","nodeType":"ElementaryTypeName","src":"13285:5:9","typeDescriptions":{}}},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13285:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":2288,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"13275:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13275:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"13242:75:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6174696f6e616c6974794d69736d61746368","id":2296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13331:21:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_0080df61d19626bcd0b1dc2321b8f7ad75bd0c790e83a846a1a2b44d96f7eb28","typeString":"literal_string \"NationalityMismatch\""},"value":"NationalityMismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0080df61d19626bcd0b1dc2321b8f7ad75bd0c790e83a846a1a2b44d96f7eb28","typeString":"literal_string \"NationalityMismatch\""}],"id":2281,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13221:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13221:141:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2298,"nodeType":"ExpressionStatement","src":"13221:141:9"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":2301,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13503:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"13503:10:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2303,"name":"nullifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"13515:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2304,"name":"userIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"13526:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2305,"name":"nationality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"13542:11:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2306,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"13555:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2307,"name":"adminSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"13566:14:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2300,"name":"_verifyAdminSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"13481:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,uint256,string memory,uint256,bytes memory) view returns (bool)"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13481:100:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69645369676e6174757265","id":2309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13595:18:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_26f94074f55601aaa609f6dfadf4b7fc63d9f3c56ec02fb00e9d0804ff24ff6f","typeString":"literal_string \"InvalidSignature\""},"value":"InvalidSignature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26f94074f55601aaa609f6dfadf4b7fc63d9f3c56ec02fb00e9d0804ff24ff6f","typeString":"literal_string \"InvalidSignature\""}],"id":2299,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13460:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13460:163:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2311,"nodeType":"ExpressionStatement","src":"13460:163:9"},{"assignments":[2313],"declarations":[{"constant":false,"id":2313,"mutability":"mutable","name":"claimAmount","nodeType":"VariableDeclaration","scope":2391,"src":"13688:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2312,"name":"uint256","nodeType":"ElementaryTypeName","src":"13688:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2316,"initialValue":{"expression":{"id":2314,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"13710:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage_ptr","typeString":"struct ReliefPools.ReliefPool storage pointer"}},"id":2315,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"allocatedFundsPerPerson","nodeType":"MemberAccess","referencedDeclaration":1682,"src":"13710:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13688:50:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2322,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13784:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_ReliefPools_$2670","typeString":"contract ReliefPools"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ReliefPools_$2670","typeString":"contract ReliefPools"}],"id":2321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13776:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2320,"name":"address","nodeType":"ElementaryTypeName","src":"13776:7:9","typeDescriptions":{}}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13776:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2318,"name":"usdcToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"13756:9:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":597,"src":"13756:19:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13756:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2325,"name":"claimAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"13794:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13756:49:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7446756e6473","id":2327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13807:19:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d2ce7f36f76fcb4610533d95a01cb9b0fdd2b058fe7ffae027e7112f5480b8df","typeString":"literal_string \"InsufficientFunds\""},"value":"InsufficientFunds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d2ce7f36f76fcb4610533d95a01cb9b0fdd2b058fe7ffae027e7112f5480b8df","typeString":"literal_string \"InsufficientFunds\""}],"id":2317,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13748:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13748:79:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2329,"nodeType":"ExpressionStatement","src":"13748:79:9"},{"expression":{"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13875:25:9","subExpression":{"expression":{"id":2330,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"13875:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage_ptr","typeString":"struct ReliefPools.ReliefPool storage pointer"}},"id":2332,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"totalBeneficiaries","nodeType":"MemberAccess","referencedDeclaration":1684,"src":"13875:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2334,"nodeType":"ExpressionStatement","src":"13875:25:9"},{"expression":{"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2335,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"13910:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage_ptr","typeString":"struct ReliefPools.ReliefPool storage pointer"}},"id":2337,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"totalAmountClaimed","nodeType":"MemberAccess","referencedDeclaration":1688,"src":"13910:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2338,"name":"claimAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"13937:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13910:38:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2340,"nodeType":"ExpressionStatement","src":"13910:38:9"},{"expression":{"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2341,"name":"poolBeneficiaries","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"14042:17:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Beneficiary_$1649_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct ReliefPools.Beneficiary storage ref))"}},"id":2344,"indexExpression":{"id":2342,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"14060:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14042:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Beneficiary_$1649_storage_$","typeString":"mapping(address => struct ReliefPools.Beneficiary storage ref)"}},"id":2345,"indexExpression":{"id":2343,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"14068:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14042:36:9","typeDescriptions":{"typeIdentifier":"t_struct$_Beneficiary_$1649_storage","typeString":"struct ReliefPools.Beneficiary storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2347,"name":"nullifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"14118:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2348,"name":"userIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"14157:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2349,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"14200:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2350,"name":"claimAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"14231:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2351,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14267:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"14267:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2346,"name":"Beneficiary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"14081:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Beneficiary_$1649_storage_ptr_$","typeString":"type(struct ReliefPools.Beneficiary storage pointer)"}},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["nullifier","userIdentifier","walletAddress","amount","timestamp"],"nodeType":"FunctionCall","src":"14081:212:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Beneficiary_$1649_memory_ptr","typeString":"struct ReliefPools.Beneficiary memory"}},"src":"14042:251:9","typeDescriptions":{"typeIdentifier":"t_struct$_Beneficiary_$1649_storage","typeString":"struct ReliefPools.Beneficiary storage ref"}},"id":2355,"nodeType":"ExpressionStatement","src":"14042:251:9"},{"expression":{"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2356,"name":"hasPersonClaimedFromPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"14382:24:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(uint256 => bool))"}},"id":2359,"indexExpression":{"id":2357,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"14407:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14382:32:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":2360,"indexExpression":{"id":2358,"name":"userIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"14415:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14382:48:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14433:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"14382:55:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2363,"nodeType":"ExpressionStatement","src":"14382:55:9"},{"expression":{"arguments":[{"id":2368,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"14487:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":2364,"name":"personClaimedPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"14447:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":2366,"indexExpression":{"id":2365,"name":"userIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"14466:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14447:34:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"14447:39:9","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14447:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2370,"nodeType":"ExpressionStatement","src":"14447:47:9"},{"expression":{"arguments":[{"id":2374,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"14575:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2375,"name":"claimAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"14586:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2371,"name":"usdcToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"14552:9:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"}},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":692,"src":"14552:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$658_$","typeString":"function (contract IERC20,address,uint256)"}},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14552:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2377,"nodeType":"ExpressionStatement","src":"14552:46:9"},{"eventCall":{"arguments":[{"id":2379,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"14648:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2380,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14668:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"14668:10:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2382,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"14692:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2383,"name":"nullifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"14715:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2384,"name":"userIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"14738:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2385,"name":"nationality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"14766:11:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2386,"name":"claimAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"14791:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2387,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14816:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"14816:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2378,"name":"FundsClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"14622:12:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,address,uint256,uint256,string memory,uint256,uint256)"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14622:219:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2390,"nodeType":"EmitStatement","src":"14617:224:9"}]},"documentation":{"id":2224,"nodeType":"StructuredDocumentation","src":"12481:76:9","text":" @dev Claim relief funds with admin signature verification"},"functionSelector":"82e15e51","id":2392,"implemented":true,"kind":"function","modifiers":[],"name":"claimRelief","nodeType":"FunctionDefinition","parameters":{"id":2239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2226,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":2392,"src":"12592:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2225,"name":"uint256","nodeType":"ElementaryTypeName","src":"12592:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2228,"mutability":"mutable","name":"nullifier","nodeType":"VariableDeclaration","scope":2392,"src":"12616:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2227,"name":"uint256","nodeType":"ElementaryTypeName","src":"12616:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2230,"mutability":"mutable","name":"userIdentifier","nodeType":"VariableDeclaration","scope":2392,"src":"12643:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2229,"name":"uint256","nodeType":"ElementaryTypeName","src":"12643:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2232,"mutability":"mutable","name":"nationality","nodeType":"VariableDeclaration","scope":2392,"src":"12675:25:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2231,"name":"string","nodeType":"ElementaryTypeName","src":"12675:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2234,"mutability":"mutable","name":"timestamp","nodeType":"VariableDeclaration","scope":2392,"src":"12710:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2233,"name":"uint256","nodeType":"ElementaryTypeName","src":"12710:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2236,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":2392,"src":"12737:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2235,"name":"address","nodeType":"ElementaryTypeName","src":"12737:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2238,"mutability":"mutable","name":"adminSignature","nodeType":"VariableDeclaration","scope":2392,"src":"12764:27:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2237,"name":"bytes","nodeType":"ElementaryTypeName","src":"12764:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12582:215:9"},"returnParameters":{"id":2240,"nodeType":"ParameterList","parameters":[],"src":"12807:0:9"},"scope":2670,"src":"12562:2286:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2421,"nodeType":"Block","src":"15172:120:9","statements":[{"expression":{"arguments":[{"id":2411,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"15199:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2412,"name":"nullifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"15207:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2413,"name":"userIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"15218:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2414,"name":"nationality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"15234:11:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2415,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"15247:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2416,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15258:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"15258:10:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2418,"name":"adminSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"15270:14:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2408,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"15182:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_ReliefPools_$2670","typeString":"contract ReliefPools"}},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"claimRelief","nodeType":"MemberAccess","referencedDeclaration":2392,"src":"15182:16:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,uint256,string memory,uint256,address,bytes memory) external"}},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15182:103:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2420,"nodeType":"ExpressionStatement","src":"15182:103:9"}]},"documentation":{"id":2393,"nodeType":"StructuredDocumentation","src":"14858:85:9","text":" @dev Claim relief funds to the same address (convenience function)"},"functionSelector":"a8f7f995","id":2422,"implemented":true,"kind":"function","modifiers":[],"name":"claimReliefToSelf","nodeType":"FunctionDefinition","parameters":{"id":2406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2395,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":2422,"src":"14984:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2394,"name":"uint256","nodeType":"ElementaryTypeName","src":"14984:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2397,"mutability":"mutable","name":"nullifier","nodeType":"VariableDeclaration","scope":2422,"src":"15008:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2396,"name":"uint256","nodeType":"ElementaryTypeName","src":"15008:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2399,"mutability":"mutable","name":"userIdentifier","nodeType":"VariableDeclaration","scope":2422,"src":"15035:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2398,"name":"uint256","nodeType":"ElementaryTypeName","src":"15035:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2401,"mutability":"mutable","name":"nationality","nodeType":"VariableDeclaration","scope":2422,"src":"15067:25:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2400,"name":"string","nodeType":"ElementaryTypeName","src":"15067:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2403,"mutability":"mutable","name":"timestamp","nodeType":"VariableDeclaration","scope":2422,"src":"15102:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2402,"name":"uint256","nodeType":"ElementaryTypeName","src":"15102:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2405,"mutability":"mutable","name":"adminSignature","nodeType":"VariableDeclaration","scope":2422,"src":"15129:27:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2404,"name":"bytes","nodeType":"ElementaryTypeName","src":"15129:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14974:188:9"},"returnParameters":{"id":2407,"nodeType":"ParameterList","parameters":[],"src":"15172:0:9"},"scope":2670,"src":"14948:344:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2458,"nodeType":"Block","src":"15417:217:9","statements":[{"assignments":[2431],"declarations":[{"constant":false,"id":2431,"mutability":"mutable","name":"pool","nodeType":"VariableDeclaration","scope":2458,"src":"15427:23:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage_ptr","typeString":"struct ReliefPools.ReliefPool"},"typeName":{"id":2430,"name":"ReliefPool","nodeType":"UserDefinedTypeName","referencedDeclaration":1693,"src":"15427:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage_ptr","typeString":"struct ReliefPools.ReliefPool"}},"visibility":"internal"}],"id":2435,"initialValue":{"baseExpression":{"id":2432,"name":"reliefPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"15453:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ReliefPool_$1693_storage_$","typeString":"mapping(uint256 => struct ReliefPools.ReliefPool storage ref)"}},"id":2434,"indexExpression":{"id":2433,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"15465:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15453:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage","typeString":"struct ReliefPools.ReliefPool storage ref"}},"nodeType":"VariableDeclarationStatement","src":"15427:45:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2437,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"15490:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage_ptr","typeString":"struct ReliefPools.ReliefPool storage pointer"}},"id":2438,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"id","nodeType":"MemberAccess","referencedDeclaration":1674,"src":"15490:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2439,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"15501:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15490:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964506f6f6c","id":2441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15509:13:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_5c68e0213938b1801b388ff78c6baada7bed83db5b5cf0948cc4e453d00382f8","typeString":"literal_string \"InvalidPool\""},"value":"InvalidPool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5c68e0213938b1801b388ff78c6baada7bed83db5b5cf0948cc4e453d00382f8","typeString":"literal_string \"InvalidPool\""}],"id":2436,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15482:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15482:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2443,"nodeType":"ExpressionStatement","src":"15482:41:9"},{"expression":{"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2444,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"15542:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage_ptr","typeString":"struct ReliefPools.ReliefPool storage pointer"}},"id":2446,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1692,"src":"15542:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15558:14:9","subExpression":{"expression":{"id":2447,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"15559:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage_ptr","typeString":"struct ReliefPools.ReliefPool storage pointer"}},"id":2448,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1692,"src":"15559:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15542:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2451,"nodeType":"ExpressionStatement","src":"15542:30:9"},{"eventCall":{"arguments":[{"id":2453,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"15605:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2454,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"15613:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage_ptr","typeString":"struct ReliefPools.ReliefPool storage pointer"}},"id":2455,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1692,"src":"15613:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2452,"name":"PoolStatusChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"15587:17:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,bool)"}},"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15587:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2457,"nodeType":"EmitStatement","src":"15582:45:9"}]},"documentation":{"id":2423,"nodeType":"StructuredDocumentation","src":"15302:49:9","text":" @dev Toggle pool active status"},"functionSelector":"216b31c1","id":2459,"implemented":true,"kind":"function","modifiers":[{"id":2428,"modifierName":{"id":2427,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"15407:9:9","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"15407:9:9"}],"name":"togglePoolStatus","nodeType":"FunctionDefinition","parameters":{"id":2426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2425,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":2459,"src":"15382:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2424,"name":"uint256","nodeType":"ElementaryTypeName","src":"15382:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15381:16:9"},"returnParameters":{"id":2429,"nodeType":"ParameterList","parameters":[],"src":"15417:0:9"},"scope":2670,"src":"15356:278:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2518,"nodeType":"Block","src":"15960:531:9","statements":[{"assignments":[2478],"declarations":[{"constant":false,"id":2478,"mutability":"mutable","name":"structHash","nodeType":"VariableDeclaration","scope":2518,"src":"15970:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15970:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2495,"initialValue":{"arguments":[{"arguments":[{"id":2482,"name":"VERIFICATION_MESSAGE_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"16042:29:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2483,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"16089:11:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2484,"name":"nullifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"16118:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2485,"name":"userIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"16145:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"arguments":[{"id":2489,"name":"nationality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"16193:11:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16187:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2487,"name":"bytes","nodeType":"ElementaryTypeName","src":"16187:5:9","typeDescriptions":{}}},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16187:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2486,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"16177:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16177:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2492,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"16224:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2480,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16014:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"16014:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16014:233:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2479,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"15991:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15991:266:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"15970:287:9"},{"assignments":[2497],"declarations":[{"constant":false,"id":2497,"mutability":"mutable","name":"digest","nodeType":"VariableDeclaration","scope":2518,"src":"16276:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2496,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16276:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2506,"initialValue":{"arguments":[{"arguments":[{"hexValue":"1901","id":2501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16333:10:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"id":2502,"name":"DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"16345:16:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2503,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"16363:10:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2499,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16316:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"16316:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16316:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2498,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"16293:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16293:91:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"16276:108:9"},{"assignments":[2508],"declarations":[{"constant":false,"id":2508,"mutability":"mutable","name":"signer","nodeType":"VariableDeclaration","scope":2518,"src":"16403:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2507,"name":"address","nodeType":"ElementaryTypeName","src":"16403:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2513,"initialValue":{"arguments":[{"id":2511,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"16435:9:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2509,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"16420:6:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":150,"src":"16420:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16420:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16403:42:9"},{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2514,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"16462:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2515,"name":"adminAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"16472:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16462:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2476,"id":2517,"nodeType":"Return","src":"16455:29:9"}]},"documentation":{"id":2460,"nodeType":"StructuredDocumentation","src":"15644:63:9","text":" @dev Verify admin signature for relief claim"},"id":2519,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyAdminSignature","nodeType":"FunctionDefinition","parameters":{"id":2473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2462,"mutability":"mutable","name":"userAddress","nodeType":"VariableDeclaration","scope":2519,"src":"15752:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2461,"name":"address","nodeType":"ElementaryTypeName","src":"15752:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2464,"mutability":"mutable","name":"nullifier","nodeType":"VariableDeclaration","scope":2519,"src":"15781:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2463,"name":"uint256","nodeType":"ElementaryTypeName","src":"15781:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2466,"mutability":"mutable","name":"userIdentifier","nodeType":"VariableDeclaration","scope":2519,"src":"15808:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2465,"name":"uint256","nodeType":"ElementaryTypeName","src":"15808:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2468,"mutability":"mutable","name":"nationality","nodeType":"VariableDeclaration","scope":2519,"src":"15840:25:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2467,"name":"string","nodeType":"ElementaryTypeName","src":"15840:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2470,"mutability":"mutable","name":"timestamp","nodeType":"VariableDeclaration","scope":2519,"src":"15875:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2469,"name":"uint256","nodeType":"ElementaryTypeName","src":"15875:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2472,"mutability":"mutable","name":"signature","nodeType":"VariableDeclaration","scope":2519,"src":"15902:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2471,"name":"bytes","nodeType":"ElementaryTypeName","src":"15902:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15742:188:9"},"returnParameters":{"id":2476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2475,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2519,"src":"15954:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2474,"name":"bool","nodeType":"ElementaryTypeName","src":"15954:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15953:6:9"},"scope":2670,"src":"15712:779:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2531,"nodeType":"Block","src":"16638:43:9","statements":[{"expression":{"baseExpression":{"id":2527,"name":"reliefPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"16655:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ReliefPool_$1693_storage_$","typeString":"mapping(uint256 => struct ReliefPools.ReliefPool storage ref)"}},"id":2529,"indexExpression":{"id":2528,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"16667:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16655:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage","typeString":"struct ReliefPools.ReliefPool storage ref"}},"functionReturnParameters":2526,"id":2530,"nodeType":"Return","src":"16648:26:9"}]},"documentation":{"id":2520,"nodeType":"StructuredDocumentation","src":"16501:51:9","text":" @dev Get relief pool information"},"functionSelector":"8e09727e","id":2532,"implemented":true,"kind":"function","modifiers":[],"name":"getReliefPool","nodeType":"FunctionDefinition","parameters":{"id":2523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2522,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":2532,"src":"16580:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2521,"name":"uint256","nodeType":"ElementaryTypeName","src":"16580:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16579:16:9"},"returnParameters":{"id":2526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2525,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2532,"src":"16619:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_memory_ptr","typeString":"struct ReliefPools.ReliefPool"},"typeName":{"id":2524,"name":"ReliefPool","nodeType":"UserDefinedTypeName","referencedDeclaration":1693,"src":"16619:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_ReliefPool_$1693_storage_ptr","typeString":"struct ReliefPools.ReliefPool"}},"visibility":"internal"}],"src":"16618:19:9"},"scope":2670,"src":"16557:124:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2548,"nodeType":"Block","src":"16862:62:9","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2542,"name":"poolBeneficiaries","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"16879:17:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Beneficiary_$1649_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct ReliefPools.Beneficiary storage ref))"}},"id":2544,"indexExpression":{"id":2543,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"16897:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16879:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Beneficiary_$1649_storage_$","typeString":"mapping(address => struct ReliefPools.Beneficiary storage ref)"}},"id":2546,"indexExpression":{"id":2545,"name":"beneficiary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"16905:11:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16879:38:9","typeDescriptions":{"typeIdentifier":"t_struct$_Beneficiary_$1649_storage","typeString":"struct ReliefPools.Beneficiary storage ref"}},"functionReturnParameters":2541,"id":2547,"nodeType":"Return","src":"16872:45:9"}]},"documentation":{"id":2533,"nodeType":"StructuredDocumentation","src":"16691:62:9","text":" @dev Get beneficiary information for a pool"},"functionSelector":"06cc759b","id":2549,"implemented":true,"kind":"function","modifiers":[],"name":"getBeneficiary","nodeType":"FunctionDefinition","parameters":{"id":2538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2535,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":2549,"src":"16782:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2534,"name":"uint256","nodeType":"ElementaryTypeName","src":"16782:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2537,"mutability":"mutable","name":"beneficiary","nodeType":"VariableDeclaration","scope":2549,"src":"16798:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2536,"name":"address","nodeType":"ElementaryTypeName","src":"16798:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16781:37:9"},"returnParameters":{"id":2541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2540,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2549,"src":"16842:18:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Beneficiary_$1649_memory_ptr","typeString":"struct ReliefPools.Beneficiary"},"typeName":{"id":2539,"name":"Beneficiary","nodeType":"UserDefinedTypeName","referencedDeclaration":1649,"src":"16842:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Beneficiary_$1649_storage_ptr","typeString":"struct ReliefPools.Beneficiary"}},"visibility":"internal"}],"src":"16841:20:9"},"scope":2670,"src":"16758:166:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2565,"nodeType":"Block","src":"17081:49:9","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2559,"name":"poolDonors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"17098:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Donor_$1664_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct ReliefPools.Donor storage ref))"}},"id":2561,"indexExpression":{"id":2560,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"17109:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17098:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Donor_$1664_storage_$","typeString":"mapping(address => struct ReliefPools.Donor storage ref)"}},"id":2563,"indexExpression":{"id":2562,"name":"donor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"17117:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17098:25:9","typeDescriptions":{"typeIdentifier":"t_struct$_Donor_$1664_storage","typeString":"struct ReliefPools.Donor storage ref"}},"functionReturnParameters":2558,"id":2564,"nodeType":"Return","src":"17091:32:9"}]},"documentation":{"id":2550,"nodeType":"StructuredDocumentation","src":"16934:56:9","text":" @dev Get donor information for a pool"},"functionSelector":"d0e5a743","id":2566,"implemented":true,"kind":"function","modifiers":[],"name":"getDonor","nodeType":"FunctionDefinition","parameters":{"id":2555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2552,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":2566,"src":"17013:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2551,"name":"uint256","nodeType":"ElementaryTypeName","src":"17013:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2554,"mutability":"mutable","name":"donor","nodeType":"VariableDeclaration","scope":2566,"src":"17029:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2553,"name":"address","nodeType":"ElementaryTypeName","src":"17029:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17012:31:9"},"returnParameters":{"id":2558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2557,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2566,"src":"17067:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Donor_$1664_memory_ptr","typeString":"struct ReliefPools.Donor"},"typeName":{"id":2556,"name":"Donor","nodeType":"UserDefinedTypeName","referencedDeclaration":1664,"src":"17067:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_Donor_$1664_storage_ptr","typeString":"struct ReliefPools.Donor"}},"visibility":"internal"}],"src":"17066:14:9"},"scope":2670,"src":"16995:135:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2584,"nodeType":"Block","src":"17362:154:9","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2578,"name":"hasPersonClaimedFromPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"17461:24:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(uint256 => bool))"}},"id":2580,"indexExpression":{"id":2579,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"17486:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17461:32:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":2582,"indexExpression":{"id":2581,"name":"userIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"17494:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17461:48:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2577,"id":2583,"nodeType":"Return","src":"17454:55:9"}]},"documentation":{"id":2567,"nodeType":"StructuredDocumentation","src":"17140:93:9","text":" @dev Check if person has claimed from a specific pool using userIdentifier"},"functionSelector":"ef20c85a","id":2585,"implemented":true,"kind":"function","modifiers":[],"name":"checkPersonClaimedFromPool","nodeType":"FunctionDefinition","parameters":{"id":2574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2569,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":2585,"src":"17274:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2568,"name":"uint256","nodeType":"ElementaryTypeName","src":"17274:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2571,"mutability":"mutable","name":"nullifier","nodeType":"VariableDeclaration","scope":2585,"src":"17290:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2570,"name":"uint256","nodeType":"ElementaryTypeName","src":"17290:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2573,"mutability":"mutable","name":"userIdentifier","nodeType":"VariableDeclaration","scope":2585,"src":"17309:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2572,"name":"uint256","nodeType":"ElementaryTypeName","src":"17309:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17273:59:9"},"returnParameters":{"id":2577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2576,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2585,"src":"17356:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2575,"name":"bool","nodeType":"ElementaryTypeName","src":"17356:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17355:6:9"},"scope":2670,"src":"17238:278:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2600,"nodeType":"Block","src":"17730:140:9","statements":[{"expression":{"baseExpression":{"id":2596,"name":"personClaimedPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"17829:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":2598,"indexExpression":{"id":2597,"name":"userIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"17848:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17829:34:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":2595,"id":2599,"nodeType":"Return","src":"17822:41:9"}]},"documentation":{"id":2586,"nodeType":"StructuredDocumentation","src":"17526:84:9","text":" @dev Get all pools a person has claimed from using userIdentifier"},"functionSelector":"73aacb00","id":2601,"implemented":true,"kind":"function","modifiers":[],"name":"getPersonClaimedPools","nodeType":"FunctionDefinition","parameters":{"id":2591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2588,"mutability":"mutable","name":"nullifier","nodeType":"VariableDeclaration","scope":2601,"src":"17646:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2587,"name":"uint256","nodeType":"ElementaryTypeName","src":"17646:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2590,"mutability":"mutable","name":"userIdentifier","nodeType":"VariableDeclaration","scope":2601,"src":"17665:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2589,"name":"uint256","nodeType":"ElementaryTypeName","src":"17665:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17645:43:9"},"returnParameters":{"id":2595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2594,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2601,"src":"17712:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2592,"name":"uint256","nodeType":"ElementaryTypeName","src":"17712:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2593,"nodeType":"ArrayTypeName","src":"17712:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"17711:18:9"},"scope":2670,"src":"17615:255:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2628,"nodeType":"Block","src":"18196:123:9","statements":[{"expression":{"arguments":[{"id":2620,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"18233:11:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2621,"name":"nullifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"18246:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2622,"name":"userIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"18257:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2623,"name":"nationality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"18273:11:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2624,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"18286:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2625,"name":"adminSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"18297:14:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2619,"name":"_verifyAdminSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"18211:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,uint256,string memory,uint256,bytes memory) view returns (bool)"}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18211:101:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2618,"id":2627,"nodeType":"Return","src":"18204:108:9"}]},"documentation":{"id":2602,"nodeType":"StructuredDocumentation","src":"17876:63:9","text":" @dev Verify admin signature for relief claim"},"functionSelector":"29d9b720","id":2629,"implemented":true,"kind":"function","modifiers":[],"name":"verifyAdminSignature","nodeType":"FunctionDefinition","parameters":{"id":2615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2604,"mutability":"mutable","name":"userAddress","nodeType":"VariableDeclaration","scope":2629,"src":"17983:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2603,"name":"address","nodeType":"ElementaryTypeName","src":"17983:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2606,"mutability":"mutable","name":"nullifier","nodeType":"VariableDeclaration","scope":2629,"src":"18012:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2605,"name":"uint256","nodeType":"ElementaryTypeName","src":"18012:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2608,"mutability":"mutable","name":"userIdentifier","nodeType":"VariableDeclaration","scope":2629,"src":"18039:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2607,"name":"uint256","nodeType":"ElementaryTypeName","src":"18039:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2610,"mutability":"mutable","name":"nationality","nodeType":"VariableDeclaration","scope":2629,"src":"18071:25:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2609,"name":"string","nodeType":"ElementaryTypeName","src":"18071:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2612,"mutability":"mutable","name":"timestamp","nodeType":"VariableDeclaration","scope":2629,"src":"18106:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2611,"name":"uint256","nodeType":"ElementaryTypeName","src":"18106:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2614,"mutability":"mutable","name":"adminSignature","nodeType":"VariableDeclaration","scope":2629,"src":"18133:27:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2613,"name":"bytes","nodeType":"ElementaryTypeName","src":"18133:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17973:193:9"},"returnParameters":{"id":2618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2617,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2629,"src":"18190:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2616,"name":"bool","nodeType":"ElementaryTypeName","src":"18190:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18189:6:9"},"scope":2670,"src":"17944:375:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2643,"nodeType":"Block","src":"18445:58:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2639,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"18490:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_ReliefPools_$2670","typeString":"contract ReliefPools"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ReliefPools_$2670","typeString":"contract ReliefPools"}],"id":2638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18482:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2637,"name":"address","nodeType":"ElementaryTypeName","src":"18482:7:9","typeDescriptions":{}}},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18482:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2635,"name":"usdcToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"18462:9:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"}},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":597,"src":"18462:19:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18462:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2634,"id":2642,"nodeType":"Return","src":"18455:41:9"}]},"documentation":{"id":2630,"nodeType":"StructuredDocumentation","src":"18329:49:9","text":" @dev Get contract USDC balance"},"functionSelector":"6f9fb98a","id":2644,"implemented":true,"kind":"function","modifiers":[],"name":"getContractBalance","nodeType":"FunctionDefinition","parameters":{"id":2631,"nodeType":"ParameterList","parameters":[],"src":"18410:2:9"},"returnParameters":{"id":2634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2633,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2644,"src":"18436:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2632,"name":"uint256","nodeType":"ElementaryTypeName","src":"18436:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18435:9:9"},"scope":2670,"src":"18383:120:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2659,"nodeType":"Block","src":"18635:61:9","statements":[{"expression":{"arguments":[{"id":2655,"name":"adminAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"18668:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2656,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2647,"src":"18682:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2652,"name":"usdcToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"18645:9:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$658","typeString":"contract IERC20"}},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":692,"src":"18645:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$658_$","typeString":"function (contract IERC20,address,uint256)"}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18645:44:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2658,"nodeType":"ExpressionStatement","src":"18645:44:9"}]},"documentation":{"id":2645,"nodeType":"StructuredDocumentation","src":"18513:55:9","text":" @dev Emergency withdraw (only owner)"},"functionSelector":"5312ea8e","id":2660,"implemented":true,"kind":"function","modifiers":[{"id":2650,"modifierName":{"id":2649,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"18625:9:9","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"18625:9:9"}],"name":"emergencyWithdraw","nodeType":"FunctionDefinition","parameters":{"id":2648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2647,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2660,"src":"18600:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2646,"name":"uint256","nodeType":"ElementaryTypeName","src":"18600:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18599:16:9"},"returnParameters":{"id":2651,"nodeType":"ParameterList","parameters":[],"src":"18635:0:9"},"scope":2670,"src":"18573:123:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2668,"nodeType":"Block","src":"18817:35:9","statements":[{"expression":{"id":2666,"name":"poolCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"18834:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2665,"id":2667,"nodeType":"Return","src":"18827:18:9"}]},"documentation":{"id":2661,"nodeType":"StructuredDocumentation","src":"18706:49:9","text":" @dev Get total number of pools"},"functionSelector":"d3ffe67a","id":2669,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalPools","nodeType":"FunctionDefinition","parameters":{"id":2662,"nodeType":"ParameterList","parameters":[],"src":"18782:2:9"},"returnParameters":{"id":2665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2664,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2669,"src":"18808:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2663,"name":"uint256","nodeType":"ElementaryTypeName","src":"18808:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18807:9:9"},"scope":2670,"src":"18760:92:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2671,"src":"1459:17395:9"}],"src":"39:18816:9"},"id":9},"contracts/TypedMemView.sol":{"ast":{"absolutePath":"contracts/TypedMemView.sol","exportedSymbols":{"SafeMath":[580],"TypedMemView":[4090]},"id":4091,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2672,"literals":["solidity",">=","0.5",".10","<","0.8",".0"],"nodeType":"PragmaDirective","src":"46:32:10"},{"absolutePath":"@openzeppelin/contracts-0.7/math/SafeMath.sol","file":"@openzeppelin/contracts-0.7/math/SafeMath.sol","id":2674,"nodeType":"ImportDirective","scope":4091,"sourceUnit":581,"src":"80:71:10","symbolAliases":[{"foreign":{"id":2673,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"src":"88:8:10","typeDescriptions":{}}}],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":4090,"linearizedBaseContracts":[4090],"name":"TypedMemView","nodeType":"ContractDefinition","nodes":[{"id":2677,"libraryName":{"id":2675,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":580,"src":"186:8:10","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$580","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"180:27:10","typeName":{"id":2676,"name":"uint256","nodeType":"ElementaryTypeName","src":"199:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"functionSelector":"f26be3fc","id":2680,"mutability":"constant","name":"NULL","nodeType":"VariableDeclaration","scope":4090,"src":"2700:94:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":2678,"name":"bytes29","nodeType":"ElementaryTypeName","src":"2700:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"value":{"hexValue":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","id":2679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2731:63:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_7894ac7152936831bdd146bb58cc79cdde7fa746d05d79c2b1dea4074b875c40","typeString":"literal_string hex\"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\""}},"visibility":"public"},{"constant":true,"id":2683,"mutability":"constant","name":"LOW_12_MASK","nodeType":"VariableDeclaration","scope":4090,"src":"2825:57:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2681,"name":"uint256","nodeType":"ElementaryTypeName","src":"2825:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3078666666666666666666666666666666666666666666666666","id":2682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2856:26:10","typeDescriptions":{"typeIdentifier":"t_rational_79228162514264337593543950335_by_1","typeString":"int_const 79228162514264337593543950335"},"value":"0xffffffffffffffffffffffff"},"visibility":"internal"},{"constant":true,"id":2686,"mutability":"constant","name":"SHIFT_TO_LEN","nodeType":"VariableDeclaration","scope":4090,"src":"2911:32:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2684,"name":"uint8","nodeType":"ElementaryTypeName","src":"2911:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3234","id":2685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2941:2:10","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"visibility":"internal"},{"constant":true,"id":2691,"mutability":"constant","name":"SHIFT_TO_LOC","nodeType":"VariableDeclaration","scope":4090,"src":"2949:37:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2687,"name":"uint8","nodeType":"ElementaryTypeName","src":"2949:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"commonType":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"id":2690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3936","id":2688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2979:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3234","id":2689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2984:2:10","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"src":"2979:7:10","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"}},"visibility":"internal"},{"constant":true,"id":2698,"mutability":"constant","name":"SHIFT_TO_TYPE","nodeType":"VariableDeclaration","scope":4090,"src":"2992:43:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2692,"name":"uint8","nodeType":"ElementaryTypeName","src":"2992:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"commonType":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"id":2697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"id":2695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3936","id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3023:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3936","id":2694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3028:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3023:7:10","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3234","id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3033:2:10","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"src":"3023:12:10","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"}},"visibility":"internal"},{"constant":true,"id":2701,"mutability":"constant","name":"NIBBLE_LOOKUP","nodeType":"VariableDeclaration","scope":4090,"src":"3068:57:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2699,"name":"bytes","nodeType":"ElementaryTypeName","src":"3068:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":{"hexValue":"30313233343536373839616263646566","id":2700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3107:18:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"body":{"id":2724,"nodeType":"Block","src":"3391:118:10","statements":[{"assignments":[2710],"declarations":[{"constant":false,"id":2710,"mutability":"mutable","name":"_nibble","nodeType":"VariableDeclaration","scope":2724,"src":"3401:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2709,"name":"uint8","nodeType":"ElementaryTypeName","src":"3401:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2714,"initialValue":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2711,"name":"_byte","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"3417:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783066","id":2712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3425:4:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0x0f"},"src":"3417:12:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"3401:28:10"},{"expression":{"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2715,"name":"_char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"3465:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":2718,"name":"NIBBLE_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"3479:13:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2720,"indexExpression":{"id":2719,"name":"_nibble","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"3493:7:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3479:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3473:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2716,"name":"uint8","nodeType":"ElementaryTypeName","src":"3473:5:10","typeDescriptions":{}}},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3473:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3465:37:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2723,"nodeType":"ExpressionStatement","src":"3465:37:10"}]},"documentation":{"id":2702,"nodeType":"StructuredDocumentation","src":"3132:186:10","text":" @notice Returns the encoded hex character that represents the lower 4 bits of the argument.\n @param _byte The byte\n @return _char The encoded hex character"},"id":2725,"implemented":true,"kind":"function","modifiers":[],"name":"nibbleHex","nodeType":"FunctionDefinition","parameters":{"id":2705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2704,"mutability":"mutable","name":"_byte","nodeType":"VariableDeclaration","scope":2725,"src":"3342:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2703,"name":"uint8","nodeType":"ElementaryTypeName","src":"3342:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3341:13:10"},"returnParameters":{"id":2708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2707,"mutability":"mutable","name":"_char","nodeType":"VariableDeclaration","scope":2725,"src":"3378:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2706,"name":"uint8","nodeType":"ElementaryTypeName","src":"3378:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3377:13:10"},"scope":4090,"src":"3323:186:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2751,"nodeType":"Block","src":"3746:133:10","statements":[{"expression":{"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2733,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"3756:7:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2735,"name":"_b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"3777:2:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3783:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3777:7:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2734,"name":"nibbleHex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"3767:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint8_$returns$_t_uint8_$","typeString":"function (uint8) pure returns (uint8)"}},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3767:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3756:29:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":2740,"nodeType":"ExpressionStatement","src":"3756:29:10"},{"expression":{"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2741,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"3809:7:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":2742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3821:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"3809:13:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":2744,"nodeType":"ExpressionStatement","src":"3809:13:10"},{"expression":{"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2745,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"3832:7:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"arguments":[{"id":2747,"name":"_b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"3853:2:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2746,"name":"nibbleHex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"3843:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint8_$returns$_t_uint8_$","typeString":"function (uint8) pure returns (uint8)"}},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3843:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3832:24:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":2750,"nodeType":"ExpressionStatement","src":"3832:24:10"}]},"documentation":{"id":2726,"nodeType":"StructuredDocumentation","src":"3514:161:10","text":" @notice      Returns a uint16 containing the hex-encoded byte.\n @param _b    The byte\n @return      encoded - The hex-encoded byte"},"id":2752,"implemented":true,"kind":"function","modifiers":[],"name":"byteHex","nodeType":"FunctionDefinition","parameters":{"id":2729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2728,"mutability":"mutable","name":"_b","nodeType":"VariableDeclaration","scope":2752,"src":"3697:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2727,"name":"uint8","nodeType":"ElementaryTypeName","src":"3697:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3696:10:10"},"returnParameters":{"id":2732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2731,"mutability":"mutable","name":"encoded","nodeType":"VariableDeclaration","scope":2752,"src":"3730:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2730,"name":"uint16","nodeType":"ElementaryTypeName","src":"3730:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"3729:16:10"},"scope":4090,"src":"3680:199:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2842,"nodeType":"Block","src":"4288:471:10","statements":[{"body":{"id":2800,"nodeType":"Block","src":"4333:167:10","statements":[{"assignments":[2774],"declarations":[{"constant":false,"id":2774,"mutability":"mutable","name":"_byte","nodeType":"VariableDeclaration","scope":2800,"src":"4347:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2773,"name":"uint8","nodeType":"ElementaryTypeName","src":"4347:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2784,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2777,"name":"_b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"4367:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2778,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"4374:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":2779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4378:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"4374:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2781,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4373:7:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4367:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4361:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2775,"name":"uint8","nodeType":"ElementaryTypeName","src":"4361:5:10","typeDescriptions":{}}},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4361:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4347:34:10"},{"expression":{"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2785,"name":"first","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"4395:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"arguments":[{"id":2787,"name":"_byte","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"4412:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2786,"name":"byteHex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"4404:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint8_$returns$_t_uint16_$","typeString":"function (uint8) pure returns (uint16)"}},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4404:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"4395:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2790,"nodeType":"ExpressionStatement","src":"4395:23:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2791,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"4436:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3136","id":2792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4441:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"4436:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2799,"nodeType":"IfStatement","src":"4432:58:10","trueBody":{"id":2798,"nodeType":"Block","src":"4445:45:10","statements":[{"expression":{"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2794,"name":"first","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"4463:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":2795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4473:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"4463:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2797,"nodeType":"ExpressionStatement","src":"4463:12:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2766,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"4317:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4321:2:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"4317:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2801,"initializationExpression":{"assignments":[2763],"declarations":[{"constant":false,"id":2763,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":2801,"src":"4303:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2762,"name":"uint8","nodeType":"ElementaryTypeName","src":"4303:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2765,"initialValue":{"hexValue":"3331","id":2764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4313:2:10","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"nodeType":"VariableDeclarationStatement","src":"4303:12:10"},"loopExpression":{"expression":{"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2769,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"4325:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4330:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4325:6:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2772,"nodeType":"ExpressionStatement","src":"4325:6:10"},"nodeType":"ForStatement","src":"4298:202:10"},{"body":{"id":2840,"nodeType":"Block","src":"4585:168:10","statements":[{"assignments":[2814],"declarations":[{"constant":false,"id":2814,"mutability":"mutable","name":"_byte","nodeType":"VariableDeclaration","scope":2840,"src":"4599:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2813,"name":"uint8","nodeType":"ElementaryTypeName","src":"4599:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2824,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2817,"name":"_b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"4619:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2818,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"4626:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":2819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4630:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"4626:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2821,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4625:7:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4619:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4613:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2815,"name":"uint8","nodeType":"ElementaryTypeName","src":"4613:5:10","typeDescriptions":{}}},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4613:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4599:34:10"},{"expression":{"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2825,"name":"second","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"4647:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"arguments":[{"id":2827,"name":"_byte","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"4665:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2826,"name":"byteHex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"4657:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint8_$returns$_t_uint16_$","typeString":"function (uint8) pure returns (uint16)"}},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4657:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"4647:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2830,"nodeType":"ExpressionStatement","src":"4647:24:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2831,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"4689:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4694:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4689:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2839,"nodeType":"IfStatement","src":"4685:58:10","trueBody":{"id":2838,"nodeType":"Block","src":"4697:46:10","statements":[{"expression":{"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2834,"name":"second","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"4715:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":2835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4726:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"4715:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2837,"nodeType":"ExpressionStatement","src":"4715:13:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2806,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"4567:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"323535","id":2807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4571:3:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4567:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2841,"initializationExpression":{"assignments":[2803],"declarations":[{"constant":false,"id":2803,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":2841,"src":"4553:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2802,"name":"uint8","nodeType":"ElementaryTypeName","src":"4553:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2805,"initialValue":{"hexValue":"3135","id":2804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4563:2:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"nodeType":"VariableDeclarationStatement","src":"4553:12:10"},"loopExpression":{"expression":{"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2809,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"4577:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4582:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4577:6:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2812,"nodeType":"ExpressionStatement","src":"4577:6:10"},"nodeType":"ForStatement","src":"4548:205:10"}]},"documentation":{"id":2753,"nodeType":"StructuredDocumentation","src":"3885:313:10","text":" @notice      Encodes the uint256 to hex. `first` contains the encoded top 16 bytes.\n              `second` contains the encoded lower 16 bytes.\n @param _b    The 32 bytes as uint256\n @return      first - The top 16 bytes\n @return      second - The bottom 16 bytes"},"id":2843,"implemented":true,"kind":"function","modifiers":[],"name":"encodeHex","nodeType":"FunctionDefinition","parameters":{"id":2756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2755,"mutability":"mutable","name":"_b","nodeType":"VariableDeclaration","scope":2843,"src":"4222:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2754,"name":"uint256","nodeType":"ElementaryTypeName","src":"4222:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4221:12:10"},"returnParameters":{"id":2761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2758,"mutability":"mutable","name":"first","nodeType":"VariableDeclaration","scope":2843,"src":"4257:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2757,"name":"uint256","nodeType":"ElementaryTypeName","src":"4257:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2760,"mutability":"mutable","name":"second","nodeType":"VariableDeclaration","scope":2843,"src":"4272:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2759,"name":"uint256","nodeType":"ElementaryTypeName","src":"4272:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4256:31:10"},"scope":4090,"src":"4203:556:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2939,"nodeType":"Block","src":"5108:974:10","statements":[{"expression":{"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2851,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"5118:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2852,"name":"_b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"5122:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5118:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2854,"nodeType":"ExpressionStatement","src":"5118:6:10"},{"expression":{"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2855,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"5157:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2856,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"5163:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5168:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"5163:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2859,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5162:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830304646303046463030464630304646303046463030464630304646303046463030464630304646303046463030464630304646303046463030464630304646","id":2860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5173:66:10","typeDescriptions":{"typeIdentifier":"t_rational_450552876409790643671482431940419874915447411150352389258589821042463539455_by_1","typeString":"int_const 4505...(67 digits omitted)...9455"},"value":"0x00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF"},"src":"5162:77:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2862,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5161:79:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2863,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"5257:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830304646303046463030464630304646303046463030464630304646303046463030464630304646303046463030464630304646303046463030464630304646","id":2864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5261:66:10","typeDescriptions":{"typeIdentifier":"t_rational_450552876409790643671482431940419874915447411150352389258589821042463539455_by_1","typeString":"int_const 4505...(67 digits omitted)...9455"},"value":"0x00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF"},"src":"5257:70:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2866,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5256:72:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":2867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5332:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"5256:77:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2869,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5255:79:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5161:173:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:177:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2872,"nodeType":"ExpressionStatement","src":"5157:177:10"},{"expression":{"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2873,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"5378:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2874,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"5384:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5389:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"5384:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2877,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5383:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830303030464646463030303046464646303030304646464630303030464646463030303046464646303030304646464630303030464646463030303046464646","id":2878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5395:66:10","typeDescriptions":{"typeIdentifier":"t_rational_1766820105243087041267848467410591083712559083657179364930612997358944255_by_1","typeString":"int_const 1766...(65 digits omitted)...4255"},"value":"0x0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF"},"src":"5383:78:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2880,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5382:80:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2881,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"5479:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830303030464646463030303046464646303030304646464630303030464646463030303046464646303030304646464630303030464646463030303046464646","id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5483:66:10","typeDescriptions":{"typeIdentifier":"t_rational_1766820105243087041267848467410591083712559083657179364930612997358944255_by_1","typeString":"int_const 1766...(65 digits omitted)...4255"},"value":"0x0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF"},"src":"5479:70:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2884,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5478:72:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":2885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5554:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"5478:78:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2887,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5477:80:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5382:175:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5378:179:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2890,"nodeType":"ExpressionStatement","src":"5378:179:10"},{"expression":{"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2891,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"5601:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2892,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"5607:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5612:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"5607:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2895,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5606:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830303030303030304646464646464646303030303030303046464646464646463030303030303030464646464646464630303030303030304646464646464646","id":2896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5618:66:10","typeDescriptions":{"typeIdentifier":"t_rational_26959946660873538060741835960174461801791452538186943042387869433855_by_1","typeString":"int_const 2695...(60 digits omitted)...3855"},"value":"0x00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF"},"src":"5606:78:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2898,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5605:80:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2899,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"5702:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830303030303030304646464646464646303030303030303046464646464646463030303030303030464646464646464630303030303030304646464646464646","id":2900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5706:66:10","typeDescriptions":{"typeIdentifier":"t_rational_26959946660873538060741835960174461801791452538186943042387869433855_by_1","typeString":"int_const 2695...(60 digits omitted)...3855"},"value":"0x00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF"},"src":"5702:70:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2902,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5701:72:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":2903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5777:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"5701:78:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2905,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5700:80:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5605:175:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5601:179:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2908,"nodeType":"ExpressionStatement","src":"5601:179:10"},{"expression":{"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2909,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"5824:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2910,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"5830:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5835:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"5830:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2913,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5829:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830303030303030303030303030303030464646464646464646464646464646463030303030303030303030303030303046464646464646464646464646464646","id":2914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5841:66:10","typeDescriptions":{"typeIdentifier":"t_rational_6277101735386680763495507056286727952657427581105975853055_by_1","typeString":"int_const 6277...(50 digits omitted)...3055"},"value":"0x0000000000000000FFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF"},"src":"5829:78:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2916,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5828:80:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2917,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"5925:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830303030303030303030303030303030464646464646464646464646464646463030303030303030303030303030303046464646464646464646464646464646","id":2918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5929:66:10","typeDescriptions":{"typeIdentifier":"t_rational_6277101735386680763495507056286727952657427581105975853055_by_1","typeString":"int_const 6277...(50 digits omitted)...3055"},"value":"0x0000000000000000FFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF"},"src":"5925:70:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2920,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5924:72:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":2921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6000:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"5924:78:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2923,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5923:80:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5828:175:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5824:179:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2926,"nodeType":"ExpressionStatement","src":"5824:179:10"},{"expression":{"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2927,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"6048:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2928,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"6053:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6058:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"6053:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2931,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6052:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2932,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"6066:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":2933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6071:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"6066:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2935,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6065:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6052:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6048:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2938,"nodeType":"ExpressionStatement","src":"6048:27:10"}]},"documentation":{"id":2844,"nodeType":"StructuredDocumentation","src":"4765:268:10","text":" @notice          Changes the endianness of a uint256.\n @dev             https://graphics.stanford.edu/~seander/bithacks.html#ReverseParallel\n @param _b        The unsigned integer to reverse\n @return          v - The reversed value"},"id":2940,"implemented":true,"kind":"function","modifiers":[],"name":"reverseUint256","nodeType":"FunctionDefinition","parameters":{"id":2847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2846,"mutability":"mutable","name":"_b","nodeType":"VariableDeclaration","scope":2940,"src":"5062:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2845,"name":"uint256","nodeType":"ElementaryTypeName","src":"5062:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5061:12:10"},"returnParameters":{"id":2850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2849,"mutability":"mutable","name":"v","nodeType":"VariableDeclaration","scope":2940,"src":"5097:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2848,"name":"uint256","nodeType":"ElementaryTypeName","src":"5097:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5096:11:10"},"scope":4090,"src":"5038:1044:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2949,"nodeType":"Block","src":"6305:300:10","statements":[{"AST":{"nodeType":"YulBlock","src":"6364:235:10","statements":[{"nodeType":"YulAssignment","src":"6450:139:10","value":{"arguments":[{"arguments":[{"name":"_len","nodeType":"YulIdentifier","src":"6483:4:10"},{"kind":"number","nodeType":"YulLiteral","src":"6489:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6479:3:10"},"nodeType":"YulFunctionCall","src":"6479:12:10"},{"kind":"number","nodeType":"YulLiteral","src":"6509:66:10","type":"","value":"0x8000000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"sar","nodeType":"YulIdentifier","src":"6458:3:10"},"nodeType":"YulFunctionCall","src":"6458:131:10"},"variableNames":[{"name":"mask","nodeType":"YulIdentifier","src":"6450:4:10"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2943,"isOffset":false,"isSlot":false,"src":"6483:4:10","valueSize":1},{"declaration":2946,"isOffset":false,"isSlot":false,"src":"6450:4:10","valueSize":1}],"id":2948,"nodeType":"InlineAssembly","src":"6355:244:10"}]},"documentation":{"id":2941,"nodeType":"StructuredDocumentation","src":"6088:146:10","text":" @notice      Create a mask with the highest `_len` bits set.\n @param _len  The length\n @return      mask - The mask"},"id":2950,"implemented":true,"kind":"function","modifiers":[],"name":"leftMask","nodeType":"FunctionDefinition","parameters":{"id":2944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2943,"mutability":"mutable","name":"_len","nodeType":"VariableDeclaration","scope":2950,"src":"6257:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2942,"name":"uint8","nodeType":"ElementaryTypeName","src":"6257:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6256:12:10"},"returnParameters":{"id":2947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2946,"mutability":"mutable","name":"mask","nodeType":"VariableDeclaration","scope":2950,"src":"6291:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2945,"name":"uint256","nodeType":"ElementaryTypeName","src":"6291:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6290:14:10"},"scope":4090,"src":"6239:366:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2958,"nodeType":"Block","src":"6765:28:10","statements":[{"expression":{"id":2956,"name":"NULL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"6782:4:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"functionReturnParameters":2955,"id":2957,"nodeType":"Return","src":"6775:11:10"}]},"documentation":{"id":2951,"nodeType":"StructuredDocumentation","src":"6611:97:10","text":" @notice      Return the null view.\n @return      bytes29 - The null view"},"id":2959,"implemented":true,"kind":"function","modifiers":[],"name":"nullView","nodeType":"FunctionDefinition","parameters":{"id":2952,"nodeType":"ParameterList","parameters":[],"src":"6730:2:10"},"returnParameters":{"id":2955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2954,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2959,"src":"6756:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":2953,"name":"bytes29","nodeType":"ElementaryTypeName","src":"6756:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"6755:9:10"},"scope":4090,"src":"6713:80:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2971,"nodeType":"Block","src":"6976:39:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2967,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"6993:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2968,"name":"NULL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"7004:4:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"src":"6993:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2966,"id":2970,"nodeType":"Return","src":"6986:22:10"}]},"documentation":{"id":2960,"nodeType":"StructuredDocumentation","src":"6799:110:10","text":" @notice      Check if the view is null.\n @return      bool - True if the view is null"},"id":2972,"implemented":true,"kind":"function","modifiers":[],"name":"isNull","nodeType":"FunctionDefinition","parameters":{"id":2963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2962,"mutability":"mutable","name":"memView","nodeType":"VariableDeclaration","scope":2972,"src":"6930:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":2961,"name":"bytes29","nodeType":"ElementaryTypeName","src":"6930:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"6929:17:10"},"returnParameters":{"id":2966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2965,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2972,"src":"6970:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2964,"name":"bool","nodeType":"ElementaryTypeName","src":"6970:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6969:6:10"},"scope":4090,"src":"6914:101:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2985,"nodeType":"Block","src":"7207:40:10","statements":[{"expression":{"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7224:16:10","subExpression":{"arguments":[{"id":2981,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2975,"src":"7232:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":2980,"name":"isNull","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"7225:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bool_$","typeString":"function (bytes29) pure returns (bool)"}},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7225:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2979,"id":2984,"nodeType":"Return","src":"7217:23:10"}]},"documentation":{"id":2973,"nodeType":"StructuredDocumentation","src":"7021:118:10","text":" @notice      Check if the view is not null.\n @return      bool - True if the view is not null"},"id":2986,"implemented":true,"kind":"function","modifiers":[],"name":"notNull","nodeType":"FunctionDefinition","parameters":{"id":2976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2975,"mutability":"mutable","name":"memView","nodeType":"VariableDeclaration","scope":2986,"src":"7161:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":2974,"name":"bytes29","nodeType":"ElementaryTypeName","src":"7161:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"7160:17:10"},"returnParameters":{"id":2979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2978,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2986,"src":"7201:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2977,"name":"bool","nodeType":"ElementaryTypeName","src":"7201:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7200:6:10"},"scope":4090,"src":"7144:103:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3010,"nodeType":"Block","src":"7733:247:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint40","typeString":"uint40"},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2995,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"7754:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":2994,"name":"typeOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"7747:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint40_$","typeString":"function (bytes29) pure returns (uint40)"}},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7747:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"307866666666666666666666","id":2997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7766:12:10","typeDescriptions":{"typeIdentifier":"t_rational_1099511627775_by_1","typeString":"int_const 1099511627775"},"value":"0xffffffffff"},"src":"7747:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3002,"nodeType":"IfStatement","src":"7743:52:10","trueBody":{"id":3001,"nodeType":"Block","src":"7780:15:10","statements":[{"expression":{"hexValue":"66616c7365","id":2999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7788:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2993,"id":3000,"nodeType":"Return","src":"7781:12:10"}]}},{"assignments":[3004],"declarations":[{"constant":false,"id":3004,"mutability":"mutable","name":"_end","nodeType":"VariableDeclaration","scope":3010,"src":"7804:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3003,"name":"uint256","nodeType":"ElementaryTypeName","src":"7804:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3008,"initialValue":{"arguments":[{"id":3006,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"7823:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3005,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"7819:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint256_$","typeString":"function (bytes29) pure returns (uint256)"}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7819:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7804:27:10"},{"AST":{"nodeType":"YulBlock","src":"7850:124:10","statements":[{"nodeType":"YulAssignment","src":"7928:36:10","value":{"arguments":[{"arguments":[{"name":"_end","nodeType":"YulIdentifier","src":"7945:4:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7957:4:10","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7951:5:10"},"nodeType":"YulFunctionCall","src":"7951:11:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7942:2:10"},"nodeType":"YulFunctionCall","src":"7942:21:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7935:6:10"},"nodeType":"YulFunctionCall","src":"7935:29:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7928:3:10"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3004,"isOffset":false,"isSlot":false,"src":"7945:4:10","valueSize":1},{"declaration":2992,"isOffset":false,"isSlot":false,"src":"7928:3:10","valueSize":1}],"id":3009,"nodeType":"InlineAssembly","src":"7841:133:10"}]},"documentation":{"id":2987,"nodeType":"StructuredDocumentation","src":"7253:408:10","text":" @notice          Check if the view is of a valid type and points to a valid location\n                  in memory.\n @dev             We perform this check by examining solidity's unallocated memory\n                  pointer and ensuring that the view's upper bound is less than that.\n @param memView   The view\n @return          ret - True if the view is valid"},"id":3011,"implemented":true,"kind":"function","modifiers":[],"name":"isValid","nodeType":"FunctionDefinition","parameters":{"id":2990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2989,"mutability":"mutable","name":"memView","nodeType":"VariableDeclaration","scope":3011,"src":"7683:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":2988,"name":"bytes29","nodeType":"ElementaryTypeName","src":"7683:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"7682:17:10"},"returnParameters":{"id":2993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2992,"mutability":"mutable","name":"ret","nodeType":"VariableDeclaration","scope":3011,"src":"7723:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2991,"name":"bool","nodeType":"ElementaryTypeName","src":"7723:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7722:10:10"},"scope":4090,"src":"7666:314:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3028,"nodeType":"Block","src":"8285:95:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":3021,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"8311:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3020,"name":"isValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"8303:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bool_$","typeString":"function (bytes29) pure returns (bool)"}},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8303:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"56616c696469747920617373657274696f6e206661696c6564","id":3023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8321:27:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b8ee0f3dda60458ebd28fab07294d43d44795f5dd2ba5ae15b160377e860128","typeString":"literal_string \"Validity assertion failed\""},"value":"Validity assertion failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b8ee0f3dda60458ebd28fab07294d43d44795f5dd2ba5ae15b160377e860128","typeString":"literal_string \"Validity assertion failed\""}],"id":3019,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8295:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8295:54:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3025,"nodeType":"ExpressionStatement","src":"8295:54:10"},{"expression":{"id":3026,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"8366:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"functionReturnParameters":3018,"id":3027,"nodeType":"Return","src":"8359:14:10"}]},"documentation":{"id":3012,"nodeType":"StructuredDocumentation","src":"7986:224:10","text":" @notice          Require that a typed memory view be valid.\n @dev             Returns the view for easy chaining.\n @param memView   The view\n @return          bytes29 - The validated view"},"id":3029,"implemented":true,"kind":"function","modifiers":[],"name":"assertValid","nodeType":"FunctionDefinition","parameters":{"id":3015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3014,"mutability":"mutable","name":"memView","nodeType":"VariableDeclaration","scope":3029,"src":"8236:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3013,"name":"bytes29","nodeType":"ElementaryTypeName","src":"8236:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"8235:17:10"},"returnParameters":{"id":3018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3017,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3029,"src":"8276:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3016,"name":"bytes29","nodeType":"ElementaryTypeName","src":"8276:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"8275:9:10"},"scope":4090,"src":"8215:165:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3045,"nodeType":"Block","src":"8725:52:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint40","typeString":"uint40"},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3040,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"8749:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3039,"name":"typeOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"8742:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint40_$","typeString":"function (bytes29) pure returns (uint40)"}},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8742:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3042,"name":"_expected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"8761:9:10","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"8742:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3038,"id":3044,"nodeType":"Return","src":"8735:35:10"}]},"documentation":{"id":3030,"nodeType":"StructuredDocumentation","src":"8386:254:10","text":" @notice          Return true if the memview is of the expected type. Otherwise false.\n @param memView   The view\n @param _expected The expected type\n @return          bool - True if the memview is of the expected type"},"id":3046,"implemented":true,"kind":"function","modifiers":[],"name":"isType","nodeType":"FunctionDefinition","parameters":{"id":3035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3032,"mutability":"mutable","name":"memView","nodeType":"VariableDeclaration","scope":3046,"src":"8661:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3031,"name":"bytes29","nodeType":"ElementaryTypeName","src":"8661:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":3034,"mutability":"mutable","name":"_expected","nodeType":"VariableDeclaration","scope":3046,"src":"8678:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":3033,"name":"uint40","nodeType":"ElementaryTypeName","src":"8678:6:10","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"8660:35:10"},"returnParameters":{"id":3038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3037,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3046,"src":"8719:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3036,"name":"bool","nodeType":"ElementaryTypeName","src":"8719:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8718:6:10"},"scope":4090,"src":"8645:132:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3108,"nodeType":"Block","src":"9162:491:10","statements":[{"condition":{"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9176:27:10","subExpression":{"arguments":[{"id":3057,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"9184:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},{"id":3058,"name":"_expected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"9193:9:10","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"},{"typeIdentifier":"t_uint40","typeString":"uint40"}],"id":3056,"name":"isType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"9177:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_uint40_$returns$_t_bool_$","typeString":"function (bytes29,uint40) pure returns (bool)"}},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9177:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3105,"nodeType":"IfStatement","src":"9172:451:10","trueBody":{"id":3104,"nodeType":"Block","src":"9205:418:10","statements":[{"assignments":[null,3062],"declarations":[null,{"constant":false,"id":3062,"mutability":"mutable","name":"g","nodeType":"VariableDeclaration","scope":3104,"src":"9222:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3061,"name":"uint256","nodeType":"ElementaryTypeName","src":"9222:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3071,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3067,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"9260:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3066,"name":"typeOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"9253:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint40_$","typeString":"function (bytes29) pure returns (uint40)"}},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9253:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint40","typeString":"uint40"}],"id":3065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9245:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3064,"name":"uint256","nodeType":"ElementaryTypeName","src":"9245:7:10","typeDescriptions":{}}},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9245:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3063,"name":"encodeHex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"9235:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256) pure returns (uint256,uint256)"}},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9235:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9219:51:10"},{"assignments":[null,3073],"declarations":[null,{"constant":false,"id":3073,"mutability":"mutable","name":"e","nodeType":"VariableDeclaration","scope":3104,"src":"9287:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3072,"name":"uint256","nodeType":"ElementaryTypeName","src":"9287:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3080,"initialValue":{"arguments":[{"arguments":[{"id":3077,"name":"_expected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"9318:9:10","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint40","typeString":"uint40"}],"id":3076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9310:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3075,"name":"uint256","nodeType":"ElementaryTypeName","src":"9310:7:10","typeDescriptions":{}}},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9310:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3074,"name":"encodeHex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"9300:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256) pure returns (uint256,uint256)"}},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9300:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9284:45:10"},{"assignments":[3082],"declarations":[{"constant":false,"id":3082,"mutability":"mutable","name":"err","nodeType":"VariableDeclaration","scope":3104,"src":"9343:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3081,"name":"string","nodeType":"ElementaryTypeName","src":"9343:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3099,"initialValue":{"arguments":[{"arguments":[{"hexValue":"5479706520617373657274696f6e206661696c65642e20476f74203078","id":3087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9425:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_2f02b416aa4f77f4220c3b6bf415b34f2494631d10ac20cd509c0fe0e4f80593","typeString":"literal_string \"Type assertion failed. Got 0x\""},"value":"Type assertion failed. Got 0x"},{"arguments":[{"id":3090,"name":"g","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"9485:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9478:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":3088,"name":"uint80","nodeType":"ElementaryTypeName","src":"9478:6:10","typeDescriptions":{}}},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9478:9:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},{"hexValue":"2e204578706563746564203078","id":3092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9509:15:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c0efbfebb65cadd8bb13aebc0ea085f1329fae1d7376b5e0aa452fe70b6d6b80","typeString":"literal_string \". Expected 0x\""},"value":". Expected 0x"},{"arguments":[{"id":3095,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"9553:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9546:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":3093,"name":"uint80","nodeType":"ElementaryTypeName","src":"9546:6:10","typeDescriptions":{}}},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9546:9:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_2f02b416aa4f77f4220c3b6bf415b34f2494631d10ac20cd509c0fe0e4f80593","typeString":"literal_string \"Type assertion failed. Got 0x\""},{"typeIdentifier":"t_uint80","typeString":"uint80"},{"typeIdentifier":"t_stringliteral_c0efbfebb65cadd8bb13aebc0ea085f1329fae1d7376b5e0aa452fe70b6d6b80","typeString":"literal_string \". Expected 0x\""},{"typeIdentifier":"t_uint80","typeString":"uint80"}],"expression":{"id":3085,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9387:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"9387:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9387:186:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9363:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3083,"name":"string","nodeType":"ElementaryTypeName","src":"9363:6:10","typeDescriptions":{}}},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9363:224:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"9343:244:10"},{"expression":{"arguments":[{"id":3101,"name":"err","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"9608:3:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3100,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9601:6:10","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9601:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3103,"nodeType":"ExpressionStatement","src":"9601:11:10"}]}},{"expression":{"id":3106,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"9639:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"functionReturnParameters":3055,"id":3107,"nodeType":"Return","src":"9632:14:10"}]},"documentation":{"id":3047,"nodeType":"StructuredDocumentation","src":"8783:287:10","text":" @notice          Require that a typed memory view has a specific type.\n @dev             Returns the view for easy chaining.\n @param memView   The view\n @param _expected The expected type\n @return          bytes29 - The view with validated type"},"id":3109,"implemented":true,"kind":"function","modifiers":[],"name":"assertType","nodeType":"FunctionDefinition","parameters":{"id":3052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3049,"mutability":"mutable","name":"memView","nodeType":"VariableDeclaration","scope":3109,"src":"9095:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3048,"name":"bytes29","nodeType":"ElementaryTypeName","src":"9095:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":3051,"mutability":"mutable","name":"_expected","nodeType":"VariableDeclaration","scope":3109,"src":"9112:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":3050,"name":"uint40","nodeType":"ElementaryTypeName","src":"9112:6:10","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"9094:35:10"},"returnParameters":{"id":3055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3054,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3109,"src":"9153:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3053,"name":"bytes29","nodeType":"ElementaryTypeName","src":"9153:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"9152:9:10"},"scope":4090,"src":"9075:578:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3128,"nodeType":"Block","src":"9978:397:10","statements":[{"assignments":[3120],"declarations":[{"constant":false,"id":3120,"mutability":"mutable","name":"_typeShift","nodeType":"VariableDeclaration","scope":3128,"src":"10022:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3119,"name":"uint256","nodeType":"ElementaryTypeName","src":"10022:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3122,"initialValue":{"id":3121,"name":"SHIFT_TO_TYPE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"10043:13:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"10022:34:10"},{"assignments":[3124],"declarations":[{"constant":false,"id":3124,"mutability":"mutable","name":"_typeBits","nodeType":"VariableDeclaration","scope":3128,"src":"10066:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3123,"name":"uint256","nodeType":"ElementaryTypeName","src":"10066:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3126,"initialValue":{"hexValue":"3430","id":3125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10086:2:10","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"VariableDeclarationStatement","src":"10066:22:10"},{"AST":{"nodeType":"YulBlock","src":"10107:262:10","statements":[{"nodeType":"YulAssignment","src":"10234:63:10","value":{"arguments":[{"name":"newView","nodeType":"YulIdentifier","src":"10248:7:10"},{"arguments":[{"name":"_typeBits","nodeType":"YulIdentifier","src":"10261:9:10"},{"arguments":[{"name":"_typeBits","nodeType":"YulIdentifier","src":"10276:9:10"},{"name":"memView","nodeType":"YulIdentifier","src":"10287:7:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10272:3:10"},"nodeType":"YulFunctionCall","src":"10272:23:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"10257:3:10"},"nodeType":"YulFunctionCall","src":"10257:39:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"10245:2:10"},"nodeType":"YulFunctionCall","src":"10245:52:10"},"variableNames":[{"name":"newView","nodeType":"YulIdentifier","src":"10234:7:10"}]},{"nodeType":"YulAssignment","src":"10310:49:10","value":{"arguments":[{"name":"newView","nodeType":"YulIdentifier","src":"10324:7:10"},{"arguments":[{"name":"_typeShift","nodeType":"YulIdentifier","src":"10337:10:10"},{"name":"_newType","nodeType":"YulIdentifier","src":"10349:8:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10333:3:10"},"nodeType":"YulFunctionCall","src":"10333:25:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"10321:2:10"},"nodeType":"YulFunctionCall","src":"10321:38:10"},"variableNames":[{"name":"newView","nodeType":"YulIdentifier","src":"10310:7:10"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3114,"isOffset":false,"isSlot":false,"src":"10349:8:10","valueSize":1},{"declaration":3124,"isOffset":false,"isSlot":false,"src":"10261:9:10","valueSize":1},{"declaration":3124,"isOffset":false,"isSlot":false,"src":"10276:9:10","valueSize":1},{"declaration":3120,"isOffset":false,"isSlot":false,"src":"10337:10:10","valueSize":1},{"declaration":3112,"isOffset":false,"isSlot":false,"src":"10287:7:10","valueSize":1},{"declaration":3117,"isOffset":false,"isSlot":false,"src":"10234:7:10","valueSize":1},{"declaration":3117,"isOffset":false,"isSlot":false,"src":"10248:7:10","valueSize":1},{"declaration":3117,"isOffset":false,"isSlot":false,"src":"10310:7:10","valueSize":1},{"declaration":3117,"isOffset":false,"isSlot":false,"src":"10324:7:10","valueSize":1}],"id":3127,"nodeType":"InlineAssembly","src":"10098:271:10"}]},"documentation":{"id":3110,"nodeType":"StructuredDocumentation","src":"9659:224:10","text":" @notice          Return an identical view with a different type.\n @param memView   The view\n @param _newType  The new type\n @return          newView - The new view with the specified type"},"id":3129,"implemented":true,"kind":"function","modifiers":[],"name":"castTo","nodeType":"FunctionDefinition","parameters":{"id":3115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3112,"mutability":"mutable","name":"memView","nodeType":"VariableDeclaration","scope":3129,"src":"9904:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3111,"name":"bytes29","nodeType":"ElementaryTypeName","src":"9904:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":3114,"mutability":"mutable","name":"_newType","nodeType":"VariableDeclaration","scope":3129,"src":"9921:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":3113,"name":"uint40","nodeType":"ElementaryTypeName","src":"9921:6:10","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"9903:34:10"},"returnParameters":{"id":3118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3117,"mutability":"mutable","name":"newView","nodeType":"VariableDeclaration","scope":3129,"src":"9961:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3116,"name":"bytes29","nodeType":"ElementaryTypeName","src":"9961:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"9960:17:10"},"scope":4090,"src":"9888:487:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3150,"nodeType":"Block","src":"11030:407:10","statements":[{"assignments":[3142],"declarations":[{"constant":false,"id":3142,"mutability":"mutable","name":"_uint96Bits","nodeType":"VariableDeclaration","scope":3150,"src":"11040:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3141,"name":"uint256","nodeType":"ElementaryTypeName","src":"11040:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3144,"initialValue":{"hexValue":"3936","id":3143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11062:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"nodeType":"VariableDeclarationStatement","src":"11040:24:10"},{"assignments":[3146],"declarations":[{"constant":false,"id":3146,"mutability":"mutable","name":"_emptyBits","nodeType":"VariableDeclaration","scope":3150,"src":"11074:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3145,"name":"uint256","nodeType":"ElementaryTypeName","src":"11074:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3148,"initialValue":{"hexValue":"3234","id":3147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11095:2:10","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"nodeType":"VariableDeclarationStatement","src":"11074:23:10"},{"AST":{"nodeType":"YulBlock","src":"11116:315:10","statements":[{"nodeType":"YulAssignment","src":"11202:47:10","value":{"arguments":[{"name":"_uint96Bits","nodeType":"YulIdentifier","src":"11217:11:10"},{"arguments":[{"name":"newView","nodeType":"YulIdentifier","src":"11233:7:10"},{"name":"_type","nodeType":"YulIdentifier","src":"11242:5:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"11230:2:10"},"nodeType":"YulFunctionCall","src":"11230:18:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11213:3:10"},"nodeType":"YulFunctionCall","src":"11213:36:10"},"variableNames":[{"name":"newView","nodeType":"YulIdentifier","src":"11202:7:10"}]},{"nodeType":"YulAssignment","src":"11277:46:10","value":{"arguments":[{"name":"_uint96Bits","nodeType":"YulIdentifier","src":"11292:11:10"},{"arguments":[{"name":"newView","nodeType":"YulIdentifier","src":"11308:7:10"},{"name":"_loc","nodeType":"YulIdentifier","src":"11317:4:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"11305:2:10"},"nodeType":"YulFunctionCall","src":"11305:17:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11288:3:10"},"nodeType":"YulFunctionCall","src":"11288:35:10"},"variableNames":[{"name":"newView","nodeType":"YulIdentifier","src":"11277:7:10"}]},{"nodeType":"YulAssignment","src":"11351:45:10","value":{"arguments":[{"name":"_emptyBits","nodeType":"YulIdentifier","src":"11366:10:10"},{"arguments":[{"name":"newView","nodeType":"YulIdentifier","src":"11381:7:10"},{"name":"_len","nodeType":"YulIdentifier","src":"11390:4:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"11378:2:10"},"nodeType":"YulFunctionCall","src":"11378:17:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11362:3:10"},"nodeType":"YulFunctionCall","src":"11362:34:10"},"variableNames":[{"name":"newView","nodeType":"YulIdentifier","src":"11351:7:10"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3146,"isOffset":false,"isSlot":false,"src":"11366:10:10","valueSize":1},{"declaration":3136,"isOffset":false,"isSlot":false,"src":"11390:4:10","valueSize":1},{"declaration":3134,"isOffset":false,"isSlot":false,"src":"11317:4:10","valueSize":1},{"declaration":3132,"isOffset":false,"isSlot":false,"src":"11242:5:10","valueSize":1},{"declaration":3142,"isOffset":false,"isSlot":false,"src":"11217:11:10","valueSize":1},{"declaration":3142,"isOffset":false,"isSlot":false,"src":"11292:11:10","valueSize":1},{"declaration":3139,"isOffset":false,"isSlot":false,"src":"11202:7:10","valueSize":1},{"declaration":3139,"isOffset":false,"isSlot":false,"src":"11233:7:10","valueSize":1},{"declaration":3139,"isOffset":false,"isSlot":false,"src":"11277:7:10","valueSize":1},{"declaration":3139,"isOffset":false,"isSlot":false,"src":"11308:7:10","valueSize":1},{"declaration":3139,"isOffset":false,"isSlot":false,"src":"11351:7:10","valueSize":1},{"declaration":3139,"isOffset":false,"isSlot":false,"src":"11381:7:10","valueSize":1}],"id":3149,"nodeType":"InlineAssembly","src":"11107:324:10"}]},"documentation":{"id":3130,"nodeType":"StructuredDocumentation","src":"10381:532:10","text":" @notice          Unsafe raw pointer construction. This should generally not be called\n                  directly. Prefer `ref` wherever possible.\n @dev             Unsafe raw pointer construction. This should generally not be called\n                  directly. Prefer `ref` wherever possible.\n @param _type     The type\n @param _loc      The memory address\n @param _len      The length\n @return          newView - The new view with the specified type, location and length"},"id":3151,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeBuildUnchecked","nodeType":"FunctionDefinition","parameters":{"id":3137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3132,"mutability":"mutable","name":"_type","nodeType":"VariableDeclaration","scope":3151,"src":"10948:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3131,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3134,"mutability":"mutable","name":"_loc","nodeType":"VariableDeclaration","scope":3151,"src":"10963:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3133,"name":"uint256","nodeType":"ElementaryTypeName","src":"10963:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3136,"mutability":"mutable","name":"_len","nodeType":"VariableDeclaration","scope":3151,"src":"10977:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3135,"name":"uint256","nodeType":"ElementaryTypeName","src":"10977:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10947:43:10"},"returnParameters":{"id":3140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3139,"mutability":"mutable","name":"newView","nodeType":"VariableDeclaration","scope":3151,"src":"11013:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3138,"name":"bytes29","nodeType":"ElementaryTypeName","src":"11013:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"11012:17:10"},"scope":4090,"src":"10918:519:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3186,"nodeType":"Block","src":"12074:345:10","statements":[{"assignments":[3164],"declarations":[{"constant":false,"id":3164,"mutability":"mutable","name":"_end","nodeType":"VariableDeclaration","scope":3186,"src":"12084:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3163,"name":"uint256","nodeType":"ElementaryTypeName","src":"12084:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3169,"initialValue":{"arguments":[{"id":3167,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"12108:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3165,"name":"_loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"12099:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":407,"src":"12099:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12099:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12084:29:10"},{"AST":{"nodeType":"YulBlock","src":"12132:162:10","statements":[{"body":{"nodeType":"YulBlock","src":"12243:41:10","statements":[{"nodeType":"YulAssignment","src":"12261:9:10","value":{"kind":"number","nodeType":"YulLiteral","src":"12269:1:10","type":"","value":"0"},"variableNames":[{"name":"_end","nodeType":"YulIdentifier","src":"12261:4:10"}]}]},"condition":{"arguments":[{"name":"_end","nodeType":"YulIdentifier","src":"12224:4:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12236:4:10","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12230:5:10"},"nodeType":"YulFunctionCall","src":"12230:11:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12221:2:10"},"nodeType":"YulFunctionCall","src":"12221:21:10"},"nodeType":"YulIf","src":"12218:2:10"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3164,"isOffset":false,"isSlot":false,"src":"12224:4:10","valueSize":1},{"declaration":3164,"isOffset":false,"isSlot":false,"src":"12261:4:10","valueSize":1}],"id":3170,"nodeType":"InlineAssembly","src":"12123:171:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3171,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"12307:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12315:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12307:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3177,"nodeType":"IfStatement","src":"12303:51:10","trueBody":{"id":3176,"nodeType":"Block","src":"12318:36:10","statements":[{"expression":{"id":3174,"name":"NULL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"12339:4:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"functionReturnParameters":3162,"id":3175,"nodeType":"Return","src":"12332:11:10"}]}},{"expression":{"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3178,"name":"newView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"12363:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3180,"name":"_type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"12394:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3181,"name":"_loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"12401:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3182,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"12407:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3179,"name":"unsafeBuildUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"12373:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes29_$","typeString":"function (uint256,uint256,uint256) pure returns (bytes29)"}},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12373:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"src":"12363:49:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":3185,"nodeType":"ExpressionStatement","src":"12363:49:10"}]},"documentation":{"id":3152,"nodeType":"StructuredDocumentation","src":"11443:528:10","text":" @notice          Instantiate a new memory view. This should generally not be called\n                  directly. Prefer `ref` wherever possible.\n @dev             Instantiate a new memory view. This should generally not be called\n                  directly. Prefer `ref` wherever possible.\n @param _type     The type\n @param _loc      The memory address\n @param _len      The length\n @return          newView - The new view with the specified type, location and length"},"id":3187,"implemented":true,"kind":"function","modifiers":[],"name":"build","nodeType":"FunctionDefinition","parameters":{"id":3159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3154,"mutability":"mutable","name":"_type","nodeType":"VariableDeclaration","scope":3187,"src":"11991:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3153,"name":"uint256","nodeType":"ElementaryTypeName","src":"11991:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3156,"mutability":"mutable","name":"_loc","nodeType":"VariableDeclaration","scope":3187,"src":"12006:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3155,"name":"uint256","nodeType":"ElementaryTypeName","src":"12006:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3158,"mutability":"mutable","name":"_len","nodeType":"VariableDeclaration","scope":3187,"src":"12020:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3157,"name":"uint256","nodeType":"ElementaryTypeName","src":"12020:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11990:43:10"},"returnParameters":{"id":3162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3161,"mutability":"mutable","name":"newView","nodeType":"VariableDeclaration","scope":3187,"src":"12057:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3160,"name":"bytes29","nodeType":"ElementaryTypeName","src":"12057:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"12056:17:10"},"scope":4090,"src":"11976:443:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3212,"nodeType":"Block","src":"12895:289:10","statements":[{"assignments":[3198],"declarations":[{"constant":false,"id":3198,"mutability":"mutable","name":"_len","nodeType":"VariableDeclaration","scope":3212,"src":"12905:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3197,"name":"uint256","nodeType":"ElementaryTypeName","src":"12905:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3201,"initialValue":{"expression":{"id":3199,"name":"arr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"12920:3:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"12920:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12905:25:10"},{"assignments":[3203],"declarations":[{"constant":false,"id":3203,"mutability":"mutable","name":"_loc","nodeType":"VariableDeclaration","scope":3212,"src":"12941:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3202,"name":"uint256","nodeType":"ElementaryTypeName","src":"12941:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3204,"nodeType":"VariableDeclarationStatement","src":"12941:12:10"},{"AST":{"nodeType":"YulBlock","src":"12972:162:10","statements":[{"nodeType":"YulAssignment","src":"13058:22:10","value":{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"13070:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"13075:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13066:3:10"},"nodeType":"YulFunctionCall","src":"13066:14:10"},"variableNames":[{"name":"_loc","nodeType":"YulIdentifier","src":"13058:4:10"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3203,"isOffset":false,"isSlot":false,"src":"13058:4:10","valueSize":1},{"declaration":3190,"isOffset":false,"isSlot":false,"src":"13070:3:10","valueSize":1}],"id":3205,"nodeType":"InlineAssembly","src":"12963:171:10"},{"expression":{"arguments":[{"id":3207,"name":"newType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"13157:7:10","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},{"id":3208,"name":"_loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"13166:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3209,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"13172:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint40","typeString":"uint40"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3206,"name":"build","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"13151:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes29_$","typeString":"function (uint256,uint256,uint256) pure returns (bytes29)"}},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13151:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"functionReturnParameters":3196,"id":3211,"nodeType":"Return","src":"13144:33:10"}]},"documentation":{"id":3188,"nodeType":"StructuredDocumentation","src":"12425:386:10","text":" @notice          Instantiate a memory view from a byte array.\n @dev             Note that due to Solidity memory representation, it is not possible to\n                  implement a deref, as the `bytes` type stores its len in memory.\n @param arr       The byte array\n @param newType   The type\n @return          bytes29 - The memory view"},"id":3213,"implemented":true,"kind":"function","modifiers":[],"name":"ref","nodeType":"FunctionDefinition","parameters":{"id":3193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3190,"mutability":"mutable","name":"arr","nodeType":"VariableDeclaration","scope":3213,"src":"12829:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3189,"name":"bytes","nodeType":"ElementaryTypeName","src":"12829:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3192,"mutability":"mutable","name":"newType","nodeType":"VariableDeclaration","scope":3213,"src":"12847:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":3191,"name":"uint40","nodeType":"ElementaryTypeName","src":"12847:6:10","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"12828:34:10"},"returnParameters":{"id":3196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3195,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3213,"src":"12886:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3194,"name":"bytes29","nodeType":"ElementaryTypeName","src":"12886:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"12885:9:10"},"scope":4090,"src":"12816:368:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3226,"nodeType":"Block","src":"13446:218:10","statements":[{"assignments":[3222],"declarations":[{"constant":false,"id":3222,"mutability":"mutable","name":"_shift","nodeType":"VariableDeclaration","scope":3226,"src":"13456:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3221,"name":"uint256","nodeType":"ElementaryTypeName","src":"13456:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3224,"initialValue":{"id":3223,"name":"SHIFT_TO_TYPE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"13473:13:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13456:30:10"},{"AST":{"nodeType":"YulBlock","src":"13505:153:10","statements":[{"nodeType":"YulAssignment","src":"13591:29:10","value":{"arguments":[{"name":"_shift","nodeType":"YulIdentifier","src":"13604:6:10"},{"name":"memView","nodeType":"YulIdentifier","src":"13612:7:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13600:3:10"},"nodeType":"YulFunctionCall","src":"13600:20:10"},"variableNames":[{"name":"_type","nodeType":"YulIdentifier","src":"13591:5:10"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3222,"isOffset":false,"isSlot":false,"src":"13604:6:10","valueSize":1},{"declaration":3219,"isOffset":false,"isSlot":false,"src":"13591:5:10","valueSize":1},{"declaration":3216,"isOffset":false,"isSlot":false,"src":"13612:7:10","valueSize":1}],"id":3225,"nodeType":"InlineAssembly","src":"13496:162:10"}]},"documentation":{"id":3214,"nodeType":"StructuredDocumentation","src":"13190:181:10","text":" @notice          Return the associated type information.\n @param memView   The memory view\n @return          _type - The type associated with the view"},"id":3227,"implemented":true,"kind":"function","modifiers":[],"name":"typeOf","nodeType":"FunctionDefinition","parameters":{"id":3217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3216,"mutability":"mutable","name":"memView","nodeType":"VariableDeclaration","scope":3227,"src":"13392:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3215,"name":"bytes29","nodeType":"ElementaryTypeName","src":"13392:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"13391:17:10"},"returnParameters":{"id":3220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3219,"mutability":"mutable","name":"_type","nodeType":"VariableDeclaration","scope":3227,"src":"13432:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":3218,"name":"uint40","nodeType":"ElementaryTypeName","src":"13432:6:10","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"13431:14:10"},"scope":4090,"src":"13376:288:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3246,"nodeType":"Block","src":"14004:60:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3237,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"14022:4:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3238,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"14029:5:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"src":"14022:12:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"id":3240,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14021:14:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3241,"name":"SHIFT_TO_TYPE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"14039:13:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14021:31:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14056:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14021:36:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3236,"id":3245,"nodeType":"Return","src":"14014:43:10"}]},"documentation":{"id":3228,"nodeType":"StructuredDocumentation","src":"13670:253:10","text":" @notice          Optimized type comparison. Checks that the 5-byte type flag is equal.\n @param left      The first view\n @param right     The second view\n @return          bool - True if the 5-byte type flag is equal"},"id":3247,"implemented":true,"kind":"function","modifiers":[],"name":"sameType","nodeType":"FunctionDefinition","parameters":{"id":3233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3230,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":3247,"src":"13946:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3229,"name":"bytes29","nodeType":"ElementaryTypeName","src":"13946:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":3232,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":3247,"src":"13960:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3231,"name":"bytes29","nodeType":"ElementaryTypeName","src":"13960:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"13945:29:10"},"returnParameters":{"id":3236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3235,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3247,"src":"13998:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3234,"name":"bool","nodeType":"ElementaryTypeName","src":"13998:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13997:6:10"},"scope":4090,"src":"13928:136:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3264,"nodeType":"Block","src":"14310:268:10","statements":[{"assignments":[3256],"declarations":[{"constant":false,"id":3256,"mutability":"mutable","name":"_mask","nodeType":"VariableDeclaration","scope":3264,"src":"14320:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3255,"name":"uint256","nodeType":"ElementaryTypeName","src":"14320:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3258,"initialValue":{"id":3257,"name":"LOW_12_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"14336:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14320:27:10"},{"assignments":[3260],"declarations":[{"constant":false,"id":3260,"mutability":"mutable","name":"_shift","nodeType":"VariableDeclaration","scope":3264,"src":"14388:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3259,"name":"uint256","nodeType":"ElementaryTypeName","src":"14388:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3262,"initialValue":{"id":3261,"name":"SHIFT_TO_LOC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"14405:12:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"14388:29:10"},{"AST":{"nodeType":"YulBlock","src":"14436:136:10","statements":[{"nodeType":"YulAssignment","src":"14522:40:10","value":{"arguments":[{"arguments":[{"name":"_shift","nodeType":"YulIdentifier","src":"14538:6:10"},{"name":"memView","nodeType":"YulIdentifier","src":"14546:7:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"14534:3:10"},"nodeType":"YulFunctionCall","src":"14534:20:10"},{"name":"_mask","nodeType":"YulIdentifier","src":"14556:5:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14530:3:10"},"nodeType":"YulFunctionCall","src":"14530:32:10"},"variableNames":[{"name":"_loc","nodeType":"YulIdentifier","src":"14522:4:10"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3253,"isOffset":false,"isSlot":false,"src":"14522:4:10","valueSize":1},{"declaration":3256,"isOffset":false,"isSlot":false,"src":"14556:5:10","valueSize":1},{"declaration":3260,"isOffset":false,"isSlot":false,"src":"14538:6:10","valueSize":1},{"declaration":3250,"isOffset":false,"isSlot":false,"src":"14546:7:10","valueSize":1}],"id":3263,"nodeType":"InlineAssembly","src":"14427:145:10"}]},"documentation":{"id":3248,"nodeType":"StructuredDocumentation","src":"14070:169:10","text":" @notice          Return the memory address of the underlying bytes.\n @param memView   The view\n @return          _loc - The memory address"},"id":3265,"implemented":true,"kind":"function","modifiers":[],"name":"loc","nodeType":"FunctionDefinition","parameters":{"id":3251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3250,"mutability":"mutable","name":"memView","nodeType":"VariableDeclaration","scope":3265,"src":"14257:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3249,"name":"bytes29","nodeType":"ElementaryTypeName","src":"14257:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"14256:17:10"},"returnParameters":{"id":3254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3253,"mutability":"mutable","name":"_loc","nodeType":"VariableDeclaration","scope":3265,"src":"14297:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3252,"name":"uint96","nodeType":"ElementaryTypeName","src":"14297:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"14296:13:10"},"scope":4090,"src":"14244:334:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3285,"nodeType":"Block","src":"14848:58:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"hexValue":"3331","id":3280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14891:2:10","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"}],"expression":{"arguments":[{"arguments":[{"id":3276,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"14877:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3275,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"14873:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14873:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":3274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14865:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3273,"name":"uint256","nodeType":"ElementaryTypeName","src":"14865:7:10","typeDescriptions":{}}},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14865:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":407,"src":"14865:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14865:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3332","id":3282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14897:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14865:34:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3272,"id":3284,"nodeType":"Return","src":"14858:41:10"}]},"documentation":{"id":3266,"nodeType":"StructuredDocumentation","src":"14584:195:10","text":" @notice          The number of memory words this memory view occupies, rounded up.\n @param memView   The view\n @return          uint256 - The number of memory words"},"id":3286,"implemented":true,"kind":"function","modifiers":[],"name":"words","nodeType":"FunctionDefinition","parameters":{"id":3269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3268,"mutability":"mutable","name":"memView","nodeType":"VariableDeclaration","scope":3286,"src":"14799:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3267,"name":"bytes29","nodeType":"ElementaryTypeName","src":"14799:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"14798:17:10"},"returnParameters":{"id":3272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3271,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3286,"src":"14839:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3270,"name":"uint256","nodeType":"ElementaryTypeName","src":"14839:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14838:9:10"},"scope":4090,"src":"14784:122:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3300,"nodeType":"Block","src":"15193:43:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3295,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"15216:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3294,"name":"words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"15210:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint256_$","typeString":"function (bytes29) pure returns (uint256)"}},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15210:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":3297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15227:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"15210:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3293,"id":3299,"nodeType":"Return","src":"15203:26:10"}]},"documentation":{"id":3287,"nodeType":"StructuredDocumentation","src":"14912:208:10","text":" @notice          The in-memory footprint of a fresh copy of the view.\n @param memView   The view\n @return          uint256 - The in-memory footprint of a fresh copy of the view."},"id":3301,"implemented":true,"kind":"function","modifiers":[],"name":"footprint","nodeType":"FunctionDefinition","parameters":{"id":3290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3289,"mutability":"mutable","name":"memView","nodeType":"VariableDeclaration","scope":3301,"src":"15144:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3288,"name":"bytes29","nodeType":"ElementaryTypeName","src":"15144:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"15143:17:10"},"returnParameters":{"id":3293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3292,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3301,"src":"15184:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3291,"name":"uint256","nodeType":"ElementaryTypeName","src":"15184:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15183:9:10"},"scope":4090,"src":"15125:111:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3318,"nodeType":"Block","src":"15468:266:10","statements":[{"assignments":[3310],"declarations":[{"constant":false,"id":3310,"mutability":"mutable","name":"_mask","nodeType":"VariableDeclaration","scope":3318,"src":"15478:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3309,"name":"uint256","nodeType":"ElementaryTypeName","src":"15478:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3312,"initialValue":{"id":3311,"name":"LOW_12_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"15494:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15478:27:10"},{"assignments":[3314],"declarations":[{"constant":false,"id":3314,"mutability":"mutable","name":"_emptyBits","nodeType":"VariableDeclaration","scope":3318,"src":"15546:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3313,"name":"uint256","nodeType":"ElementaryTypeName","src":"15546:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3316,"initialValue":{"hexValue":"3234","id":3315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15567:2:10","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"nodeType":"VariableDeclarationStatement","src":"15546:23:10"},{"AST":{"nodeType":"YulBlock","src":"15588:140:10","statements":[{"nodeType":"YulAssignment","src":"15674:44:10","value":{"arguments":[{"arguments":[{"name":"_emptyBits","nodeType":"YulIdentifier","src":"15690:10:10"},{"name":"memView","nodeType":"YulIdentifier","src":"15702:7:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"15686:3:10"},"nodeType":"YulFunctionCall","src":"15686:24:10"},{"name":"_mask","nodeType":"YulIdentifier","src":"15712:5:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15682:3:10"},"nodeType":"YulFunctionCall","src":"15682:36:10"},"variableNames":[{"name":"_len","nodeType":"YulIdentifier","src":"15674:4:10"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3314,"isOffset":false,"isSlot":false,"src":"15690:10:10","valueSize":1},{"declaration":3307,"isOffset":false,"isSlot":false,"src":"15674:4:10","valueSize":1},{"declaration":3310,"isOffset":false,"isSlot":false,"src":"15712:5:10","valueSize":1},{"declaration":3304,"isOffset":false,"isSlot":false,"src":"15702:7:10","valueSize":1}],"id":3317,"nodeType":"InlineAssembly","src":"15579:149:10"}]},"documentation":{"id":3302,"nodeType":"StructuredDocumentation","src":"15242:155:10","text":" @notice          The number of bytes of the view.\n @param memView   The view\n @return          _len - The length of the view"},"id":3319,"implemented":true,"kind":"function","modifiers":[],"name":"len","nodeType":"FunctionDefinition","parameters":{"id":3305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3304,"mutability":"mutable","name":"memView","nodeType":"VariableDeclaration","scope":3319,"src":"15415:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3303,"name":"bytes29","nodeType":"ElementaryTypeName","src":"15415:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"15414:17:10"},"returnParameters":{"id":3308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3307,"mutability":"mutable","name":"_len","nodeType":"VariableDeclaration","scope":3319,"src":"15455:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3306,"name":"uint96","nodeType":"ElementaryTypeName","src":"15455:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"15454:13:10"},"scope":4090,"src":"15402:332:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3335,"nodeType":"Block","src":"15970:51:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3328,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"15991:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3327,"name":"loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"15987:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15987:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"id":3331,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"16006:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3330,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"16002:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16002:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"15987:27:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":3326,"id":3334,"nodeType":"Return","src":"15980:34:10"}]},"documentation":{"id":3320,"nodeType":"StructuredDocumentation","src":"15740:163:10","text":" @notice          Returns the endpoint of `memView`.\n @param memView   The view\n @return          uint256 - The endpoint of `memView`"},"id":3336,"implemented":true,"kind":"function","modifiers":[],"name":"end","nodeType":"FunctionDefinition","parameters":{"id":3323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3322,"mutability":"mutable","name":"memView","nodeType":"VariableDeclaration","scope":3336,"src":"15921:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3321,"name":"bytes29","nodeType":"ElementaryTypeName","src":"15921:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"15920:17:10"},"returnParameters":{"id":3326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3325,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3336,"src":"15961:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3324,"name":"uint256","nodeType":"ElementaryTypeName","src":"15961:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15960:9:10"},"scope":4090,"src":"15908:113:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3384,"nodeType":"Block","src":"16411:260:10","statements":[{"assignments":[3351],"declarations":[{"constant":false,"id":3351,"mutability":"mutable","name":"_loc","nodeType":"VariableDeclaration","scope":3384,"src":"16421:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3350,"name":"uint256","nodeType":"ElementaryTypeName","src":"16421:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3355,"initialValue":{"arguments":[{"id":3353,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"16440:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3352,"name":"loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"16436:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16436:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"16421:27:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3361,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"16530:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3358,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"16518:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3356,"name":"_loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"16509:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":407,"src":"16509:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16509:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":407,"src":"16509:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16509:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"id":3364,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"16542:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3363,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"16538:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint256_$","typeString":"function (bytes29) pure returns (uint256)"}},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16538:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16509:41:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3370,"nodeType":"IfStatement","src":"16505:83:10","trueBody":{"id":3369,"nodeType":"Block","src":"16552:36:10","statements":[{"expression":{"id":3367,"name":"NULL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"16573:4:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"functionReturnParameters":3349,"id":3368,"nodeType":"Return","src":"16566:11:10"}]}},{"expression":{"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3371,"name":"_loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"16598:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3374,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"16614:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3372,"name":"_loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"16605:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":407,"src":"16605:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16605:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16598:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3377,"nodeType":"ExpressionStatement","src":"16598:23:10"},{"expression":{"arguments":[{"id":3379,"name":"newType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"16644:7:10","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},{"id":3380,"name":"_loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"16653:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3381,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"16659:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint40","typeString":"uint40"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3378,"name":"build","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"16638:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes29_$","typeString":"function (uint256,uint256,uint256) pure returns (bytes29)"}},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16638:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"functionReturnParameters":3349,"id":3383,"nodeType":"Return","src":"16631:33:10"}]},"documentation":{"id":3337,"nodeType":"StructuredDocumentation","src":"16027:269:10","text":" @notice          Safe slicing without memory modification.\n @param memView   The view\n @param _index    The start index\n @param _len      The length\n @param newType   The new type\n @return          bytes29 - The new view"},"id":3385,"implemented":true,"kind":"function","modifiers":[],"name":"slice","nodeType":"FunctionDefinition","parameters":{"id":3346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3339,"mutability":"mutable","name":"memView","nodeType":"VariableDeclaration","scope":3385,"src":"16316:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3338,"name":"bytes29","nodeType":"ElementaryTypeName","src":"16316:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":3341,"mutability":"mutable","name":"_index","nodeType":"VariableDeclaration","scope":3385,"src":"16333:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3340,"name":"uint256","nodeType":"ElementaryTypeName","src":"16333:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3343,"mutability":"mutable","name":"_len","nodeType":"VariableDeclaration","scope":3385,"src":"16349:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3342,"name":"uint256","nodeType":"ElementaryTypeName","src":"16349:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3345,"mutability":"mutable","name":"newType","nodeType":"VariableDeclaration","scope":3385,"src":"16363:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":3344,"name":"uint40","nodeType":"ElementaryTypeName","src":"16363:6:10","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"16315:63:10"},"returnParameters":{"id":3349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3348,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3385,"src":"16402:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3347,"name":"bytes29","nodeType":"ElementaryTypeName","src":"16402:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"16401:9:10"},"scope":4090,"src":"16301:370:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3404,"nodeType":"Block","src":"17034:56:10","statements":[{"expression":{"arguments":[{"id":3398,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"17057:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},{"hexValue":"30","id":3399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17066:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3400,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3390,"src":"17069:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3401,"name":"newType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"17075:7:10","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint40","typeString":"uint40"}],"id":3397,"name":"slice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"17051:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_uint256_$_t_uint256_$_t_uint40_$returns$_t_bytes29_$","typeString":"function (bytes29,uint256,uint256,uint40) pure returns (bytes29)"}},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17051:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"functionReturnParameters":3396,"id":3403,"nodeType":"Return","src":"17044:39:10"}]},"documentation":{"id":3386,"nodeType":"StructuredDocumentation","src":"16677:257:10","text":" @notice          Shortcut to `slice`. Gets a view representing the first `_len` bytes.\n @param memView   The view\n @param _len      The length\n @param newType   The new type\n @return          bytes29 - The new view"},"id":3405,"implemented":true,"kind":"function","modifiers":[],"name":"prefix","nodeType":"FunctionDefinition","parameters":{"id":3393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3388,"mutability":"mutable","name":"memView","nodeType":"VariableDeclaration","scope":3405,"src":"16955:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3387,"name":"bytes29","nodeType":"ElementaryTypeName","src":"16955:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":3390,"mutability":"mutable","name":"_len","nodeType":"VariableDeclaration","scope":3405,"src":"16972:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3389,"name":"uint256","nodeType":"ElementaryTypeName","src":"16972:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3392,"mutability":"mutable","name":"newType","nodeType":"VariableDeclaration","scope":3405,"src":"16986:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":3391,"name":"uint40","nodeType":"ElementaryTypeName","src":"16986:6:10","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"16954:47:10"},"returnParameters":{"id":3396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3395,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3405,"src":"17025:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3394,"name":"bytes29","nodeType":"ElementaryTypeName","src":"17025:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"17024:9:10"},"scope":4090,"src":"16939:151:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3432,"nodeType":"Block","src":"17452:86:10","statements":[{"expression":{"arguments":[{"id":3418,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"17475:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},{"arguments":[{"id":3426,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"17510:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":3422,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"17496:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3421,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"17492:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17492:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":3420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17484:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3419,"name":"uint256","nodeType":"ElementaryTypeName","src":"17484:7:10","typeDescriptions":{}}},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17484:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":429,"src":"17484:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17484:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3428,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"17517:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3429,"name":"newType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"17523:7:10","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint40","typeString":"uint40"}],"id":3417,"name":"slice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"17469:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_uint256_$_t_uint256_$_t_uint40_$returns$_t_bytes29_$","typeString":"function (bytes29,uint256,uint256,uint40) pure returns (bytes29)"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17469:62:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"functionReturnParameters":3416,"id":3431,"nodeType":"Return","src":"17462:69:10"}]},"documentation":{"id":3406,"nodeType":"StructuredDocumentation","src":"17096:255:10","text":" @notice          Shortcut to `slice`. Gets a view representing the last `_len` byte.\n @param memView   The view\n @param _len      The length\n @param newType   The new type\n @return          bytes29 - The new view"},"id":3433,"implemented":true,"kind":"function","modifiers":[],"name":"postfix","nodeType":"FunctionDefinition","parameters":{"id":3413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3408,"mutability":"mutable","name":"memView","nodeType":"VariableDeclaration","scope":3433,"src":"17373:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3407,"name":"bytes29","nodeType":"ElementaryTypeName","src":"17373:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":3410,"mutability":"mutable","name":"_len","nodeType":"VariableDeclaration","scope":3433,"src":"17390:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3409,"name":"uint256","nodeType":"ElementaryTypeName","src":"17390:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3412,"mutability":"mutable","name":"newType","nodeType":"VariableDeclaration","scope":3433,"src":"17404:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":3411,"name":"uint40","nodeType":"ElementaryTypeName","src":"17404:6:10","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"17372:47:10"},"returnParameters":{"id":3416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3415,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3433,"src":"17443:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3414,"name":"bytes29","nodeType":"ElementaryTypeName","src":"17443:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"17442:9:10"},"scope":4090,"src":"17356:182:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3501,"nodeType":"Block","src":"18012:576:10","statements":[{"assignments":[null,3448],"declarations":[null,{"constant":false,"id":3448,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":3501,"src":"18025:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3447,"name":"uint256","nodeType":"ElementaryTypeName","src":"18025:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3452,"initialValue":{"arguments":[{"id":3450,"name":"_loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"18048:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3449,"name":"encodeHex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"18038:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256) pure returns (uint256,uint256)"}},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18038:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"18022:31:10"},{"assignments":[null,3454],"declarations":[null,{"constant":false,"id":3454,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":3501,"src":"18066:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3453,"name":"uint256","nodeType":"ElementaryTypeName","src":"18066:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3458,"initialValue":{"arguments":[{"id":3456,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"18089:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3455,"name":"encodeHex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"18079:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256) pure returns (uint256,uint256)"}},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18079:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"18063:31:10"},{"assignments":[null,3460],"declarations":[null,{"constant":false,"id":3460,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":3501,"src":"18107:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3459,"name":"uint256","nodeType":"ElementaryTypeName","src":"18107:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3464,"initialValue":{"arguments":[{"id":3462,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"18130:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3461,"name":"encodeHex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"18120:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256) pure returns (uint256,uint256)"}},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18120:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"18104:33:10"},{"assignments":[null,3466],"declarations":[null,{"constant":false,"id":3466,"mutability":"mutable","name":"d","nodeType":"VariableDeclaration","scope":3501,"src":"18150:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3465,"name":"uint256","nodeType":"ElementaryTypeName","src":"18150:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3470,"initialValue":{"arguments":[{"id":3468,"name":"_slice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"18173:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3467,"name":"encodeHex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"18163:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256) pure returns (uint256,uint256)"}},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18163:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"18147:33:10"},{"expression":{"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3471,"name":"err","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"18190:3:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"hexValue":"54797065644d656d566965772f696e646578202d204f76657272616e2074686520766965772e20536c696365206973206174203078","id":3476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18250:55:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb6c6ce939dcb005b895abe7a9570250d9c1c31a5440a6a6e28e0acc2d1c6af1","typeString":"literal_string \"TypedMemView/index - Overran the view. Slice is at 0x\""},"value":"TypedMemView/index - Overran the view. Slice is at 0x"},{"arguments":[{"id":3479,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"18330:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18323:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3477,"name":"uint48","nodeType":"ElementaryTypeName","src":"18323:6:10","typeDescriptions":{}}},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18323:9:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"hexValue":"2077697468206c656e677468203078","id":3481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18350:17:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e6849d566dba71a1ac686a5bd3af1bed003e25465c91471808028cdad9d144b","typeString":"literal_string \" with length 0x\""},"value":" with length 0x"},{"arguments":[{"id":3484,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"18392:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18385:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3482,"name":"uint48","nodeType":"ElementaryTypeName","src":"18385:6:10","typeDescriptions":{}}},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18385:9:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"hexValue":"2e20417474656d7074656420746f20696e646578206174206f6666736574203078","id":3486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18412:35:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_76d133faf43042eef7167f01d32e0891632a5651573db9fc8b6aa42fdbcaf509","typeString":"literal_string \". Attempted to index at offset 0x\""},"value":". Attempted to index at offset 0x"},{"arguments":[{"id":3489,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"18472:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18465:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3487,"name":"uint48","nodeType":"ElementaryTypeName","src":"18465:6:10","typeDescriptions":{}}},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18465:9:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"hexValue":"2077697468206c656e677468203078","id":3491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18492:17:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e6849d566dba71a1ac686a5bd3af1bed003e25465c91471808028cdad9d144b","typeString":"literal_string \" with length 0x\""},"value":" with length 0x"},{"arguments":[{"id":3494,"name":"d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"18534:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18527:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3492,"name":"uint48","nodeType":"ElementaryTypeName","src":"18527:6:10","typeDescriptions":{}}},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18527:9:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"hexValue":"2e","id":3496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18554:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf","typeString":"literal_string \".\""},"value":"."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_fb6c6ce939dcb005b895abe7a9570250d9c1c31a5440a6a6e28e0acc2d1c6af1","typeString":"literal_string \"TypedMemView/index - Overran the view. Slice is at 0x\""},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_stringliteral_3e6849d566dba71a1ac686a5bd3af1bed003e25465c91471808028cdad9d144b","typeString":"literal_string \" with length 0x\""},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_stringliteral_76d133faf43042eef7167f01d32e0891632a5651573db9fc8b6aa42fdbcaf509","typeString":"literal_string \". Attempted to index at offset 0x\""},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_stringliteral_3e6849d566dba71a1ac686a5bd3af1bed003e25465c91471808028cdad9d144b","typeString":"literal_string \" with length 0x\""},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf","typeString":"literal_string \".\""}],"expression":{"id":3474,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"18216:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"18216:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18216:355:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18196:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3472,"name":"string","nodeType":"ElementaryTypeName","src":"18196:6:10","typeDescriptions":{}}},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18196:385:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"18190:391:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3500,"nodeType":"ExpressionStatement","src":"18190:391:10"}]},"documentation":{"id":3434,"nodeType":"StructuredDocumentation","src":"17544:298:10","text":" @notice          Construct an error message for an indexing overrun.\n @param _loc      The memory address\n @param _len      The length\n @param _index    The index\n @param _slice    The slice where the overrun occurred\n @return          err - The err"},"id":3502,"implemented":true,"kind":"function","modifiers":[],"name":"indexErrOverrun","nodeType":"FunctionDefinition","parameters":{"id":3443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3436,"mutability":"mutable","name":"_loc","nodeType":"VariableDeclaration","scope":3502,"src":"17881:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3435,"name":"uint256","nodeType":"ElementaryTypeName","src":"17881:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3438,"mutability":"mutable","name":"_len","nodeType":"VariableDeclaration","scope":3502,"src":"17903:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3437,"name":"uint256","nodeType":"ElementaryTypeName","src":"17903:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3440,"mutability":"mutable","name":"_index","nodeType":"VariableDeclaration","scope":3502,"src":"17925:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3439,"name":"uint256","nodeType":"ElementaryTypeName","src":"17925:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3442,"mutability":"mutable","name":"_slice","nodeType":"VariableDeclaration","scope":3502,"src":"17949:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3441,"name":"uint256","nodeType":"ElementaryTypeName","src":"17949:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17871:98:10"},"returnParameters":{"id":3446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3445,"mutability":"mutable","name":"err","nodeType":"VariableDeclaration","scope":3502,"src":"17993:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3444,"name":"string","nodeType":"ElementaryTypeName","src":"17993:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17992:19:10"},"scope":4090,"src":"17847:741:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3576,"nodeType":"Block","src":"19191:576:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3514,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"19205:6:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19215:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19205:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3523,"nodeType":"IfStatement","src":"19201:37:10","trueBody":{"id":3522,"nodeType":"Block","src":"19218:20:10","statements":[{"expression":{"arguments":[{"hexValue":"30","id":3519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19234:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19226:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3517,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19226:7:10","typeDescriptions":{}}},"id":3520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19226:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3513,"id":3521,"nodeType":"Return","src":"19219:17:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3526,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"19262:6:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":3524,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"19251:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":407,"src":"19251:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19251:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"id":3529,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"19276:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3528,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"19272:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19272:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"19251:33:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3549,"nodeType":"IfStatement","src":"19247:140:10","trueBody":{"id":3548,"nodeType":"Block","src":"19286:101:10","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3535,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"19327:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3534,"name":"loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"19323:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19323:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"arguments":[{"id":3538,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"19341:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3537,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"19337:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19337:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":3540,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"19351:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3543,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"19367:6:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19359:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3541,"name":"uint256","nodeType":"ElementaryTypeName","src":"19359:7:10","typeDescriptions":{}}},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19359:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3533,"name":"indexErrOverrun","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"19307:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256,uint256,uint256) pure returns (string memory)"}},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19307:68:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3532,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"19300:6:10","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19300:76:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3547,"nodeType":"ExpressionStatement","src":"19300:76:10"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3551,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"19404:6:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3332","id":3552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19414:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19404:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54797065644d656d566965772f696e646578202d20417474656d7074656420746f20696e646578206d6f7265207468616e203332206279746573","id":3554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19418:60:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_b2c061d25dd4dec479f0720f15754fff58a1a4debc7353bd1d3f4b7b23876297","typeString":"literal_string \"TypedMemView/index - Attempted to index more than 32 bytes\""},"value":"TypedMemView/index - Attempted to index more than 32 bytes"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b2c061d25dd4dec479f0720f15754fff58a1a4debc7353bd1d3f4b7b23876297","typeString":"literal_string \"TypedMemView/index - Attempted to index more than 32 bytes\""}],"id":3550,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19396:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19396:83:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3556,"nodeType":"ExpressionStatement","src":"19396:83:10"},{"assignments":[3558],"declarations":[{"constant":false,"id":3558,"mutability":"mutable","name":"bitLength","nodeType":"VariableDeclaration","scope":3576,"src":"19490:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3557,"name":"uint8","nodeType":"ElementaryTypeName","src":"19490:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3562,"initialValue":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3559,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"19508:6:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":3560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19517:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19508:10:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"19490:28:10"},{"assignments":[3564],"declarations":[{"constant":false,"id":3564,"mutability":"mutable","name":"_loc","nodeType":"VariableDeclaration","scope":3576,"src":"19528:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3563,"name":"uint256","nodeType":"ElementaryTypeName","src":"19528:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3568,"initialValue":{"arguments":[{"id":3566,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"19547:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3565,"name":"loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"19543:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19543:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"19528:27:10"},{"assignments":[3570],"declarations":[{"constant":false,"id":3570,"mutability":"mutable","name":"_mask","nodeType":"VariableDeclaration","scope":3576,"src":"19565:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3569,"name":"uint256","nodeType":"ElementaryTypeName","src":"19565:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3574,"initialValue":{"arguments":[{"id":3572,"name":"bitLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"19590:9:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3571,"name":"leftMask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"19581:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint8) pure returns (uint256)"}},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19581:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19565:35:10"},{"AST":{"nodeType":"YulBlock","src":"19619:142:10","statements":[{"nodeType":"YulAssignment","src":"19705:46:10","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_loc","nodeType":"YulIdentifier","src":"19729:4:10"},{"name":"_index","nodeType":"YulIdentifier","src":"19735:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19725:3:10"},"nodeType":"YulFunctionCall","src":"19725:17:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19719:5:10"},"nodeType":"YulFunctionCall","src":"19719:24:10"},{"name":"_mask","nodeType":"YulIdentifier","src":"19745:5:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19715:3:10"},"nodeType":"YulFunctionCall","src":"19715:36:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"19705:6:10"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3507,"isOffset":false,"isSlot":false,"src":"19735:6:10","valueSize":1},{"declaration":3564,"isOffset":false,"isSlot":false,"src":"19729:4:10","valueSize":1},{"declaration":3570,"isOffset":false,"isSlot":false,"src":"19745:5:10","valueSize":1},{"declaration":3512,"isOffset":false,"isSlot":false,"src":"19705:6:10","valueSize":1}],"id":3575,"nodeType":"InlineAssembly","src":"19610:151:10"}]},"documentation":{"id":3503,"nodeType":"StructuredDocumentation","src":"18594:491:10","text":" @notice          Load up to 32 bytes from the view onto the stack.\n @dev             Returns a bytes32 with only the `_bytes` highest bytes set.\n                  This can be immediately cast to a smaller fixed-length byte array.\n                  To automatically cast to an integer, use `indexUint`.\n @param memView   The view\n @param _index    The index\n @param _bytes    The bytes\n @return          result - The 32 byte result"},"id":3577,"implemented":true,"kind":"function","modifiers":[],"name":"index","nodeType":"FunctionDefinition","parameters":{"id":3510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3505,"mutability":"mutable","name":"memView","nodeType":"VariableDeclaration","scope":3577,"src":"19105:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3504,"name":"bytes29","nodeType":"ElementaryTypeName","src":"19105:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":3507,"mutability":"mutable","name":"_index","nodeType":"VariableDeclaration","scope":3577,"src":"19122:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3506,"name":"uint256","nodeType":"ElementaryTypeName","src":"19122:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3509,"mutability":"mutable","name":"_bytes","nodeType":"VariableDeclaration","scope":3577,"src":"19138:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3508,"name":"uint8","nodeType":"ElementaryTypeName","src":"19138:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"19104:47:10"},"returnParameters":{"id":3513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3512,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":3577,"src":"19175:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3511,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19175:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19174:16:10"},"scope":4090,"src":"19090:677:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3606,"nodeType":"Block","src":"20218:86:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3592,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"20249:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},{"id":3593,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"20258:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3594,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"20266:6:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3591,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"20243:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_uint256_$_t_uint8_$returns$_t_bytes32_$","typeString":"function (bytes29,uint256,uint8) pure returns (bytes32)"}},"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20243:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20235:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3589,"name":"uint256","nodeType":"ElementaryTypeName","src":"20235:7:10","typeDescriptions":{}}},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20235:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":3597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20280:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3598,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"20285:6:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"20280:11:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3600,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20279:13:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":3601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20295:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"20279:17:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3603,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20278:19:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"20235:62:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3588,"id":3605,"nodeType":"Return","src":"20228:69:10"}]},"documentation":{"id":3578,"nodeType":"StructuredDocumentation","src":"19773:335:10","text":" @notice          Parse an unsigned integer from the view at `_index`.\n @dev             Requires that the view have >= `_bytes` bytes following that index.\n @param memView   The view\n @param _index    The index\n @param _bytes    The bytes\n @return          result - The unsigned integer"},"id":3607,"implemented":true,"kind":"function","modifiers":[],"name":"indexUint","nodeType":"FunctionDefinition","parameters":{"id":3585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3580,"mutability":"mutable","name":"memView","nodeType":"VariableDeclaration","scope":3607,"src":"20132:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3579,"name":"bytes29","nodeType":"ElementaryTypeName","src":"20132:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":3582,"mutability":"mutable","name":"_index","nodeType":"VariableDeclaration","scope":3607,"src":"20149:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3581,"name":"uint256","nodeType":"ElementaryTypeName","src":"20149:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3584,"mutability":"mutable","name":"_bytes","nodeType":"VariableDeclaration","scope":3607,"src":"20165:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3583,"name":"uint8","nodeType":"ElementaryTypeName","src":"20165:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"20131:47:10"},"returnParameters":{"id":3588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3587,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":3607,"src":"20202:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3586,"name":"uint256","nodeType":"ElementaryTypeName","src":"20202:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20201:16:10"},"scope":4090,"src":"20113:191:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3630,"nodeType":"Block","src":"20653:79:10","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3623,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"20699:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},{"id":3624,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"20708:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3625,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"20716:6:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3622,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"20693:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_uint256_$_t_uint8_$returns$_t_bytes32_$","typeString":"function (bytes29,uint256,uint8) pure returns (bytes32)"}},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20693:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20685:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3620,"name":"uint256","nodeType":"ElementaryTypeName","src":"20685:7:10","typeDescriptions":{}}},"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20685:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3619,"name":"reverseUint256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"20670:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20670:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3618,"id":3629,"nodeType":"Return","src":"20663:62:10"}]},"documentation":{"id":3608,"nodeType":"StructuredDocumentation","src":"20310:231:10","text":" @notice          Parse an unsigned integer from LE bytes.\n @param memView   The view\n @param _index    The index\n @param _bytes    The bytes\n @return          result - The unsigned integer"},"id":3631,"implemented":true,"kind":"function","modifiers":[],"name":"indexLEUint","nodeType":"FunctionDefinition","parameters":{"id":3615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3610,"mutability":"mutable","name":"memView","nodeType":"VariableDeclaration","scope":3631,"src":"20567:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3609,"name":"bytes29","nodeType":"ElementaryTypeName","src":"20567:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":3612,"mutability":"mutable","name":"_index","nodeType":"VariableDeclaration","scope":3631,"src":"20584:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3611,"name":"uint256","nodeType":"ElementaryTypeName","src":"20584:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3614,"mutability":"mutable","name":"_bytes","nodeType":"VariableDeclaration","scope":3631,"src":"20600:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3613,"name":"uint8","nodeType":"ElementaryTypeName","src":"20600:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"20566:47:10"},"returnParameters":{"id":3618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3617,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":3631,"src":"20637:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3616,"name":"uint256","nodeType":"ElementaryTypeName","src":"20637:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20636:16:10"},"scope":4090,"src":"20546:186:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3653,"nodeType":"Block","src":"21108:72:10","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3646,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"21151:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},{"id":3647,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3636,"src":"21160:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3230","id":3648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21168:2:10","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"}],"id":3645,"name":"indexUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"21141:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (bytes29,uint256,uint8) pure returns (uint256)"}},"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21141:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21133:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3643,"name":"uint160","nodeType":"ElementaryTypeName","src":"21133:7:10","typeDescriptions":{}}},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21133:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21125:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3641,"name":"address","nodeType":"ElementaryTypeName","src":"21125:7:10","typeDescriptions":{}}},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21125:48:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":3640,"id":3652,"nodeType":"Return","src":"21118:55:10"}]},"documentation":{"id":3632,"nodeType":"StructuredDocumentation","src":"20738:278:10","text":" @notice          Parse an address from the view at `_index`. Requires that the view have >= 20 bytes\n                  following that index.\n @param memView   The view\n @param _index    The index\n @return          address - The address"},"id":3654,"implemented":true,"kind":"function","modifiers":[],"name":"indexAddress","nodeType":"FunctionDefinition","parameters":{"id":3637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3634,"mutability":"mutable","name":"memView","nodeType":"VariableDeclaration","scope":3654,"src":"21043:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3633,"name":"bytes29","nodeType":"ElementaryTypeName","src":"21043:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":3636,"mutability":"mutable","name":"_index","nodeType":"VariableDeclaration","scope":3654,"src":"21060:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3635,"name":"uint256","nodeType":"ElementaryTypeName","src":"21060:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21042:33:10"},"returnParameters":{"id":3640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3639,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3654,"src":"21099:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3638,"name":"address","nodeType":"ElementaryTypeName","src":"21099:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21098:9:10"},"scope":4090,"src":"21021:159:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3675,"nodeType":"Block","src":"21459:226:10","statements":[{"assignments":[3663],"declarations":[{"constant":false,"id":3663,"mutability":"mutable","name":"_loc","nodeType":"VariableDeclaration","scope":3675,"src":"21469:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3662,"name":"uint256","nodeType":"ElementaryTypeName","src":"21469:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3667,"initialValue":{"arguments":[{"id":3665,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"21488:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3664,"name":"loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"21484:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21484:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"21469:27:10"},{"assignments":[3669],"declarations":[{"constant":false,"id":3669,"mutability":"mutable","name":"_len","nodeType":"VariableDeclaration","scope":3675,"src":"21506:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3668,"name":"uint256","nodeType":"ElementaryTypeName","src":"21506:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3673,"initialValue":{"arguments":[{"id":3671,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"21525:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3670,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"21521:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21521:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"21506:27:10"},{"AST":{"nodeType":"YulBlock","src":"21552:127:10","statements":[{"nodeType":"YulAssignment","src":"21638:31:10","value":{"arguments":[{"name":"_loc","nodeType":"YulIdentifier","src":"21658:4:10"},{"name":"_len","nodeType":"YulIdentifier","src":"21664:4:10"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"21648:9:10"},"nodeType":"YulFunctionCall","src":"21648:21:10"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"21638:6:10"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3669,"isOffset":false,"isSlot":false,"src":"21664:4:10","valueSize":1},{"declaration":3663,"isOffset":false,"isSlot":false,"src":"21658:4:10","valueSize":1},{"declaration":3660,"isOffset":false,"isSlot":false,"src":"21638:6:10","valueSize":1}],"id":3674,"nodeType":"InlineAssembly","src":"21543:136:10"}]},"documentation":{"id":3655,"nodeType":"StructuredDocumentation","src":"21186:196:10","text":" @notice          Return the keccak256 hash of the underlying memory\n @param memView   The view\n @return          digest - The keccak256 hash of the underlying memory"},"id":3676,"implemented":true,"kind":"function","modifiers":[],"name":"keccak","nodeType":"FunctionDefinition","parameters":{"id":3658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3657,"mutability":"mutable","name":"memView","nodeType":"VariableDeclaration","scope":3676,"src":"21403:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3656,"name":"bytes29","nodeType":"ElementaryTypeName","src":"21403:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"21402:17:10"},"returnParameters":{"id":3661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3660,"mutability":"mutable","name":"digest","nodeType":"VariableDeclaration","scope":3676,"src":"21443:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3659,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21443:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21442:16:10"},"scope":4090,"src":"21387:298:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3705,"nodeType":"Block","src":"22023:377:10","statements":[{"assignments":[3685],"declarations":[{"constant":false,"id":3685,"mutability":"mutable","name":"_loc","nodeType":"VariableDeclaration","scope":3705,"src":"22033:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3684,"name":"uint256","nodeType":"ElementaryTypeName","src":"22033:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3689,"initialValue":{"arguments":[{"id":3687,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"22052:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3686,"name":"loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"22048:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22048:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"22033:27:10"},{"assignments":[3691],"declarations":[{"constant":false,"id":3691,"mutability":"mutable","name":"_len","nodeType":"VariableDeclaration","scope":3705,"src":"22070:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3690,"name":"uint256","nodeType":"ElementaryTypeName","src":"22070:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3695,"initialValue":{"arguments":[{"id":3693,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"22089:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3692,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"22085:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22085:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"22070:27:10"},{"assignments":[3697],"declarations":[{"constant":false,"id":3697,"mutability":"mutable","name":"res","nodeType":"VariableDeclaration","scope":3705,"src":"22108:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3696,"name":"bool","nodeType":"ElementaryTypeName","src":"22108:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3698,"nodeType":"VariableDeclarationStatement","src":"22108:8:10"},{"AST":{"nodeType":"YulBlock","src":"22135:225:10","statements":[{"nodeType":"YulVariableDeclaration","src":"22221:22:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22238:4:10","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22232:5:10"},"nodeType":"YulFunctionCall","src":"22232:11:10"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"22225:3:10","type":""}]},{"nodeType":"YulAssignment","src":"22256:50:10","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"22274:3:10"},"nodeType":"YulFunctionCall","src":"22274:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"22281:1:10","type":"","value":"2"},{"name":"_loc","nodeType":"YulIdentifier","src":"22284:4:10"},{"name":"_len","nodeType":"YulIdentifier","src":"22290:4:10"},{"name":"ptr","nodeType":"YulIdentifier","src":"22296:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"22301:4:10","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"22263:10:10"},"nodeType":"YulFunctionCall","src":"22263:43:10"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"22256:3:10"}]},{"nodeType":"YulAssignment","src":"22330:20:10","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"22346:3:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22340:5:10"},"nodeType":"YulFunctionCall","src":"22340:10:10"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"22330:6:10"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3691,"isOffset":false,"isSlot":false,"src":"22290:4:10","valueSize":1},{"declaration":3685,"isOffset":false,"isSlot":false,"src":"22284:4:10","valueSize":1},{"declaration":3682,"isOffset":false,"isSlot":false,"src":"22330:6:10","valueSize":1},{"declaration":3697,"isOffset":false,"isSlot":false,"src":"22256:3:10","valueSize":1}],"id":3699,"nodeType":"InlineAssembly","src":"22126:234:10"},{"expression":{"arguments":[{"id":3701,"name":"res","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"22377:3:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"73686132204f4f47","id":3702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22382:10:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3ca99be8d743ac353bd8c3838b97b50b451e11f1db53b55b3a5f8a24fb6403e","typeString":"literal_string \"sha2 OOG\""},"value":"sha2 OOG"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d3ca99be8d743ac353bd8c3838b97b50b451e11f1db53b55b3a5f8a24fb6403e","typeString":"literal_string \"sha2 OOG\""}],"id":3700,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22369:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22369:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3704,"nodeType":"ExpressionStatement","src":"22369:24:10"}]},"documentation":{"id":3677,"nodeType":"StructuredDocumentation","src":"21691:257:10","text":" @notice          Return the sha2 digest of the underlying memory.\n @dev             We explicitly deallocate memory afterwards.\n @param memView   The view\n @return          digest - The sha2 hash of the underlying memory"},"id":3706,"implemented":true,"kind":"function","modifiers":[],"name":"sha2","nodeType":"FunctionDefinition","parameters":{"id":3680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3679,"mutability":"mutable","name":"memView","nodeType":"VariableDeclaration","scope":3706,"src":"21967:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3678,"name":"bytes29","nodeType":"ElementaryTypeName","src":"21967:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"21966:17:10"},"returnParameters":{"id":3683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3682,"mutability":"mutable","name":"digest","nodeType":"VariableDeclaration","scope":3706,"src":"22007:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3681,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22007:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22006:16:10"},"scope":4090,"src":"21953:447:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3735,"nodeType":"Block","src":"22647:499:10","statements":[{"assignments":[3715],"declarations":[{"constant":false,"id":3715,"mutability":"mutable","name":"_loc","nodeType":"VariableDeclaration","scope":3735,"src":"22657:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3714,"name":"uint256","nodeType":"ElementaryTypeName","src":"22657:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3719,"initialValue":{"arguments":[{"id":3717,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"22676:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3716,"name":"loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"22672:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22672:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"22657:27:10"},{"assignments":[3721],"declarations":[{"constant":false,"id":3721,"mutability":"mutable","name":"_len","nodeType":"VariableDeclaration","scope":3735,"src":"22694:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3720,"name":"uint256","nodeType":"ElementaryTypeName","src":"22694:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3725,"initialValue":{"arguments":[{"id":3723,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"22713:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3722,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"22709:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22709:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"22694:27:10"},{"assignments":[3727],"declarations":[{"constant":false,"id":3727,"mutability":"mutable","name":"res","nodeType":"VariableDeclaration","scope":3735,"src":"22731:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3726,"name":"bool","nodeType":"ElementaryTypeName","src":"22731:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3728,"nodeType":"VariableDeclarationStatement","src":"22731:8:10"},{"AST":{"nodeType":"YulBlock","src":"22758:345:10","statements":[{"nodeType":"YulVariableDeclaration","src":"22844:22:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22861:4:10","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22855:5:10"},"nodeType":"YulFunctionCall","src":"22855:11:10"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"22848:3:10","type":""}]},{"nodeType":"YulAssignment","src":"22879:50:10","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"22897:3:10"},"nodeType":"YulFunctionCall","src":"22897:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"22904:1:10","type":"","value":"2"},{"name":"_loc","nodeType":"YulIdentifier","src":"22907:4:10"},{"name":"_len","nodeType":"YulIdentifier","src":"22913:4:10"},{"name":"ptr","nodeType":"YulIdentifier","src":"22919:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"22924:4:10","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"22886:10:10"},"nodeType":"YulFunctionCall","src":"22886:43:10"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"22879:3:10"}]},{"nodeType":"YulAssignment","src":"22950:59:10","value":{"arguments":[{"name":"res","nodeType":"YulIdentifier","src":"22961:3:10"},{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"22977:3:10"},"nodeType":"YulFunctionCall","src":"22977:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"22984:1:10","type":"","value":"3"},{"name":"ptr","nodeType":"YulIdentifier","src":"22987:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"22992:4:10","type":"","value":"0x20"},{"name":"ptr","nodeType":"YulIdentifier","src":"22998:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"23003:4:10","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"22966:10:10"},"nodeType":"YulFunctionCall","src":"22966:42:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22957:3:10"},"nodeType":"YulFunctionCall","src":"22957:52:10"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"22950:3:10"}]},{"nodeType":"YulAssignment","src":"23032:30:10","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"23052:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"23057:3:10","type":"","value":"0xc"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23048:3:10"},"nodeType":"YulFunctionCall","src":"23048:13:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23042:5:10"},"nodeType":"YulFunctionCall","src":"23042:20:10"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"23032:6:10"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3721,"isOffset":false,"isSlot":false,"src":"22913:4:10","valueSize":1},{"declaration":3715,"isOffset":false,"isSlot":false,"src":"22907:4:10","valueSize":1},{"declaration":3712,"isOffset":false,"isSlot":false,"src":"23032:6:10","valueSize":1},{"declaration":3727,"isOffset":false,"isSlot":false,"src":"22879:3:10","valueSize":1},{"declaration":3727,"isOffset":false,"isSlot":false,"src":"22950:3:10","valueSize":1},{"declaration":3727,"isOffset":false,"isSlot":false,"src":"22961:3:10","valueSize":1}],"id":3729,"nodeType":"InlineAssembly","src":"22749:354:10"},{"expression":{"arguments":[{"id":3731,"name":"res","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"23120:3:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"68617368313630204f4f47","id":3732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23125:13:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_1804c65588b3f40ccb6dd2c7ecf67f4ce1b81408b42d073f50b13b743e1c16c7","typeString":"literal_string \"hash160 OOG\""},"value":"hash160 OOG"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1804c65588b3f40ccb6dd2c7ecf67f4ce1b81408b42d073f50b13b743e1c16c7","typeString":"literal_string \"hash160 OOG\""}],"id":3730,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23112:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23112:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3734,"nodeType":"ExpressionStatement","src":"23112:27:10"}]},"documentation":{"id":3707,"nodeType":"StructuredDocumentation","src":"22406:163:10","text":" @notice          Implements bitcoin's hash160 (rmd160(sha2()))\n @param memView   The pre-image\n @return          digest - the Digest"},"id":3736,"implemented":true,"kind":"function","modifiers":[],"name":"hash160","nodeType":"FunctionDefinition","parameters":{"id":3710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3709,"mutability":"mutable","name":"memView","nodeType":"VariableDeclaration","scope":3736,"src":"22591:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3708,"name":"bytes29","nodeType":"ElementaryTypeName","src":"22591:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"22590:17:10"},"returnParameters":{"id":3713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3712,"mutability":"mutable","name":"digest","nodeType":"VariableDeclaration","scope":3736,"src":"22631:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":3711,"name":"bytes20","nodeType":"ElementaryTypeName","src":"22631:7:10","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"visibility":"internal"}],"src":"22630:16:10"},"scope":4090,"src":"22574:572:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3765,"nodeType":"Block","src":"23399:462:10","statements":[{"assignments":[3745],"declarations":[{"constant":false,"id":3745,"mutability":"mutable","name":"_loc","nodeType":"VariableDeclaration","scope":3765,"src":"23409:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3744,"name":"uint256","nodeType":"ElementaryTypeName","src":"23409:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3749,"initialValue":{"arguments":[{"id":3747,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"23428:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3746,"name":"loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"23424:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23424:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"23409:27:10"},{"assignments":[3751],"declarations":[{"constant":false,"id":3751,"mutability":"mutable","name":"_len","nodeType":"VariableDeclaration","scope":3765,"src":"23446:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3750,"name":"uint256","nodeType":"ElementaryTypeName","src":"23446:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3755,"initialValue":{"arguments":[{"id":3753,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"23465:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3752,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"23461:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23461:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"23446:27:10"},{"assignments":[3757],"declarations":[{"constant":false,"id":3757,"mutability":"mutable","name":"res","nodeType":"VariableDeclaration","scope":3765,"src":"23483:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3756,"name":"bool","nodeType":"ElementaryTypeName","src":"23483:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3758,"nodeType":"VariableDeclarationStatement","src":"23483:8:10"},{"AST":{"nodeType":"YulBlock","src":"23510:308:10","statements":[{"nodeType":"YulVariableDeclaration","src":"23596:22:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23613:4:10","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23607:5:10"},"nodeType":"YulFunctionCall","src":"23607:11:10"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"23600:3:10","type":""}]},{"nodeType":"YulAssignment","src":"23631:50:10","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"23649:3:10"},"nodeType":"YulFunctionCall","src":"23649:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"23656:1:10","type":"","value":"2"},{"name":"_loc","nodeType":"YulIdentifier","src":"23659:4:10"},{"name":"_len","nodeType":"YulIdentifier","src":"23665:4:10"},{"name":"ptr","nodeType":"YulIdentifier","src":"23671:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"23676:4:10","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"23638:10:10"},"nodeType":"YulFunctionCall","src":"23638:43:10"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"23631:3:10"}]},{"nodeType":"YulAssignment","src":"23705:59:10","value":{"arguments":[{"name":"res","nodeType":"YulIdentifier","src":"23716:3:10"},{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"23732:3:10"},"nodeType":"YulFunctionCall","src":"23732:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"23739:1:10","type":"","value":"2"},{"name":"ptr","nodeType":"YulIdentifier","src":"23742:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"23747:4:10","type":"","value":"0x20"},{"name":"ptr","nodeType":"YulIdentifier","src":"23753:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"23758:4:10","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"23721:10:10"},"nodeType":"YulFunctionCall","src":"23721:42:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23712:3:10"},"nodeType":"YulFunctionCall","src":"23712:52:10"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"23705:3:10"}]},{"nodeType":"YulAssignment","src":"23788:20:10","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"23804:3:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23798:5:10"},"nodeType":"YulFunctionCall","src":"23798:10:10"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"23788:6:10"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3751,"isOffset":false,"isSlot":false,"src":"23665:4:10","valueSize":1},{"declaration":3745,"isOffset":false,"isSlot":false,"src":"23659:4:10","valueSize":1},{"declaration":3742,"isOffset":false,"isSlot":false,"src":"23788:6:10","valueSize":1},{"declaration":3757,"isOffset":false,"isSlot":false,"src":"23631:3:10","valueSize":1},{"declaration":3757,"isOffset":false,"isSlot":false,"src":"23705:3:10","valueSize":1},{"declaration":3757,"isOffset":false,"isSlot":false,"src":"23716:3:10","valueSize":1}],"id":3759,"nodeType":"InlineAssembly","src":"23501:317:10"},{"expression":{"arguments":[{"id":3761,"name":"res","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3757,"src":"23835:3:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"68617368323536204f4f47","id":3762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23840:13:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_1a767a049502c87408838d5c835eb2731e120dd542fc305f4e7093b4e3b1f703","typeString":"literal_string \"hash256 OOG\""},"value":"hash256 OOG"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1a767a049502c87408838d5c835eb2731e120dd542fc305f4e7093b4e3b1f703","typeString":"literal_string \"hash256 OOG\""}],"id":3760,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23827:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23827:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3764,"nodeType":"ExpressionStatement","src":"23827:27:10"}]},"documentation":{"id":3737,"nodeType":"StructuredDocumentation","src":"23152:169:10","text":" @notice          Implements bitcoin's hash256 (double sha2)\n @param memView   A view of the preimage\n @return          digest - the Digest"},"id":3766,"implemented":true,"kind":"function","modifiers":[],"name":"hash256","nodeType":"FunctionDefinition","parameters":{"id":3740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3739,"mutability":"mutable","name":"memView","nodeType":"VariableDeclaration","scope":3766,"src":"23343:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3738,"name":"bytes29","nodeType":"ElementaryTypeName","src":"23343:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"23342:17:10"},"returnParameters":{"id":3743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3742,"mutability":"mutable","name":"digest","nodeType":"VariableDeclaration","scope":3766,"src":"23383:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23383:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"23382:16:10"},"scope":4090,"src":"23326:535:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3801,"nodeType":"Block","src":"24195:109:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3777,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"24217:4:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3776,"name":"loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"24213:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24213:9:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3780,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"24230:5:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3779,"name":"loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"24226:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24226:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"24213:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3784,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"24244:4:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3783,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"24240:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24240:9:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3787,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"24257:5:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3786,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"24253:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24253:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"24240:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24213:50:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3791,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24212:52:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3793,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"24275:4:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3792,"name":"keccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"24268:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bytes32_$","typeString":"function (bytes29) pure returns (bytes32)"}},"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24268:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3796,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"24291:5:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3795,"name":"keccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"24284:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bytes32_$","typeString":"function (bytes29) pure returns (bytes32)"}},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24284:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"24268:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24212:85:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3775,"id":3800,"nodeType":"Return","src":"24205:92:10"}]},"documentation":{"id":3767,"nodeType":"StructuredDocumentation","src":"23867:243:10","text":" @notice          Return true if the underlying memory is equal. Else false.\n @param left      The first view\n @param right     The second view\n @return          bool - True if the underlying memory is equal"},"id":3802,"implemented":true,"kind":"function","modifiers":[],"name":"untypedEqual","nodeType":"FunctionDefinition","parameters":{"id":3772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3769,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":3802,"src":"24137:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3768,"name":"bytes29","nodeType":"ElementaryTypeName","src":"24137:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":3771,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":3802,"src":"24151:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3770,"name":"bytes29","nodeType":"ElementaryTypeName","src":"24151:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"24136:29:10"},"returnParameters":{"id":3775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3774,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3802,"src":"24189:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3773,"name":"bool","nodeType":"ElementaryTypeName","src":"24189:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"24188:6:10"},"scope":4090,"src":"24115:189:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3818,"nodeType":"Block","src":"24642:50:10","statements":[{"expression":{"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"24659:26:10","subExpression":{"arguments":[{"id":3813,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"24673:4:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},{"id":3814,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"24679:5:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"},{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3812,"name":"untypedEqual","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"24660:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_bytes29_$returns$_t_bool_$","typeString":"function (bytes29,bytes29) pure returns (bool)"}},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24660:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3811,"id":3817,"nodeType":"Return","src":"24652:33:10"}]},"documentation":{"id":3803,"nodeType":"StructuredDocumentation","src":"24310:244:10","text":" @notice          Return false if the underlying memory is equal. Else true.\n @param left      The first view\n @param right     The second view\n @return          bool - False if the underlying memory is equal"},"id":3819,"implemented":true,"kind":"function","modifiers":[],"name":"untypedNotEqual","nodeType":"FunctionDefinition","parameters":{"id":3808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3805,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":3819,"src":"24584:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3804,"name":"bytes29","nodeType":"ElementaryTypeName","src":"24584:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":3807,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":3819,"src":"24598:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3806,"name":"bytes29","nodeType":"ElementaryTypeName","src":"24598:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"24583:29:10"},"returnParameters":{"id":3811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3810,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3819,"src":"24636:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3809,"name":"bool","nodeType":"ElementaryTypeName","src":"24636:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"24635:6:10"},"scope":4090,"src":"24559:133:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3850,"nodeType":"Block","src":"25077:105:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3829,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"25094:4:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3830,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"25102:5:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"src":"25094:13:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint40","typeString":"uint40"},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3833,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"25119:4:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3832,"name":"typeOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"25112:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint40_$","typeString":"function (bytes29) pure returns (uint40)"}},"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25112:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3836,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"25135:5:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3835,"name":"typeOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"25128:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint40_$","typeString":"function (bytes29) pure returns (uint40)"}},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25128:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"25112:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3840,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"25152:4:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3839,"name":"keccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"25145:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bytes32_$","typeString":"function (bytes29) pure returns (bytes32)"}},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25145:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3843,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"25168:5:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3842,"name":"keccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"25161:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bytes32_$","typeString":"function (bytes29) pure returns (bytes32)"}},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25161:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"25145:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25112:62:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3847,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25111:64:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25094:81:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3828,"id":3849,"nodeType":"Return","src":"25087:88:10"}]},"documentation":{"id":3820,"nodeType":"StructuredDocumentation","src":"24698:301:10","text":" @notice          Compares type equality.\n @dev             Shortcuts if the pointers are identical, otherwise compares type and digest.\n @param left      The first view\n @param right     The second view\n @return          bool - True if the types are the same"},"id":3851,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nodeType":"FunctionDefinition","parameters":{"id":3825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3822,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":3851,"src":"25019:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3821,"name":"bytes29","nodeType":"ElementaryTypeName","src":"25019:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":3824,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":3851,"src":"25033:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3823,"name":"bytes29","nodeType":"ElementaryTypeName","src":"25033:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"25018:29:10"},"returnParameters":{"id":3828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3827,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3851,"src":"25071:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3826,"name":"bool","nodeType":"ElementaryTypeName","src":"25071:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"25070:6:10"},"scope":4090,"src":"25004:178:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3867,"nodeType":"Block","src":"25576:43:10","statements":[{"expression":{"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"25593:19:10","subExpression":{"arguments":[{"id":3862,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"25600:4:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},{"id":3863,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"25606:5:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"},{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3861,"name":"equal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"25594:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_bytes29_$returns$_t_bool_$","typeString":"function (bytes29,bytes29) pure returns (bool)"}},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25594:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3860,"id":3866,"nodeType":"Return","src":"25586:26:10"}]},"documentation":{"id":3852,"nodeType":"StructuredDocumentation","src":"25188:307:10","text":" @notice          Compares type inequality.\n @dev             Shortcuts if the pointers are identical, otherwise compares type and digest.\n @param left      The first view\n @param right     The second view\n @return          bool - True if the types are not the same"},"id":3868,"implemented":true,"kind":"function","modifiers":[],"name":"notEqual","nodeType":"FunctionDefinition","parameters":{"id":3857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3854,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":3868,"src":"25518:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3853,"name":"bytes29","nodeType":"ElementaryTypeName","src":"25518:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":3856,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":3868,"src":"25532:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3855,"name":"bytes29","nodeType":"ElementaryTypeName","src":"25532:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"25517:29:10"},"returnParameters":{"id":3860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3859,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3868,"src":"25570:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3858,"name":"bool","nodeType":"ElementaryTypeName","src":"25570:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"25569:6:10"},"scope":4090,"src":"25500:119:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3926,"nodeType":"Block","src":"26276:814:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":3880,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"26302:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3879,"name":"notNull","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"26294:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bool_$","typeString":"function (bytes29) pure returns (bool)"}},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26294:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e746572206465726566","id":3882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26312:42:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_efcd06dabd47a0a59b27bbaba0b6773eb50755e41c6b64a127af091bad45512c","typeString":"literal_string \"TypedMemView/copyTo - Null pointer deref\""},"value":"TypedMemView/copyTo - Null pointer deref"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_efcd06dabd47a0a59b27bbaba0b6773eb50755e41c6b64a127af091bad45512c","typeString":"literal_string \"TypedMemView/copyTo - Null pointer deref\""}],"id":3878,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26286:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26286:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3884,"nodeType":"ExpressionStatement","src":"26286:69:10"},{"expression":{"arguments":[{"arguments":[{"id":3887,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"26381:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3886,"name":"isValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"26373:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bool_$","typeString":"function (bytes29) pure returns (bool)"}},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26373:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54797065644d656d566965772f636f7079546f202d20496e76616c696420706f696e746572206465726566","id":3889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26391:45:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_f41d5ca586b1d56a0f8933b774181f43461390a9a40414a5d943c157df755196","typeString":"literal_string \"TypedMemView/copyTo - Invalid pointer deref\""},"value":"TypedMemView/copyTo - Invalid pointer deref"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f41d5ca586b1d56a0f8933b774181f43461390a9a40414a5d943c157df755196","typeString":"literal_string \"TypedMemView/copyTo - Invalid pointer deref\""}],"id":3885,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26365:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26365:72:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3891,"nodeType":"ExpressionStatement","src":"26365:72:10"},{"assignments":[3893],"declarations":[{"constant":false,"id":3893,"mutability":"mutable","name":"_len","nodeType":"VariableDeclaration","scope":3926,"src":"26447:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3892,"name":"uint256","nodeType":"ElementaryTypeName","src":"26447:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3897,"initialValue":{"arguments":[{"id":3895,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"26466:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3894,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"26462:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26462:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"26447:27:10"},{"assignments":[3899],"declarations":[{"constant":false,"id":3899,"mutability":"mutable","name":"_oldLoc","nodeType":"VariableDeclaration","scope":3926,"src":"26484:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3898,"name":"uint256","nodeType":"ElementaryTypeName","src":"26484:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3903,"initialValue":{"arguments":[{"id":3901,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"26506:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3900,"name":"loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"26502:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26502:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"26484:30:10"},{"assignments":[3905],"declarations":[{"constant":false,"id":3905,"mutability":"mutable","name":"ptr","nodeType":"VariableDeclaration","scope":3926,"src":"26525:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3904,"name":"uint256","nodeType":"ElementaryTypeName","src":"26525:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3906,"nodeType":"VariableDeclarationStatement","src":"26525:11:10"},{"assignments":[3908],"declarations":[{"constant":false,"id":3908,"mutability":"mutable","name":"res","nodeType":"VariableDeclaration","scope":3926,"src":"26546:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3907,"name":"bool","nodeType":"ElementaryTypeName","src":"26546:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3909,"nodeType":"VariableDeclarationStatement","src":"26546:8:10"},{"AST":{"nodeType":"YulBlock","src":"26573:401:10","statements":[{"nodeType":"YulAssignment","src":"26659:18:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26672:4:10","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"26666:5:10"},"nodeType":"YulFunctionCall","src":"26666:11:10"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"26659:3:10"}]},{"body":{"nodeType":"YulBlock","src":"26768:74:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26793:4:10","type":"","value":"0x60"},{"kind":"number","nodeType":"YulLiteral","src":"26799:4:10","type":"","value":"0x20"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26786:6:10"},"nodeType":"YulFunctionCall","src":"26786:18:10"},"nodeType":"YulExpressionStatement","src":"26786:18:10"}]},"condition":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"26754:3:10"},{"name":"_newLoc","nodeType":"YulIdentifier","src":"26759:7:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26751:2:10"},"nodeType":"YulFunctionCall","src":"26751:16:10"},"nodeType":"YulIf","src":"26748:2:10"},{"nodeType":"YulAssignment","src":"26907:57:10","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"26925:3:10"},"nodeType":"YulFunctionCall","src":"26925:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"26932:1:10","type":"","value":"4"},{"name":"_oldLoc","nodeType":"YulIdentifier","src":"26935:7:10"},{"name":"_len","nodeType":"YulIdentifier","src":"26944:4:10"},{"name":"_newLoc","nodeType":"YulIdentifier","src":"26950:7:10"},{"name":"_len","nodeType":"YulIdentifier","src":"26959:4:10"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"26914:10:10"},"nodeType":"YulFunctionCall","src":"26914:50:10"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"26907:3:10"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3893,"isOffset":false,"isSlot":false,"src":"26944:4:10","valueSize":1},{"declaration":3893,"isOffset":false,"isSlot":false,"src":"26959:4:10","valueSize":1},{"declaration":3873,"isOffset":false,"isSlot":false,"src":"26759:7:10","valueSize":1},{"declaration":3873,"isOffset":false,"isSlot":false,"src":"26950:7:10","valueSize":1},{"declaration":3899,"isOffset":false,"isSlot":false,"src":"26935:7:10","valueSize":1},{"declaration":3905,"isOffset":false,"isSlot":false,"src":"26659:3:10","valueSize":1},{"declaration":3905,"isOffset":false,"isSlot":false,"src":"26754:3:10","valueSize":1},{"declaration":3908,"isOffset":false,"isSlot":false,"src":"26907:3:10","valueSize":1}],"id":3910,"nodeType":"InlineAssembly","src":"26564:410:10"},{"expression":{"arguments":[{"id":3912,"name":"res","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"26991:3:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6964656e74697479204f4f47","id":3913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26996:14:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_342e078fac7a61bcfbc534bc81c7623ce21e4f865e40f05a6e6123406902fb9f","typeString":"literal_string \"identity OOG\""},"value":"identity OOG"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_342e078fac7a61bcfbc534bc81c7623ce21e4f865e40f05a6e6123406902fb9f","typeString":"literal_string \"identity OOG\""}],"id":3911,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26983:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26983:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3915,"nodeType":"ExpressionStatement","src":"26983:28:10"},{"expression":{"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3916,"name":"written","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"27021:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3919,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"27059:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3918,"name":"typeOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"27052:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint40_$","typeString":"function (bytes29) pure returns (uint40)"}},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27052:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},{"id":3921,"name":"_newLoc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"27069:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3922,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"27078:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint40","typeString":"uint40"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3917,"name":"unsafeBuildUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"27031:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes29_$","typeString":"function (uint256,uint256,uint256) pure returns (bytes29)"}},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27031:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"src":"27021:62:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":3925,"nodeType":"ExpressionStatement","src":"27021:62:10"}]},"documentation":{"id":3869,"nodeType":"StructuredDocumentation","src":"25625:551:10","text":" @notice          Copy the view to a location, return an unsafe memory reference\n @dev             Super Dangerous direct memory access.\n                  This reference can be overwritten if anything else modifies memory (!!!).\n                  As such it MUST be consumed IMMEDIATELY.\n                  This function is private to prevent unsafe usage by callers.\n @param memView   The view\n @param _newLoc   The new location\n @return          written - the unsafe memory reference"},"id":3927,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeCopyTo","nodeType":"FunctionDefinition","parameters":{"id":3874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3871,"mutability":"mutable","name":"memView","nodeType":"VariableDeclaration","scope":3927,"src":"26203:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3870,"name":"bytes29","nodeType":"ElementaryTypeName","src":"26203:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":3873,"mutability":"mutable","name":"_newLoc","nodeType":"VariableDeclaration","scope":3927,"src":"26220:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3872,"name":"uint256","nodeType":"ElementaryTypeName","src":"26220:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26202:34:10"},"returnParameters":{"id":3877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3876,"mutability":"mutable","name":"written","nodeType":"VariableDeclaration","scope":3927,"src":"26259:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3875,"name":"bytes29","nodeType":"ElementaryTypeName","src":"26259:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"26258:17:10"},"scope":4090,"src":"26181:909:10","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3953,"nodeType":"Block","src":"27533:541:10","statements":[{"assignments":[3936],"declarations":[{"constant":false,"id":3936,"mutability":"mutable","name":"ptr","nodeType":"VariableDeclaration","scope":3953,"src":"27543:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3935,"name":"uint256","nodeType":"ElementaryTypeName","src":"27543:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3937,"nodeType":"VariableDeclarationStatement","src":"27543:11:10"},{"assignments":[3939],"declarations":[{"constant":false,"id":3939,"mutability":"mutable","name":"_len","nodeType":"VariableDeclaration","scope":3953,"src":"27564:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3938,"name":"uint256","nodeType":"ElementaryTypeName","src":"27564:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3943,"initialValue":{"arguments":[{"id":3941,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"27583:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3940,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"27579:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27579:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"27564:27:10"},{"AST":{"nodeType":"YulBlock","src":"27610:167:10","statements":[{"nodeType":"YulAssignment","src":"27696:18:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27709:4:10","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27703:5:10"},"nodeType":"YulFunctionCall","src":"27703:11:10"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"27696:3:10"}]},{"nodeType":"YulAssignment","src":"27757:10:10","value":{"name":"ptr","nodeType":"YulIdentifier","src":"27764:3:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"27757:3:10"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3936,"isOffset":false,"isSlot":false,"src":"27696:3:10","valueSize":1},{"declaration":3936,"isOffset":false,"isSlot":false,"src":"27764:3:10","valueSize":1},{"declaration":3933,"isOffset":false,"isSlot":false,"src":"27757:3:10","valueSize":1}],"id":3944,"nodeType":"InlineAssembly","src":"27601:176:10"},{"expression":{"arguments":[{"id":3946,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"27799:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3947,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"27808:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":3948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27814:4:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"27808:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3945,"name":"unsafeCopyTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"27786:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes29_$_t_uint256_$returns$_t_bytes29_$","typeString":"function (bytes29,uint256) view returns (bytes29)"}},"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27786:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":3951,"nodeType":"ExpressionStatement","src":"27786:33:10"},{"AST":{"nodeType":"YulBlock","src":"27838:230:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27931:4:10","type":"","value":"0x40"},{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"27945:3:10"},{"name":"_len","nodeType":"YulIdentifier","src":"27950:4:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27941:3:10"},"nodeType":"YulFunctionCall","src":"27941:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"27957:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27937:3:10"},"nodeType":"YulFunctionCall","src":"27937:25:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27924:6:10"},"nodeType":"YulFunctionCall","src":"27924:39:10"},"nodeType":"YulExpressionStatement","src":"27924:39:10"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"28011:3:10"},{"name":"_len","nodeType":"YulIdentifier","src":"28016:4:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28004:6:10"},"nodeType":"YulFunctionCall","src":"28004:17:10"},"nodeType":"YulExpressionStatement","src":"28004:17:10"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3939,"isOffset":false,"isSlot":false,"src":"27950:4:10","valueSize":1},{"declaration":3939,"isOffset":false,"isSlot":false,"src":"28016:4:10","valueSize":1},{"declaration":3936,"isOffset":false,"isSlot":false,"src":"27945:3:10","valueSize":1},{"declaration":3936,"isOffset":false,"isSlot":false,"src":"28011:3:10","valueSize":1}],"id":3952,"nodeType":"InlineAssembly","src":"27829:239:10"}]},"documentation":{"id":3928,"nodeType":"StructuredDocumentation","src":"27096:359:10","text":" @notice          Copies the referenced memory to a new loc in memory, returning a `bytes` pointing to\n                  the new memory\n @dev             Shortcuts if the pointers are identical, otherwise compares type and digest.\n @param memView   The view\n @return          ret - The view pointing to the new memory"},"id":3954,"implemented":true,"kind":"function","modifiers":[],"name":"clone","nodeType":"FunctionDefinition","parameters":{"id":3931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3930,"mutability":"mutable","name":"memView","nodeType":"VariableDeclaration","scope":3954,"src":"27475:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3929,"name":"bytes29","nodeType":"ElementaryTypeName","src":"27475:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"27474:17:10"},"returnParameters":{"id":3934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3933,"mutability":"mutable","name":"ret","nodeType":"VariableDeclaration","scope":3954,"src":"27515:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3932,"name":"bytes","nodeType":"ElementaryTypeName","src":"27515:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"27514:18:10"},"scope":4090,"src":"27460:614:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4010,"nodeType":"Block","src":"28808:609:10","statements":[{"AST":{"nodeType":"YulBlock","src":"28827:285:10","statements":[{"nodeType":"YulVariableDeclaration","src":"28913:22:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28930:4:10","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"28924:5:10"},"nodeType":"YulFunctionCall","src":"28924:11:10"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"28917:3:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"29028:74:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29053:4:10","type":"","value":"0x60"},{"kind":"number","nodeType":"YulLiteral","src":"29059:4:10","type":"","value":"0x20"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"29046:6:10"},"nodeType":"YulFunctionCall","src":"29046:18:10"},"nodeType":"YulExpressionStatement","src":"29046:18:10"}]},"condition":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"29012:3:10"},{"name":"_location","nodeType":"YulIdentifier","src":"29017:9:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29009:2:10"},"nodeType":"YulFunctionCall","src":"29009:18:10"},"nodeType":"YulIf","src":"29006:2:10"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3960,"isOffset":false,"isSlot":false,"src":"29017:9:10","valueSize":1}],"id":3965,"nodeType":"InlineAssembly","src":"28818:294:10"},{"assignments":[3967],"declarations":[{"constant":false,"id":3967,"mutability":"mutable","name":"_offset","nodeType":"VariableDeclaration","scope":4010,"src":"29122:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3966,"name":"uint256","nodeType":"ElementaryTypeName","src":"29122:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3969,"initialValue":{"hexValue":"30","id":3968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29140:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29122:19:10"},{"body":{"id":4000,"nodeType":"Block","src":"29198:147:10","statements":[{"assignments":[3982],"declarations":[{"constant":false,"id":3982,"mutability":"mutable","name":"memView","nodeType":"VariableDeclaration","scope":4000,"src":"29212:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3981,"name":"bytes29","nodeType":"ElementaryTypeName","src":"29212:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"id":3986,"initialValue":{"baseExpression":{"id":3983,"name":"memViews","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"29230:8:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_memory_ptr","typeString":"bytes29[] memory"}},"id":3985,"indexExpression":{"id":3984,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"29239:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29230:11:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"nodeType":"VariableDeclarationStatement","src":"29212:29:10"},{"expression":{"arguments":[{"id":3988,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"29268:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3989,"name":"_location","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"29277:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3990,"name":"_offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"29289:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29277:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3987,"name":"unsafeCopyTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"29255:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes29_$_t_uint256_$returns$_t_bytes29_$","typeString":"function (bytes29,uint256) view returns (bytes29)"}},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29255:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":3993,"nodeType":"ExpressionStatement","src":"29255:42:10"},{"expression":{"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3994,"name":"_offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"29311:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":3996,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"29326:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3995,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"29322:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29322:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"29311:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3999,"nodeType":"ExpressionStatement","src":"29311:23:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3974,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"29171:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3975,"name":"memViews","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"29175:8:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_memory_ptr","typeString":"bytes29[] memory"}},"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"29175:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29171:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4001,"initializationExpression":{"assignments":[3971],"declarations":[{"constant":false,"id":3971,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":4001,"src":"29156:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3970,"name":"uint256","nodeType":"ElementaryTypeName","src":"29156:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3973,"initialValue":{"hexValue":"30","id":3972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29168:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29156:13:10"},"loopExpression":{"expression":{"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"29192:4:10","subExpression":{"id":3978,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"29192:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3980,"nodeType":"ExpressionStatement","src":"29192:4:10"},"nodeType":"ForStatement","src":"29151:194:10"},{"expression":{"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4002,"name":"unsafeView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"29354:10:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":4004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29388:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4005,"name":"_location","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"29391:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4006,"name":"_offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"29402:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4003,"name":"unsafeBuildUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"29367:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes29_$","typeString":"function (uint256,uint256,uint256) pure returns (bytes29)"}},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29367:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"src":"29354:56:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":4009,"nodeType":"ExpressionStatement","src":"29354:56:10"}]},"documentation":{"id":3955,"nodeType":"StructuredDocumentation","src":"28080:615:10","text":" @notice          Join the views in memory, return an unsafe reference to the memory.\n @dev             Super Dangerous direct memory access.\n                  This reference can be overwritten if anything else modifies memory (!!!).\n                  As such it MUST be consumed IMMEDIATELY.\n                  This function is private to prevent unsafe usage by callers.\n @param memViews  The views\n @param _location The location in memory to which to copy & concatenate\n @return          unsafeView - The conjoined view pointing to the new memory"},"id":4011,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeJoin","nodeType":"FunctionDefinition","parameters":{"id":3961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3958,"mutability":"mutable","name":"memViews","nodeType":"VariableDeclaration","scope":4011,"src":"28720:25:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_memory_ptr","typeString":"bytes29[]"},"typeName":{"baseType":{"id":3956,"name":"bytes29","nodeType":"ElementaryTypeName","src":"28720:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":3957,"nodeType":"ArrayTypeName","src":"28720:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_storage_ptr","typeString":"bytes29[]"}},"visibility":"internal"},{"constant":false,"id":3960,"mutability":"mutable","name":"_location","nodeType":"VariableDeclaration","scope":4011,"src":"28747:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3959,"name":"uint256","nodeType":"ElementaryTypeName","src":"28747:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28719:46:10"},"returnParameters":{"id":3964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3963,"mutability":"mutable","name":"unsafeView","nodeType":"VariableDeclaration","scope":4011,"src":"28788:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3962,"name":"bytes29","nodeType":"ElementaryTypeName","src":"28788:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"28787:20:10"},"scope":4090,"src":"28700:717:10","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4031,"nodeType":"Block","src":"29708:240:10","statements":[{"assignments":[4021],"declarations":[{"constant":false,"id":4021,"mutability":"mutable","name":"ptr","nodeType":"VariableDeclaration","scope":4031,"src":"29718:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4020,"name":"uint256","nodeType":"ElementaryTypeName","src":"29718:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4022,"nodeType":"VariableDeclarationStatement","src":"29718:11:10"},{"AST":{"nodeType":"YulBlock","src":"29748:144:10","statements":[{"nodeType":"YulAssignment","src":"29834:18:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29847:4:10","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29841:5:10"},"nodeType":"YulFunctionCall","src":"29841:11:10"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"29834:3:10"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":4021,"isOffset":false,"isSlot":false,"src":"29834:3:10","valueSize":1}],"id":4023,"nodeType":"InlineAssembly","src":"29739:153:10"},{"expression":{"arguments":[{"arguments":[{"id":4026,"name":"memViews","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"29926:8:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_memory_ptr","typeString":"bytes29[] memory"}},{"id":4027,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"29936:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes29_$dyn_memory_ptr","typeString":"bytes29[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4025,"name":"unsafeJoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"29915:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes29_$dyn_memory_ptr_$_t_uint256_$returns$_t_bytes29_$","typeString":"function (bytes29[] memory,uint256) view returns (bytes29)"}},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29915:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":4024,"name":"keccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"29908:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bytes32_$","typeString":"function (bytes29) pure returns (bytes32)"}},"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29908:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4019,"id":4030,"nodeType":"Return","src":"29901:40:10"}]},"documentation":{"id":4012,"nodeType":"StructuredDocumentation","src":"29423:201:10","text":" @notice          Produce the keccak256 digest of the concatenated contents of multiple views.\n @param memViews  The views\n @return          bytes32 - The keccak256 digest"},"id":4032,"implemented":true,"kind":"function","modifiers":[],"name":"joinKeccak","nodeType":"FunctionDefinition","parameters":{"id":4016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4015,"mutability":"mutable","name":"memViews","nodeType":"VariableDeclaration","scope":4032,"src":"29649:25:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_memory_ptr","typeString":"bytes29[]"},"typeName":{"baseType":{"id":4013,"name":"bytes29","nodeType":"ElementaryTypeName","src":"29649:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":4014,"nodeType":"ArrayTypeName","src":"29649:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_storage_ptr","typeString":"bytes29[]"}},"visibility":"internal"}],"src":"29648:27:10"},"returnParameters":{"id":4019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4018,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4032,"src":"29699:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4017,"name":"bytes32","nodeType":"ElementaryTypeName","src":"29699:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"29698:9:10"},"scope":4090,"src":"29629:319:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4052,"nodeType":"Block","src":"30231:238:10","statements":[{"assignments":[4042],"declarations":[{"constant":false,"id":4042,"mutability":"mutable","name":"ptr","nodeType":"VariableDeclaration","scope":4052,"src":"30241:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4041,"name":"uint256","nodeType":"ElementaryTypeName","src":"30241:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4043,"nodeType":"VariableDeclarationStatement","src":"30241:11:10"},{"AST":{"nodeType":"YulBlock","src":"30271:144:10","statements":[{"nodeType":"YulAssignment","src":"30357:18:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30370:4:10","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"30364:5:10"},"nodeType":"YulFunctionCall","src":"30364:11:10"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"30357:3:10"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":4042,"isOffset":false,"isSlot":false,"src":"30357:3:10","valueSize":1}],"id":4044,"nodeType":"InlineAssembly","src":"30262:153:10"},{"expression":{"arguments":[{"arguments":[{"id":4047,"name":"memViews","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4036,"src":"30447:8:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_memory_ptr","typeString":"bytes29[] memory"}},{"id":4048,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"30457:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes29_$dyn_memory_ptr","typeString":"bytes29[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4046,"name":"unsafeJoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"30436:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes29_$dyn_memory_ptr_$_t_uint256_$returns$_t_bytes29_$","typeString":"function (bytes29[] memory,uint256) view returns (bytes29)"}},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30436:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":4045,"name":"sha2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"30431:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes29_$returns$_t_bytes32_$","typeString":"function (bytes29) view returns (bytes32)"}},"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30431:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4040,"id":4051,"nodeType":"Return","src":"30424:38:10"}]},"documentation":{"id":4033,"nodeType":"StructuredDocumentation","src":"29954:195:10","text":" @notice          Produce the sha256 digest of the concatenated contents of multiple views.\n @param memViews  The views\n @return          bytes32 - The sha256 digest"},"id":4053,"implemented":true,"kind":"function","modifiers":[],"name":"joinSha2","nodeType":"FunctionDefinition","parameters":{"id":4037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4036,"mutability":"mutable","name":"memViews","nodeType":"VariableDeclaration","scope":4053,"src":"30172:25:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_memory_ptr","typeString":"bytes29[]"},"typeName":{"baseType":{"id":4034,"name":"bytes29","nodeType":"ElementaryTypeName","src":"30172:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":4035,"nodeType":"ArrayTypeName","src":"30172:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_storage_ptr","typeString":"bytes29[]"}},"visibility":"internal"}],"src":"30171:27:10"},"returnParameters":{"id":4040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4039,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4053,"src":"30222:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4038,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30222:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"30221:9:10"},"scope":4090,"src":"30154:315:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4088,"nodeType":"Block","src":"30731:662:10","statements":[{"assignments":[4063],"declarations":[{"constant":false,"id":4063,"mutability":"mutable","name":"ptr","nodeType":"VariableDeclaration","scope":4088,"src":"30741:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4062,"name":"uint256","nodeType":"ElementaryTypeName","src":"30741:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4064,"nodeType":"VariableDeclarationStatement","src":"30741:11:10"},{"AST":{"nodeType":"YulBlock","src":"30771:144:10","statements":[{"nodeType":"YulAssignment","src":"30857:18:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30870:4:10","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"30864:5:10"},"nodeType":"YulFunctionCall","src":"30864:11:10"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"30857:3:10"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":4063,"isOffset":false,"isSlot":false,"src":"30857:3:10","valueSize":1}],"id":4065,"nodeType":"InlineAssembly","src":"30762:153:10"},{"assignments":[4067],"declarations":[{"constant":false,"id":4067,"mutability":"mutable","name":"_newView","nodeType":"VariableDeclaration","scope":4088,"src":"30925:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":4066,"name":"bytes29","nodeType":"ElementaryTypeName","src":"30925:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"id":4074,"initialValue":{"arguments":[{"id":4069,"name":"memViews","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"30955:8:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_memory_ptr","typeString":"bytes29[] memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4070,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"30965:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":4071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30971:4:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"30965:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes29_$dyn_memory_ptr","typeString":"bytes29[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4068,"name":"unsafeJoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"30944:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes29_$dyn_memory_ptr_$_t_uint256_$returns$_t_bytes29_$","typeString":"function (bytes29[] memory,uint256) view returns (bytes29)"}},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30944:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"nodeType":"VariableDeclarationStatement","src":"30925:51:10"},{"assignments":[4076],"declarations":[{"constant":false,"id":4076,"mutability":"mutable","name":"_written","nodeType":"VariableDeclaration","scope":4088,"src":"30986:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4075,"name":"uint256","nodeType":"ElementaryTypeName","src":"30986:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4080,"initialValue":{"arguments":[{"id":4078,"name":"_newView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"31009:8:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":4077,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"31005:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31005:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"30986:32:10"},{"assignments":[4082],"declarations":[{"constant":false,"id":4082,"mutability":"mutable","name":"_footprint","nodeType":"VariableDeclaration","scope":4088,"src":"31028:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4081,"name":"uint256","nodeType":"ElementaryTypeName","src":"31028:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4086,"initialValue":{"arguments":[{"id":4084,"name":"_newView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"31059:8:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":4083,"name":"footprint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"31049:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint256_$","typeString":"function (bytes29) pure returns (uint256)"}},"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31049:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31028:40:10"},{"AST":{"nodeType":"YulBlock","src":"31088:299:10","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"31213:3:10"},{"name":"_written","nodeType":"YulIdentifier","src":"31218:8:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31206:6:10"},"nodeType":"YulFunctionCall","src":"31206:21:10"},"nodeType":"YulExpressionStatement","src":"31206:21:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31316:4:10","type":"","value":"0x40"},{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"31330:3:10"},{"name":"_footprint","nodeType":"YulIdentifier","src":"31335:10:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31326:3:10"},"nodeType":"YulFunctionCall","src":"31326:20:10"},{"kind":"number","nodeType":"YulLiteral","src":"31348:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31322:3:10"},"nodeType":"YulFunctionCall","src":"31322:31:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31309:6:10"},"nodeType":"YulFunctionCall","src":"31309:45:10"},"nodeType":"YulExpressionStatement","src":"31309:45:10"},{"nodeType":"YulAssignment","src":"31367:10:10","value":{"name":"ptr","nodeType":"YulIdentifier","src":"31374:3:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"31367:3:10"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":4082,"isOffset":false,"isSlot":false,"src":"31335:10:10","valueSize":1},{"declaration":4076,"isOffset":false,"isSlot":false,"src":"31218:8:10","valueSize":1},{"declaration":4063,"isOffset":false,"isSlot":false,"src":"31213:3:10","valueSize":1},{"declaration":4063,"isOffset":false,"isSlot":false,"src":"31330:3:10","valueSize":1},{"declaration":4063,"isOffset":false,"isSlot":false,"src":"31374:3:10","valueSize":1},{"declaration":4060,"isOffset":false,"isSlot":false,"src":"31367:3:10","valueSize":1}],"id":4087,"nodeType":"InlineAssembly","src":"31079:308:10"}]},"documentation":{"id":4054,"nodeType":"StructuredDocumentation","src":"30475:169:10","text":" @notice          copies all views, joins them into a new bytearray.\n @param memViews  The views\n @return          ret - The new byte array"},"id":4089,"implemented":true,"kind":"function","modifiers":[],"name":"join","nodeType":"FunctionDefinition","parameters":{"id":4058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4057,"mutability":"mutable","name":"memViews","nodeType":"VariableDeclaration","scope":4089,"src":"30663:25:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_memory_ptr","typeString":"bytes29[]"},"typeName":{"baseType":{"id":4055,"name":"bytes29","nodeType":"ElementaryTypeName","src":"30663:7:10","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":4056,"nodeType":"ArrayTypeName","src":"30663:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_storage_ptr","typeString":"bytes29[]"}},"visibility":"internal"}],"src":"30662:27:10"},"returnParameters":{"id":4061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4060,"mutability":"mutable","name":"ret","nodeType":"VariableDeclaration","scope":4089,"src":"30713:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4059,"name":"bytes","nodeType":"ElementaryTypeName","src":"30713:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"30712:18:10"},"scope":4090,"src":"30649:744:10","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4091,"src":"153:31242:10"}],"src":"46:31349:10"},"id":10}},"contracts":{"@openzeppelin/contracts-0.7/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-0.7/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-0.7/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"@openzeppelin/contracts-0.7/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}"}},"@openzeppelin/contracts-0.7/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122009eee13351b6ec6deadbcc676e284a9e45b6de97b20da0b1d83b17c65f48cccd64736f6c63430007060033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0xEE 0xE1 CALLER MLOAD 0xB6 0xEC PUSH14 0xEADBCC676E284A9E45B6DE97B20D LOG0 0xB1 0xD8 EXTCODESIZE OR 0xC6 0x5F 0x48 0xCC 0xCD PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ","sourceMap":"272:3633:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122009eee13351b6ec6deadbcc676e284a9e45b6de97b20da0b1d83b17c65f48cccd64736f6c63430007060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0xEE 0xE1 CALLER MLOAD 0xB6 0xEC PUSH14 0xEADBCC676E284A9E45B6DE97B20D LOG0 0xB1 0xD8 EXTCODESIZE OR 0xC6 0x5F 0x48 0xCC 0xCD PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ","sourceMap":"272:3633:1:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-0.7/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-0.7/cryptography/ECDSA.sol\":{\"keccak256\":\"0x94c4719c16ffb96dd3cdc68f6fbf78105153018adbf382241821e8188e6a4bd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33390c907a31dd8961949b0fa1b9557781c81024231f607f6f97b203746ebf60\",\"dweb:/ipfs/QmSdRfWx8tsa2Phm23qtNGTDUek2BphzwyxuqKf3AEszL9\"]}},\"version\":1}"}},"@openzeppelin/contracts-0.7/math/SafeMath.sol":{"SafeMath":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202383408520b892276e96c986b292fa4ced28a8b0bc8cf511b02accbd49ecc84d64736f6c63430007060033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 DUP4 BLOCKHASH DUP6 KECCAK256 0xB8 SWAP3 0x27 PUSH15 0x96C986B292FA4CED28A8B0BC8CF511 0xB0 0x2A 0xCC 0xBD 0x49 0xEC 0xC8 0x4D PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ","sourceMap":"630:6594:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202383408520b892276e96c986b292fa4ced28a8b0bc8cf511b02accbd49ecc84d64736f6c63430007060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 DUP4 BLOCKHASH DUP6 KECCAK256 0xB8 SWAP3 0x27 PUSH15 0x96C986B292FA4CED28A8B0BC8CF511 0xB0 0x2A 0xCC 0xBD 0x49 0xEC 0xC8 0x4D PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ","sourceMap":"630:6594:2:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-0.7/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-0.7/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}"}},"@openzeppelin/contracts-0.7/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-0.7/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-0.7/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]}},\"version\":1}"}},"@openzeppelin/contracts-0.7/token/ERC20/SafeERC20.sol":{"SafeERC20":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220df7a95ce8d888a76cfa1a4d5e6b3a91c4d197c61f4cbd74ab39e89ec5ab7bdac64736f6c63430007060033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF PUSH27 0x95CE8D888A76CFA1A4D5E6B3A91C4D197C61F4CBD74AB39E89EC5A 0xB7 0xBD 0xAC PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ","sourceMap":"616:3104:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220df7a95ce8d888a76cfa1a4d5e6b3a91c4d197c61f4cbd74ab39e89ec5ab7bdac64736f6c63430007060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF PUSH27 0x95CE8D888A76CFA1A4D5E6B3A91C4D197C61F4CBD74AB39E89EC5A 0xB7 0xBD 0xAC PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ","sourceMap":"616:3104:4:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-0.7/token/ERC20/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-0.7/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts-0.7/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts-0.7/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"@openzeppelin/contracts-0.7/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]}},\"version\":1}"}},"@openzeppelin/contracts-0.7/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208837351db93b74c3a2e591328c95e40d5bf502bd345a141de1bff6299e53d94964736f6c63430007060033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 CALLDATACOPY CALLDATALOAD SAR 0xB9 EXTCODESIZE PUSH21 0xC3A2E591328C95E40D5BF502BD345A141DE1BFF629 SWAP15 MSTORE8 0xD9 0x49 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ","sourceMap":"134:7684:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208837351db93b74c3a2e591328c95e40d5bf502bd345a141de1bff6299e53d94964736f6c63430007060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 CALLDATACOPY CALLDATALOAD SAR 0xB9 EXTCODESIZE PUSH21 0xC3A2E591328C95E40D5BF502BD345A141DE1BFF629 SWAP15 MSTORE8 0xD9 0x49 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ","sourceMap":"134:7684:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-0.7/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-0.7/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]}},\"version\":1}"}},"@openzeppelin/contracts-0.7/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-0.7/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-0.7/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}"}},"contracts/BurnMessage.sol":{"BurnMessage":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b59ddba24fd7ab100ef46a88cfa0256125bd6eccbba6f424cc1a80dbb3a3263364736f6c63430007060033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 SWAP14 0xDB LOG2 0x4F 0xD7 0xAB LT 0xE DELEGATECALL PUSH11 0x88CFA0256125BD6ECCBBA6 DELEGATECALL 0x24 0xCC BYTE DUP1 0xDB 0xB3 LOG3 0x26 CALLER PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ","sourceMap":"1112:3449:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b59ddba24fd7ab100ef46a88cfa0256125bd6eccbba6f424cc1a80dbb3a3263364736f6c63430007060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 SWAP14 0xDB LOG2 0x4F 0xD7 0xAB LT 0xE DELEGATECALL PUSH11 0x88CFA0256125BD6ECCBBA6 DELEGATECALL 0x24 0xCC BYTE DUP1 0xDB 0xB3 LOG3 0x26 CALLER PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ","sourceMap":"1112:3449:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"BurnMessage format: Field                 Bytes      Type       Index version               4          uint32     0 burnToken             32         bytes32    4 mintRecipient         32         bytes32    36 amount                32         uint256    68 messageSender         32         bytes32    100*\",\"kind\":\"dev\",\"methods\":{},\"title\":\"BurnMessage Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Library for formatted BurnMessages used by TokenMessenger.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BurnMessage.sol\":\"BurnMessage\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-0.7/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"contracts/BurnMessage.sol\":{\"keccak256\":\"0x40cf202924a977c7212a57b78f6d9d53f3c105ed4af4cd56faeface8cb6d29c0\",\"urls\":[\"bzz-raw://3a6d819b5e6f0f2b5de115e58c28cb545a2c53c5ee747d72bb2465454b68a0bc\",\"dweb:/ipfs/QmS4cBTLz38t93PexrsA8DPXikig1EoRoABQVBsrFVZmcu\"]},\"contracts/TypedMemView.sol\":{\"keccak256\":\"0xb095aeb02f2ed3514908f9e38c5dff5cb19fdc67ca1bf2a2ff564b776221f676\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6eec64cc71363465b91eb896e9ace7c7431de04105cedc554c4d72f1c1a44cee\",\"dweb:/ipfs/QmQzXYyGnaUtg3i1hJNvo7XnoejnXrSAds6g8YYY3hhZ1c\"]}},\"version\":1}"}},"contracts/BurnMessageV2.sol":{"BurnMessageV2":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080a63277b4d855c74511bd5cbb4fefecb843d1e891fedcd33cd62a0e1784f16964736f6c63430007060033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0xA6 ORIGIN PUSH24 0xB4D855C74511BD5CBB4FEFECB843D1E891FEDCD33CD62A0E OR DUP5 CALL PUSH10 0x64736F6C634300070600 CALLER ","sourceMap":"1539:3843:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080a63277b4d855c74511bd5cbb4fefecb843d1e891fedcd33cd62a0e1784f16964736f6c63430007060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0xA6 ORIGIN PUSH24 0xB4D855C74511BD5CBB4FEFECB843D1E891FEDCD33CD62A0E OR DUP5 CALL PUSH10 0x64736F6C634300070600 CALLER ","sourceMap":"1539:3843:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"BurnMessageV2 format: Field                 Bytes      Type       Index version               4          uint32     0 burnToken             32         bytes32    4 mintRecipient         32         bytes32    36 amount                32         uint256    68 messageSender         32         bytes32    100 maxFee                32         uint256    132 feeExecuted           32         uint256    164 expirationBlock       32         uint256    196 hookData              dynamic    bytes      228Additions from v1: - maxFee - feeExecuted - expirationBlock - hookData*\",\"kind\":\"dev\",\"methods\":{},\"title\":\"BurnMessageV2 Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Library for formatted V2 BurnMessages used by TokenMessengerV2.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BurnMessageV2.sol\":\"BurnMessageV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-0.7/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"contracts/BurnMessage.sol\":{\"keccak256\":\"0x40cf202924a977c7212a57b78f6d9d53f3c105ed4af4cd56faeface8cb6d29c0\",\"urls\":[\"bzz-raw://3a6d819b5e6f0f2b5de115e58c28cb545a2c53c5ee747d72bb2465454b68a0bc\",\"dweb:/ipfs/QmS4cBTLz38t93PexrsA8DPXikig1EoRoABQVBsrFVZmcu\"]},\"contracts/BurnMessageV2.sol\":{\"keccak256\":\"0x58e5eca0dde7e8b5bccae7c3f703930a89411e7267b153dee4b3a8da552fe2c5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://79294f6b0369066e43d36bf37e4412739ebdd8889c4a74ae46af7dc8bd37599f\",\"dweb:/ipfs/QmNRAUzdG13gshkPTYakEybpyWCqyeajniDCCQnBDjNwbV\"]},\"contracts/TypedMemView.sol\":{\"keccak256\":\"0xb095aeb02f2ed3514908f9e38c5dff5cb19fdc67ca1bf2a2ff564b776221f676\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6eec64cc71363465b91eb896e9ace7c7431de04105cedc554c4d72f1c1a44cee\",\"dweb:/ipfs/QmQzXYyGnaUtg3i1hJNvo7XnoejnXrSAds6g8YYY3hhZ1c\"]}},\"version\":1}"}},"contracts/ReliefPools.sol":{"IMessageHandlerV2":{"abi":[{"inputs":[{"internalType":"uint32","name":"sourceDomain","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint32","name":"finalityThresholdExecuted","type":"uint32"},{"internalType":"bytes","name":"messageBody","type":"bytes"}],"name":"handleReceiveFinalizedMessage","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"sourceDomain","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint32","name":"finalityThresholdExecuted","type":"uint32"},{"internalType":"bytes","name":"messageBody","type":"bytes"}],"name":"handleReceiveUnfinalizedMessage","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"handleReceiveFinalizedMessage(uint32,bytes32,uint32,bytes)":"11cffb67","handleReceiveUnfinalizedMessage(uint32,bytes32,uint32,bytes)":"7c92f219"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"sourceDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"finalityThresholdExecuted\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"}],\"name\":\"handleReceiveFinalizedMessage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"sourceDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"finalityThresholdExecuted\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"}],\"name\":\"handleReceiveUnfinalizedMessage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"handleReceiveUnfinalizedMessage(uint32,bytes32,uint32,bytes)\":{\"details\":\"Unfinalized messages have finality threshold values less than 2000\",\"params\":{\"finalityThresholdExecuted\":\"The finality threshold at which the message was attested to\",\"messageBody\":\"The raw bytes of the message body\",\"sender\":\"The sender of the message\",\"sourceDomain\":\"The source domain of the message\"},\"returns\":{\"_0\":\"success True, if successful; false, if not.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"handleReceiveUnfinalizedMessage(uint32,bytes32,uint32,bytes)\":{\"notice\":\"Handles an incoming unfinalized message from an IReceiverV2\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ReliefPools.sol\":\"IMessageHandlerV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-0.7/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"@openzeppelin/contracts-0.7/cryptography/ECDSA.sol\":{\"keccak256\":\"0x94c4719c16ffb96dd3cdc68f6fbf78105153018adbf382241821e8188e6a4bd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33390c907a31dd8961949b0fa1b9557781c81024231f607f6f97b203746ebf60\",\"dweb:/ipfs/QmSdRfWx8tsa2Phm23qtNGTDUek2BphzwyxuqKf3AEszL9\"]},\"@openzeppelin/contracts-0.7/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts-0.7/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts-0.7/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"@openzeppelin/contracts-0.7/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"@openzeppelin/contracts-0.7/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"contracts/BurnMessage.sol\":{\"keccak256\":\"0x40cf202924a977c7212a57b78f6d9d53f3c105ed4af4cd56faeface8cb6d29c0\",\"urls\":[\"bzz-raw://3a6d819b5e6f0f2b5de115e58c28cb545a2c53c5ee747d72bb2465454b68a0bc\",\"dweb:/ipfs/QmS4cBTLz38t93PexrsA8DPXikig1EoRoABQVBsrFVZmcu\"]},\"contracts/BurnMessageV2.sol\":{\"keccak256\":\"0x58e5eca0dde7e8b5bccae7c3f703930a89411e7267b153dee4b3a8da552fe2c5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://79294f6b0369066e43d36bf37e4412739ebdd8889c4a74ae46af7dc8bd37599f\",\"dweb:/ipfs/QmNRAUzdG13gshkPTYakEybpyWCqyeajniDCCQnBDjNwbV\"]},\"contracts/ReliefPools.sol\":{\"keccak256\":\"0xdae2a86c189ff4536df7dc81ded4bce6c4880902b903b3c75d5d89d2e864e092\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5e6cca95a790e5c081570f210ec9fde448e8d0461002f3bb09469a061cff43da\",\"dweb:/ipfs/QmY5GLDeFRVYUNbwh9i8ccnBfMEaMQwrePHBPrAzJxL1iS\"]},\"contracts/TypedMemView.sol\":{\"keccak256\":\"0xb095aeb02f2ed3514908f9e38c5dff5cb19fdc67ca1bf2a2ff564b776221f676\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6eec64cc71363465b91eb896e9ace7c7431de04105cedc554c4d72f1c1a44cee\",\"dweb:/ipfs/QmQzXYyGnaUtg3i1hJNvo7XnoejnXrSAds6g8YYY3hhZ1c\"]}},\"version\":1}"},"ReliefPools":{"abi":[{"inputs":[{"internalType":"address","name":"_adminAddress","type":"address"},{"internalType":"address","name":"_usdcToken","type":"address"},{"internalType":"address","name":"_cctpMessageTransmitter","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"poolId","type":"uint256"},{"indexed":true,"internalType":"address","name":"donor","type":"address"},{"indexed":false,"internalType":"uint32","name":"sourceDomain","type":"uint32"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"},{"indexed":false,"internalType":"string","name":"location","type":"string"}],"name":"DonationMade","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"poolId","type":"uint256"},{"indexed":true,"internalType":"address","name":"claimer","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"nullifier","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"userIdentifier","type":"uint256"},{"indexed":false,"internalType":"string","name":"nationality","type":"string"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"FundsClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"poolId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isActive","type":"bool"}],"name":"PoolStatusChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"poolId","type":"uint256"},{"indexed":false,"internalType":"enum ReliefPools.DisasterTypeEnum","name":"disasterType","type":"uint8"},{"indexed":false,"internalType":"enum ReliefPools.ClassificationEnum","name":"classification","type":"uint8"},{"indexed":false,"internalType":"string","name":"nationalityRequired","type":"string"},{"indexed":false,"internalType":"uint256","name":"allocatedFundsPerPerson","type":"uint256"}],"name":"ReliefPoolCreated","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"VERIFICATION_MESSAGE_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"sourceDomain","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"bytes","name":"messageBody","type":"bytes"}],"name":"_processCrossChainDonation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"adminAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"cctpMessageTransmitter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"uint256","name":"nullifier","type":"uint256"},{"internalType":"uint256","name":"userIdentifier","type":"uint256"}],"name":"checkPersonClaimedFromPool","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"uint256","name":"nullifier","type":"uint256"},{"internalType":"uint256","name":"userIdentifier","type":"uint256"},{"internalType":"string","name":"nationality","type":"string"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bytes","name":"adminSignature","type":"bytes"}],"name":"claimRelief","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"uint256","name":"nullifier","type":"uint256"},{"internalType":"uint256","name":"userIdentifier","type":"uint256"},{"internalType":"string","name":"nationality","type":"string"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"adminSignature","type":"bytes"}],"name":"claimReliefToSelf","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum ReliefPools.DisasterTypeEnum","name":"disasterType","type":"uint8"},{"internalType":"enum ReliefPools.ClassificationEnum","name":"classification","type":"uint8"},{"internalType":"string","name":"nationalityRequired","type":"string"},{"internalType":"uint256","name":"allocatedFundsPerPerson","type":"uint256"}],"name":"createReliefPool","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"location","type":"string"}],"name":"donate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"address","name":"beneficiary","type":"address"}],"name":"getBeneficiary","outputs":[{"components":[{"internalType":"uint256","name":"nullifier","type":"uint256"},{"internalType":"uint256","name":"userIdentifier","type":"uint256"},{"internalType":"address","name":"walletAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"internalType":"struct ReliefPools.Beneficiary","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getContractBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"poolId","type":"uint256"},{"internalType":"address","name":"donor","type":"address"}],"name":"getDonor","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"walletAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"isCrossChain","type":"bool"},{"internalType":"uint32","name":"sourceDomain","type":"uint32"},{"internalType":"string","name":"location","type":"string"}],"internalType":"struct ReliefPools.Donor","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"nullifier","type":"uint256"},{"internalType":"uint256","name":"userIdentifier","type":"uint256"}],"name":"getPersonClaimedPools","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"poolId","type":"uint256"}],"name":"getReliefPool","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum ReliefPools.DisasterTypeEnum","name":"disasterType","type":"uint8"},{"internalType":"enum ReliefPools.ClassificationEnum","name":"classification","type":"uint8"},{"internalType":"string","name":"nationalityRequired","type":"string"},{"internalType":"uint256","name":"allocatedFundsPerPerson","type":"uint256"},{"internalType":"uint256","name":"totalBeneficiaries","type":"uint256"},{"internalType":"uint256","name":"totalDonors","type":"uint256"},{"internalType":"uint256","name":"totalAmountClaimed","type":"uint256"},{"internalType":"uint256","name":"totalAmountDonated","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"}],"internalType":"struct ReliefPools.ReliefPool","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalPools","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"sourceDomain","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint32","name":"finalityThresholdExecuted","type":"uint32"},{"internalType":"bytes","name":"messageBody","type":"bytes"}],"name":"handleReceiveFinalizedMessage","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"sourceDomain","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint32","name":"finalityThresholdExecuted","type":"uint32"},{"internalType":"bytes","name":"messageBody","type":"bytes"}],"name":"handleReceiveUnfinalizedMessage","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"hasPersonClaimedFromPool","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"personClaimedPools","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"poolBeneficiaries","outputs":[{"internalType":"uint256","name":"nullifier","type":"uint256"},{"internalType":"uint256","name":"userIdentifier","type":"uint256"},{"internalType":"address","name":"walletAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"poolDonors","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"walletAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"isCrossChain","type":"bool"},{"internalType":"uint32","name":"sourceDomain","type":"uint32"},{"internalType":"string","name":"location","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"reliefPools","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum ReliefPools.DisasterTypeEnum","name":"disasterType","type":"uint8"},{"internalType":"enum ReliefPools.ClassificationEnum","name":"classification","type":"uint8"},{"internalType":"string","name":"nationalityRequired","type":"string"},{"internalType":"uint256","name":"allocatedFundsPerPerson","type":"uint256"},{"internalType":"uint256","name":"totalBeneficiaries","type":"uint256"},{"internalType":"uint256","name":"totalDonors","type":"uint256"},{"internalType":"uint256","name":"totalAmountClaimed","type":"uint256"},{"internalType":"uint256","name":"totalAmountDonated","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_cctpMessageTransmitter","type":"address"}],"name":"setCCTPMessageTransmitter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"poolId","type":"uint256"}],"name":"togglePoolStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"usdcToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"},{"internalType":"uint256","name":"nullifier","type":"uint256"},{"internalType":"uint256","name":"userIdentifier","type":"uint256"},{"internalType":"string","name":"nationality","type":"string"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"adminSignature","type":"bytes"}],"name":"verifyAdminSignature","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1111:11","statements":[{"nodeType":"YulBlock","src":"6:3:11","statements":[]},{"body":{"nodeType":"YulBlock","src":"76:117:11","statements":[{"nodeType":"YulAssignment","src":"86:22:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"101:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"95:5:11"},"nodeType":"YulFunctionCall","src":"95:13:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"86:5:11"}]},{"body":{"nodeType":"YulBlock","src":"171:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"180:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"183:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"173:6:11"},"nodeType":"YulFunctionCall","src":"173:12:11"},"nodeType":"YulExpressionStatement","src":"173:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"130:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"141:5:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"156:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"161:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"152:3:11"},"nodeType":"YulFunctionCall","src":"152:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"165:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"148:3:11"},"nodeType":"YulFunctionCall","src":"148:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"137:3:11"},"nodeType":"YulFunctionCall","src":"137:31:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"127:2:11"},"nodeType":"YulFunctionCall","src":"127:42:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"120:6:11"},"nodeType":"YulFunctionCall","src":"120:50:11"},"nodeType":"YulIf","src":"117:2:11"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"55:6:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"66:5:11","type":""}],"src":"14:179:11"},{"body":{"nodeType":"YulBlock","src":"313:279:11","statements":[{"body":{"nodeType":"YulBlock","src":"359:26:11","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"368:6:11"},{"name":"value0","nodeType":"YulIdentifier","src":"376:6:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"361:6:11"},"nodeType":"YulFunctionCall","src":"361:22:11"},"nodeType":"YulExpressionStatement","src":"361:22:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"334:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"343:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"330:3:11"},"nodeType":"YulFunctionCall","src":"330:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"355:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"326:3:11"},"nodeType":"YulFunctionCall","src":"326:32:11"},"nodeType":"YulIf","src":"323:2:11"},{"nodeType":"YulAssignment","src":"394:52:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"436:9:11"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"404:31:11"},"nodeType":"YulFunctionCall","src":"404:42:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"394:6:11"}]},{"nodeType":"YulAssignment","src":"455:61:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"501:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"512:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"497:3:11"},"nodeType":"YulFunctionCall","src":"497:18:11"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"465:31:11"},"nodeType":"YulFunctionCall","src":"465:51:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"455:6:11"}]},{"nodeType":"YulAssignment","src":"525:61:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"571:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"582:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"567:3:11"},"nodeType":"YulFunctionCall","src":"567:18:11"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"535:31:11"},"nodeType":"YulFunctionCall","src":"535:51:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"525:6:11"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"263:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"274:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"286:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"294:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"302:6:11","type":""}],"src":"198:394:11"},{"body":{"nodeType":"YulBlock","src":"820:289:11","statements":[{"nodeType":"YulAssignment","src":"830:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"842:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"853:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"838:3:11"},"nodeType":"YulFunctionCall","src":"838:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"830:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"873:9:11"},{"name":"value0","nodeType":"YulIdentifier","src":"884:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"866:6:11"},"nodeType":"YulFunctionCall","src":"866:25:11"},"nodeType":"YulExpressionStatement","src":"866:25:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"911:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"922:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"907:3:11"},"nodeType":"YulFunctionCall","src":"907:18:11"},{"name":"value1","nodeType":"YulIdentifier","src":"927:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"900:6:11"},"nodeType":"YulFunctionCall","src":"900:34:11"},"nodeType":"YulExpressionStatement","src":"900:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"954:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"965:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"950:3:11"},"nodeType":"YulFunctionCall","src":"950:18:11"},{"name":"value2","nodeType":"YulIdentifier","src":"970:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"943:6:11"},"nodeType":"YulFunctionCall","src":"943:34:11"},"nodeType":"YulExpressionStatement","src":"943:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"997:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1008:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"993:3:11"},"nodeType":"YulFunctionCall","src":"993:18:11"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"1017:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"1025:6:11","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1013:3:11"},"nodeType":"YulFunctionCall","src":"1013:19:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"986:6:11"},"nodeType":"YulFunctionCall","src":"986:47:11"},"nodeType":"YulExpressionStatement","src":"986:47:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1053:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1064:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1049:3:11"},"nodeType":"YulFunctionCall","src":"1049:19:11"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1074:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1090:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1095:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1086:3:11"},"nodeType":"YulFunctionCall","src":"1086:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"1099:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1082:3:11"},"nodeType":"YulFunctionCall","src":"1082:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1070:3:11"},"nodeType":"YulFunctionCall","src":"1070:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1042:6:11"},"nodeType":"YulFunctionCall","src":"1042:61:11"},"nodeType":"YulExpressionStatement","src":"1042:61:11"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_rational_8453_by_1_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint16_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"757:9:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"768:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"776:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"784:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"792:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"800:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"811:4:11","type":""}],"src":"597:512:11"}]},"contents":"{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := abi_decode_t_address_fromMemory(headStart)\n        value1 := abi_decode_t_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_t_address_fromMemory(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_rational_8453_by_1_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint16_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, 0xffff))\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n}","id":11,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c06040523480156200001157600080fd5b5060405162003dd438038062003dd48339810160408190526200003491620002d5565b6000620000406200019b565b600080546001600160a01b0319166001600160a01b03831690811782556040519293509160008051602062003db4833981519152908290a350600180546001600160a01b038086166001600160a01b0319928316179092556001600160601b0319606085901b166080526002805492841692909116919091179055620000c6336200019f565b604080518082018252600b81526a52656c696566506f6f6c7360a81b6020918201528151808301835260018152603160f81b90820152905162000176917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f917f3323a8070b7081e28ca423d850c49e17147e941af41daf0ad176ecf1a5481b67917fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc691612105913091016200031e565b60408051601f19818403018152919052805160209091012060a052506200034e915050565b3390565b620001a96200019b565b6001600160a01b0316620001bc620002a9565b6001600160a01b03161462000218576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166200025f5760405162461bcd60e51b815260040180806020018281038252602681526020018062003d8e6026913960400191505060405180910390fd5b600080546040516001600160a01b038085169392169160008051602062003db483398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031690565b80516001600160a01b0381168114620002d057600080fd5b919050565b600080600060608486031215620002ea578283fd5b620002f584620002b8565b92506200030560208501620002b8565b91506200031560408501620002b8565b90509250925092565b9485526020850193909352604084019190915261ffff1660608301526001600160a01b0316608082015260a00190565b60805160601c60a0516139fb620003936000398061095f5280611cd85250806104ff52806105a95280610a145280610a9e5280610e04528061100952506139fb6000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80638b29caf51161010f578063d9db6e03116100a2578063f2fde38b11610071578063f2fde38b14610433578063f594dbf414610446578063fc6f94681461046c578063feb1653214610474576101f0565b8063d9db6e03146103f2578063db5e4c7514610405578063e1a788eb14610418578063ef20c85a14610420576101f0565b80639e3079cb116100de5780639e3079cb146103af578063a8f7f995146103b7578063d0e5a743146103ca578063d3ffe67a146103ea576101f0565b80638b29caf51461036c5780638c73eb041461037f5780638da5cb5b146103875780638e09727e1461038f576101f0565b80633b12190211610187578063715018a611610156578063715018a61461031e57806373aacb00146103265780637c92f2191461034657806382e15e5114610359576101f0565b80633b121902146102cc5780635312ea8e146102df57806359b3c2d8146102f25780636f9fb98a14610316576101f0565b806319c2799f116101c357806319c2799f14610268578063216b31c11461029157806329d9b720146102a45780633644e515146102b7576101f0565b806306cc759b146101f557806311cffb671461021e57806311eac8551461023e57806316c3cdf514610253575b600080fd5b610208610203366004612d8c565b610487565b6040516102159190613449565b60405180910390f35b61023161022c366004613004565b6104f1565b604051610215919061319e565b6102466104fd565b6040516102159190613146565b610266610261366004612e57565b610521565b005b61027b610276366004612d5c565b610778565b6040516102159a999897969594939291906135eb565b61026661029f366004612d5c565b61085d565b6102316102b2366004612c61565b610942565b6102bf61095d565b60405161021591906131a9565b6102316102da366004612e36565b610981565b6102666102ed366004612d5c565b6109a1565b610305610300366004612d8c565b610a40565b604051610215959493929190613658565b6102bf610a84565b610266610b28565b610339610334366004612e36565b610bd4565b604051610215919061315a565b610231610354366004613004565b610c37565b610266610367366004612ed0565b610ccc565b6102bf61037a366004612cee565b61109f565b6102466112d8565b6102466112e7565b6103a261039d366004612d5c565b6112f6565b60405161021591906134ef565b6102bf61144d565b6102666103c5366004612f68565b611453565b6103dd6103d8366004612d8c565b6114bc565b6040516102159190613487565b6102bf6115d1565b610266610400366004612c47565b6115d7565b610266610413366004612fac565b61165b565b6102bf6119a6565b61023161042e366004612ea5565b6119ca565b610266610441366004612c47565b6119ef565b610459610454366004612d8c565b611af1565b6040516102159796959493929190613597565b610246611bd3565b6102bf610482366004612e36565b611be2565b61048f612a07565b5060009182526005602090815260408084206001600160a01b039384168552825292839020835160a081018552815481526001820154928101929092526002810154909216928101929092526003810154606083015260040154608082015290565b60015b95945050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000838152600460205260409020805484146105585760405162461bcd60e51b815260040161054f90613320565b60405180910390fd5b600881015460ff1661057c5760405162461bcd60e51b815260040161054f906133a4565b6000831161059c5760405162461bcd60e51b815260040161054f906132cf565b6105d16001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333086611c13565b80600501600081548092919060010191905055508281600701600082825401925050819055506040518060e0016040528082600501548152602001336001600160a01b03168152602001848152602001428152602001600015158152602001600663ffffffff16815260200183815250600660008681526020019081526020016000206000336001600160a01b03166001600160a01b031681526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555060a08201518160040160016101000a81548163ffffffff021916908363ffffffff16021790555060c0820151816005019080519060200190610725929190612a3f565b50905050336001600160a01b0316847f743501122ba2cd9590984350a2076553271a243e2b9de8617a802d7c7af7d301600686428760405161076a9493929190613221565b60405180910390a350505050565b60046020908152600091825260409182902080546001808301546002808501805488516101009582161586026000190190911692909204601f8101889004880283018801909852878252939660ff8084169794909304909216949390929091908301828280156108295780601f106107fe57610100808354040283529160200191610829565b820191906000526020600020905b81548152906001019060200180831161080c57829003601f168201915b5050506003840154600485015460058601546006870154600788015460089098015496979396929550909350919060ff168a565b610865611c73565b6001600160a01b03166108766112e7565b6001600160a01b0316146108bf576040805162461bcd60e51b815260206004820181905260248201526000805160206138ba833981519152604482015290519081900360640190fd5b6000818152600460205260409020805482146108ed5760405162461bcd60e51b815260040161054f90613320565b60088101805460ff19811660ff91821615179182905560405184927fb3c3c605d1520cd5bf41301dd5c04929e0ff021b02a10ea259b5a5b2d521a29c926109369291169061319e565b60405180910390a25050565b6000610952878787878787611c77565b979650505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600760209081526000928352604080842090915290825290205460ff1681565b6109a9611c73565b6001600160a01b03166109ba6112e7565b6001600160a01b031614610a03576040805162461bcd60e51b815260206004820181905260248201526000805160206138ba833981519152604482015290519081900360640190fd5b600154610a3d906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116911683611d4e565b50565b600560209081526000928352604080842090915290825290208054600182015460028301546003840154600490940154929391926001600160a01b03909116919085565b6040516370a0823160e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190610ad3903090600401613146565b60206040518083038186803b158015610aeb57600080fd5b505afa158015610aff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b239190612d74565b905090565b610b30611c73565b6001600160a01b0316610b416112e7565b6001600160a01b031614610b8a576040805162461bcd60e51b815260206004820181905260248201526000805160206138ba833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600081815260086020908152604091829020805483518184028101840190945280845260609392830182828015610c2a57602002820191906000526020600020905b815481526020019060010190808311610c16575b5050505050905092915050565b6002546000906001600160a01b03163314610c645760405162461bcd60e51b815260040161054f9061341d565b60405163db5e4c7560e01b8152309063db5e4c7590610c8d908990899088908890600401613712565b600060405180830381600087803b158015610ca757600080fd5b505af1925050508015610cb8575060015b610cc4575060006104f4565b5060016104f4565b600087815260046020526040902080548814610cfa5760405162461bcd60e51b815260040161054f90613320565b600881015460ff16610d1e5760405162461bcd60e51b815260040161054f906133a4565b600088815260076020908152604080832089845290915290205460ff1615610d585760405162461bcd60e51b815260040161054f906133ca565b6001600160a01b038316610d7e5760405162461bcd60e51b815260040161054f906132f6565b80600201604051610d8f91906130bb565b6040518091039020858051906020012014610dbc5760405162461bcd60e51b815260040161054f9061324c565b610dca338888888887611c77565b610de65760405162461bcd60e51b815260040161054f90613279565b60038101546040516370a0823160e01b815281906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190610e39903090600401613146565b60206040518083038186803b158015610e5157600080fd5b505afa158015610e65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e899190612d74565b1015610ea75760405162461bcd60e51b815260040161054f906133f2565b81600401600081548092919060010191905055508082600601600082825401925050819055506040518060a00160405280898152602001888152602001856001600160a01b0316815260200182815260200142815250600560008b81526020019081526020016000206000866001600160a01b03166001600160a01b03168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160030155608082015181600401559050506001600760008b8152602001908152602001600020600089815260200190815260200160002060006101000a81548160ff0219169083151502179055506008600088815260200190815260200160002089908060018154018082558091505060019003906000526020600020016000909190919091505561104084827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611d4e9092919063ffffffff16565b836001600160a01b0316336001600160a01b03168a7f5f6d78d5d398fbde6899ed8b8490a27ae6f7910869243d2a50b6d94b71c6ca2b8b8b8b874260405161108c959493929190613684565b60405180910390a4505050505050505050565b60006110a9611c73565b6001600160a01b03166110ba6112e7565b6001600160a01b031614611103576040805162461bcd60e51b815260206004820181905260248201526000805160206138ba833981519152604482015290519081900360640190fd5b60008351116111245760405162461bcd60e51b815260040161054f906132a3565b600082116111445760405162461bcd60e51b815260040161054f906132cf565b6003805460018101825560408051610140810190915281815290916020820190889081111561116f57fe5b815260200186600181111561118057fe5b81526020018581526020018481526020016000815260200160008152602001600081526020016000815260200160011515815250600460008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff021916908360038111156111f557fe5b021790555060408201518160010160016101000a81548160ff0219169083600181111561121e57fe5b02179055506060820151805161123e916002840191602090910190612a3f565b506080820151600382015560a0820151600482015560c0820151600582015560e082015160068201556101008201516007820155610120909101516008909101805460ff191691151591909117905560405181907fa359134b476f4b3e621ad56f265a9173e1d6890866fc0250caa7e37f2b55f60c906112c59089908990899089906131e3565b60405180910390a290505b949350505050565b6002546001600160a01b031681565b6000546001600160a01b031690565b6112fe612acb565b60008281526004602090815260409182902082516101408101909352805483526001810154909183019060ff16600381111561133657fe5b600381111561134157fe5b81526020016001820160019054906101000a900460ff16600181111561136357fe5b600181111561136e57fe5b8152600282810180546040805160206001841615610100026000190190931694909404601f810183900483028501830190915280845293810193908301828280156113fa5780601f106113cf576101008083540402835291602001916113fa565b820191906000526020600020905b8154815290600101906020018083116113dd57829003601f168201915b505050918352505060038201546020820152600482015460408201526005820154606082015260068201546080820152600782015460a082015260089091015460ff16151560c09091015290505b919050565b60035481565b6040516382e15e5160e01b815230906382e15e5190611482908990899089908990899033908a906004016136b7565b600060405180830381600087803b15801561149c57600080fd5b505af11580156114b0573d6000803e3d6000fd5b50505050505050505050565b6114c4612b21565b60008381526006602090815260408083206001600160a01b03868116855290835292819020815160e08101835281548152600180830154909516818501526002808301548285015260038301546060830152600483015460ff8116151560808401526101009081900463ffffffff1660a08401526005840180548651988116159092026000190190911691909104601f81018690048602870186019094528386529094919360c0860193908301828280156115c05780601f10611595576101008083540402835291602001916115c0565b820191906000526020600020905b8154815290600101906020018083116115a357829003601f168201915b505050505081525050905092915050565b60035490565b6115df611c73565b6001600160a01b03166115f06112e7565b6001600160a01b031614611639576040805162461bcd60e51b815260206004820181905260248201526000805160206138ba833981519152604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b33301461167a5760405162461bcd60e51b815260040161054f90613345565b60006116c0600084848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293925050611da59050565b90506116d162ffffff198216611dc0565b60006116e262ffffff198316611e81565b905060006116f562ffffff198316611eb9565b6001600160601b03161161171b5760405162461bcd60e51b815260040161054f90613375565b600061172c62ffffff198316611ec8565b9050600080828060200190518101906117459190612db7565b91509150600061175a8662ffffff1916611f07565b6000848152600460205260409020805491925090841461178c5760405162461bcd60e51b815260040161054f90613320565b600881015460ff166117b05760405162461bcd60e51b815260040161054f906133a4565b600082116117d05760405162461bcd60e51b815260040161054f906132cf565b806005016000815480929190600101919050555081816007016000828254019250508190555060008a60001c90506040518060e0016040528083600501548152602001826001600160a01b031681526020018481526020014281526020016001151581526020018d63ffffffff1681526020016040518060400160405280600b81526020016a31b937b9b996b1b430b4b760a91b815250815250600660008781526020019081526020016000206000836001600160a01b03166001600160a01b031681526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555060a08201518160040160016101000a81548163ffffffff021916908363ffffffff16021790555060c082015181600501908051906020019061194e929190612a3f565b50905050806001600160a01b0316857f743501122ba2cd9590984350a2076553271a243e2b9de8617a802d7c7af7d3018e864260405161199093929190613755565b60405180910390a3505050505050505050505050565b7f8db8d84faf8b2365d4ffd175c1a5bf60a3c3bb8fd65fb126c9bbc39786d11da781565b600083815260076020908152604080832084845290915290205460ff165b9392505050565b6119f7611c73565b6001600160a01b0316611a086112e7565b6001600160a01b031614611a51576040805162461bcd60e51b815260206004820181905260248201526000805160206138ba833981519152604482015290519081900360640190fd5b6001600160a01b038116611a965760405162461bcd60e51b81526004018080602001828103825260268152602001806138096026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60066020908152600092835260408084208252918352918190208054600180830154600280850154600386015460048701546005880180548a516101009882161589026000190190911695909504601f81018c90048c0286018c01909a5289855296996001600160a01b03909516989297919660ff82169690910463ffffffff16949193929091830182828015611bc95780601f10611b9e57610100808354040283529160200191611bc9565b820191906000526020600020905b815481529060010190602001808311611bac57829003601f168201915b5050505050905087565b6001546001600160a01b031681565b60086020528160005260406000208181548110611bfe57600080fd5b90600052602060002001600091509150505481565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611c6d908590611f18565b50505050565b3390565b6000807f8db8d84faf8b2365d4ffd175c1a5bf60a3c3bb8fd65fb126c9bbc39786d11da7888888888051906020012088604051602001611cbc969594939291906131b2565b60405160208183030381529060405280519060200120905060007f000000000000000000000000000000000000000000000000000000000000000082604051602001611d0992919061312b565b60408051601f19818403018152919052805160209091012090506000611d2f8286611fc9565b6001546001600160a01b039081169116149a9950505050505050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611da0908490611f18565b505050565b8151600090602084016104f464ffffffffff85168284612049565b611dcf62ffffff198216612083565b611e14576040805162461bcd60e51b81526020600482015260116024820152704d616c666f726d6564206d65737361676560781b604482015290519081900360640190fd5b60e4611e2562ffffff198316611eb9565b6001600160601b03161015610a3d576040805162461bcd60e51b815260206004820152601f60248201527f496e76616c6964206275726e206d6573736167653a20746f6f2073686f727400604482015290519081900360640190fd5b6000611eb360e480611e9862ffffff198616611eb9565b62ffffff19861692916001600160601b0391031660006120c0565b92915050565b60181c6001600160601b031690565b6060600080611ed684611eb9565b6001600160601b031690506040519150819250611ef68483602001612125565b508181016020016040529052919050565b6000611eb362ffffff198316612256565b6000611f6d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661226b9092919063ffffffff16565b805190915015611da057808060200190516020811015611f8c57600080fd5b5051611da05760405162461bcd60e51b815260040180806020018281038252602a815260200180613914602a913960400191505060405180910390fd5b60008151604114612021576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a61203f8682858561227a565b9695505050505050565b60008061205684846123ef565b9050604051811115612066575060005b806120785762ffffff199150506119e8565b6104f4858585612449565b600061208e8261245c565b64ffffffffff1664ffffffffff14156120a957506000611448565b60006120b483612462565b60405110159392505050565b6000806120cc86612487565b6001600160601b031690506120e086612462565b6120f4856120ee84896123ef565b906123ef565b11156121075762ffffff199150506112d0565b61211181866123ef565b905061203f8364ffffffffff168286612049565b600061213083612496565b61216b5760405162461bcd60e51b815260040180806020018281038252602881526020018061393e6028913960400191505060405180910390fd5b61217483612083565b6121af5760405162461bcd60e51b815260040180806020018281038252602b815260200180613966602b913960400191505060405180910390fd5b60006121ba84611eb9565b6001600160601b0316905060006121d085612487565b6001600160601b031690506000806040519150858211156121f15760206060fd5b8386858560045afa90508061223c576040805162461bcd60e51b815260206004820152600c60248201526b6964656e74697479204f4f4760a01b604482015290519081900360640190fd5b6109526122488861245c565b64ffffffffff168786612449565b6000611eb362ffffff198316604460206124a8565b60606112d084846000856124c9565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156122db5760405162461bcd60e51b815260040180806020018281038252602281526020018061382f6022913960400191505060405180910390fd5b8360ff16601b14806122f057508360ff16601c145b61232b5760405162461bcd60e51b81526004018080602001828103825260228152602001806138986022913960400191505060405180910390fd5b600060018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015612387573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166104f4576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b6000828201838110156119e8576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b606092831b9190911790911b1760181b90565b60d81c90565b600061246d82611eb9565b61247683612487565b016001600160601b03169050919050565b60781c6001600160601b031690565b60006124a182612619565b1592915050565b60008160200360080260ff166124bf858585612625565b901c949350505050565b60608247101561250a5760405162461bcd60e51b81526004018080602001828103825260268152602001806138516026913960400191505060405180910390fd5b61251385612788565b612564576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b602083106125a25780518252601f199092019160209182019101612583565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612604576040519150601f19603f3d011682016040523d82523d6000602084013e612609565b606091505b509150915061095282828661278e565b62ffffff199081161490565b600060ff8216612637575060006119e8565b61264084611eb9565b6001600160601b03166126568460ff85166123ef565b11156127115761268d61266885612487565b6001600160601b031661267a86611eb9565b6001600160601b0316858560ff166127f4565b60405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156126d65781810151838201526020016126be565b50505050905090810190601f1680156127035780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60208260ff1611156127545760405162461bcd60e51b815260040180806020018281038252603a8152602001806138da603a913960400191505060405180910390fd5b60088202600061276386612487565b6001600160601b031690506000612779836128e7565b91909501511695945050505050565b3b151590565b6060831561279d5750816119e8565b8251156127ad5782518084602001fd5b60405162461bcd60e51b81526020600482018181528451602484015284518593919283926044019190850190808383600083156126d65781810151838201526020016126be565b60606000612801866128f6565b915050600061280f866128f6565b915050600061281d866128f6565b915050600061282b866128f6565b915050838383836040516020018080613991603591396001600160d01b031960d087811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b84015286901b16604a820152605001602161387782396001600160d01b031960d094851b811660218301526e040eed2e8d040d8cadccee8d04060f608b1b60278301529290931b909116603683015250601760f91b603c82015260408051601d818403018152603d90920190529b9a5050505050505050505050565b600160ff1b6000199091011d90565b600080601f5b600f8160ff1611156129405760ff600882021684901c61291b8161298e565b61ffff16841793508160ff1660101461293657601084901b93505b50600019016128fc565b50600f5b60ff8160ff1610156129885760ff600882021684901c6129638161298e565b61ffff16831792508160ff1660001461297e57601083901b92505b5060001901612944565b50915091565b60006129a060048360ff16901c6129be565b60ff161760081b62ffff00166129b5826129be565b60ff1617919050565b6040805180820190915260108082526f181899199a1a9b1b9c1cb0b131b232b360811b6020830152600091600f841691829081106129f857fe5b016020015160f81c9392505050565b6040518060a00160405280600081526020016000815260200160006001600160a01b0316815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282612a755760008555612abb565b82601f10612a8e57805160ff1916838001178555612abb565b82800160010185558215612abb579182015b82811115612abb578251825591602001919060010190612aa0565b50612ac7929150612b6f565b5090565b604080516101408101909152600080825260208201908152602001600081526020016060815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b6040518060e001604052806000815260200160006001600160a01b031681526020016000815260200160008152602001600015158152602001600063ffffffff168152602001606081525090565b5b80821115612ac75760008155600101612b70565b80356001600160a01b038116811461144857600080fd5b60008083601f840112612bac578182fd5b50813567ffffffffffffffff811115612bc3578182fd5b602083019150836020828501011115612bdb57600080fd5b9250929050565b600082601f830112612bf2578081fd5b8135612c05612c00826137ba565b613796565b818152846020838601011115612c19578283fd5b816020850160208301379081016020019190915292915050565b803563ffffffff8116811461144857600080fd5b600060208284031215612c58578081fd5b6119e882612b84565b60008060008060008060c08789031215612c79578182fd5b612c8287612b84565b95506020870135945060408701359350606087013567ffffffffffffffff80821115612cac578384fd5b612cb88a838b01612be2565b94506080890135935060a0890135915080821115612cd4578283fd5b50612ce189828a01612be2565b9150509295509295509295565b60008060008060808587031215612d03578384fd5b843560048110612d11578485fd5b9350602085013560028110612d24578384fd5b9250604085013567ffffffffffffffff811115612d3f578283fd5b612d4b87828801612be2565b949793965093946060013593505050565b600060208284031215612d6d578081fd5b5035919050565b600060208284031215612d85578081fd5b5051919050565b60008060408385031215612d9e578182fd5b82359150612dae60208401612b84565b90509250929050565b60008060408385031215612dc9578182fd5b82519150602083015167ffffffffffffffff811115612de6578182fd5b8301601f81018513612df6578182fd5b8051612e04612c00826137ba565b818152866020838501011115612e18578384fd5b612e298260208301602086016137dc565b8093505050509250929050565b60008060408385031215612e48578182fd5b50508035926020909101359150565b600080600060608486031215612e6b578283fd5b8335925060208401359150604084013567ffffffffffffffff811115612e8f578182fd5b612e9b86828701612be2565b9150509250925092565b600080600060608486031215612eb9578081fd5b505081359360208301359350604090920135919050565b600080600080600080600060e0888a031215612eea578485fd5b873596506020880135955060408801359450606088013567ffffffffffffffff80821115612f16578283fd5b612f228b838c01612be2565b955060808a01359450612f3760a08b01612b84565b935060c08a0135915080821115612f4c578283fd5b50612f598a828b01612be2565b91505092959891949750929550565b60008060008060008060c08789031215612f80578384fd5b863595506020870135945060408701359350606087013567ffffffffffffffff80821115612cac578384fd5b60008060008060608587031215612fc1578182fd5b612fca85612c33565b935060208501359250604085013567ffffffffffffffff811115612fec578283fd5b612ff887828801612b9b565b95989497509550505050565b60008060008060006080868803121561301b578283fd5b61302486612c33565b94506020860135935061303960408701612c33565b9250606086013567ffffffffffffffff811115613054578182fd5b61306088828901612b9b565b969995985093965092949392505050565b15159052565b6000815180845261308f8160208601602086016137dc565b601f01601f19169290920160200192915050565b600281106130ad57fe5b9052565b600481106130ad57fe5b60008083546001808216600081146130da57600181146130f157613120565b60ff198316865260028304607f1686019350613120565b600283048786526020808720875b838110156131185781548a8201529085019082016130ff565b505050860193505b509195945050505050565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6020808252825182820181905260009190848201906040850190845b8181101561319257835183529284019291840191600101613176565b50909695505050505050565b901515815260200190565b90815260200190565b9586526001600160a01b0394909416602086015260408501929092526060840152608083015260a082015260c00190565b60006131ef82876130b1565b6131fc60208301866130a3565b608060408301526132106080830185613077565b905082606083015295945050505050565b600063ffffffff861682528460208301528360408301526080606083015261203f6080830184613077565b60208082526013908201527209cc2e8d2dedcc2d8d2e8f29ad2e6dac2e8c6d606b1b604082015260600190565b60208082526010908201526f496e76616c69645369676e617475726560801b604082015260600190565b602080825260129082015271496e76616c69644e6174696f6e616c69747960701b604082015260600190565b6020808252600d908201526c125b9d985b1a59105b5bdd5b9d609a1b604082015260600190565b60208082526010908201526f125b9d985b1a59149958da5c1a595b9d60821b604082015260600190565b6020808252600b908201526a125b9d985b1a59141bdbdb60aa1b604082015260600190565b602080825260169082015275496e7465726e616c2066756e6374696f6e206f6e6c7960501b604082015260600190565b602080825260159082015274139bc81a1bdbdac819185d18481c1c9bdd9a591959605a1b604082015260600190565b6020808252600c908201526b506f6f6c496e61637469766560a01b604082015260600190565b6020808252600e908201526d105b1c9958591e50db185a5b595960921b604082015260600190565b602080825260119082015270496e73756666696369656e7446756e647360781b604082015260600190565b6020808252601290820152712ab730baba3437b934bd32b221b0b63632b960711b604082015260600190565b81518152602080830151908201526040808301516001600160a01b031690820152606080830151908201526080918201519181019190915260a00190565b6000602082528251602083015260018060a01b03602084015116604083015260408301516060830152606083015160808301526080830151151560a083015263ffffffff60a08401511660c083015260c083015160e0808401526112d0610100840182613077565b60006020825282516020830152602083015161350e60408401826130b1565b50604083015161352160608401826130a3565b50606083015161014080608085015261353e610160850183613077565b9150608085015160a085015260a085015160c085015260c085015160e085015260e085015161010081818701528087015191505061012081818701528087015191505061358d82860182613071565b5090949350505050565b600088825260018060a01b0388166020830152866040830152856060830152841515608083015263ffffffff841660a083015260e060c08301526135de60e0830184613077565b9998505050505050505050565b60006101408c8352613600602084018d6130b1565b61360d604084018c6130a3565b80606084015261361f8184018b613077565b6080840199909952505060a081019590955260c085019390935260e0840191909152610100830152151561012090910152949350505050565b94855260208501939093526001600160a01b039190911660408401526060830152608082015260a00190565b600086825285602083015260a060408301526136a360a0830186613077565b606083019490945250608001529392505050565b600088825287602083015286604083015260e060608301526136dc60e0830187613077565b608083018690526001600160a01b03851660a084015282810360c08401526137048185613077565b9a9950505050505050505050565b600063ffffffff861682528460208301526060604083015282606083015282846080840137818301608090810191909152601f909201601f191601019392505050565b63ffffffff93909316835260208301919091526040820152608060608201819052600b908201526a31b937b9b996b1b430b4b760a91b60a082015260c00190565b60405181810167ffffffffffffffff811182821017156137b257fe5b604052919050565b600067ffffffffffffffff8211156137ce57fe5b50601f01601f191660200190565b60005b838110156137f75781810151838201526020016137df565b83811115611c6d575050600091015256fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345434453413a20696e76616c6964207369676e6174757265202773272076616c7565416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c2e20417474656d7074656420746f20696e646578206174206f666673657420307845434453413a20696e76616c6964207369676e6174757265202776272076616c75654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657254797065644d656d566965772f696e646578202d20417474656d7074656420746f20696e646578206d6f7265207468616e2033322062797465735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656454797065644d656d566965772f636f7079546f202d204e756c6c20706f696e74657220646572656654797065644d656d566965772f636f7079546f202d20496e76616c696420706f696e74657220646572656654797065644d656d566965772f696e646578202d204f76657272616e2074686520766965772e20536c696365206973206174203078a2646970667358221220384eeb81a97676913426c9ac4180b8cc35791ee29bc382297ca9c110ecf6b8ca64736f6c634300070600334f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573738be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3DD4 CODESIZE SUB DUP1 PUSH3 0x3DD4 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x2D5 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x40 PUSH3 0x19B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x3DB4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP6 SWAP1 SHL AND PUSH1 0x80 MSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 DUP5 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH3 0xC6 CALLER PUSH3 0x19F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH11 0x52656C696566506F6F6C73 PUSH1 0xA8 SHL PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL SWAP1 DUP3 ADD MSTORE SWAP1 MLOAD PUSH3 0x176 SWAP2 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F SWAP2 PUSH32 0x3323A8070B7081E28CA423D850C49E17147E941AF41DAF0AD176ECF1A5481B67 SWAP2 PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 SWAP2 PUSH2 0x2105 SWAP2 ADDRESS SWAP2 ADD PUSH3 0x31E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0xA0 MSTORE POP PUSH3 0x34E SWAP2 POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH3 0x1A9 PUSH3 0x19B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x1BC PUSH3 0x2A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH3 0x218 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x25F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x3D8E PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x3DB4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x2EA JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH3 0x2F5 DUP5 PUSH3 0x2B8 JUMP JUMPDEST SWAP3 POP PUSH3 0x305 PUSH1 0x20 DUP6 ADD PUSH3 0x2B8 JUMP JUMPDEST SWAP2 POP PUSH3 0x315 PUSH1 0x40 DUP6 ADD PUSH3 0x2B8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0xFFFF AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH2 0x39FB PUSH3 0x393 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x95F MSTORE DUP1 PUSH2 0x1CD8 MSTORE POP DUP1 PUSH2 0x4FF MSTORE DUP1 PUSH2 0x5A9 MSTORE DUP1 PUSH2 0xA14 MSTORE DUP1 PUSH2 0xA9E MSTORE DUP1 PUSH2 0xE04 MSTORE DUP1 PUSH2 0x1009 MSTORE POP PUSH2 0x39FB PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B29CAF5 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xD9DB6E03 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x433 JUMPI DUP1 PUSH4 0xF594DBF4 EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0xFC6F9468 EQ PUSH2 0x46C JUMPI DUP1 PUSH4 0xFEB16532 EQ PUSH2 0x474 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0xD9DB6E03 EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0xDB5E4C75 EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0xE1A788EB EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0xEF20C85A EQ PUSH2 0x420 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x9E3079CB GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x9E3079CB EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0xA8F7F995 EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0xD0E5A743 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xD3FFE67A EQ PUSH2 0x3EA JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x8B29CAF5 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x8C73EB04 EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x8E09727E EQ PUSH2 0x38F JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x3B121902 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x73AACB00 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x7C92F219 EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x82E15E51 EQ PUSH2 0x359 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x3B121902 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x59B3C2D8 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x316 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x19C2799F GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x19C2799F EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x216B31C1 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x29D9B720 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2B7 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x6CC759B EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x11CFFB67 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x11EAC855 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x16C3CDF5 EQ PUSH2 0x253 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D8C JUMP JUMPDEST PUSH2 0x487 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x3449 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x3004 JUMP JUMPDEST PUSH2 0x4F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x319E JUMP JUMPDEST PUSH2 0x246 PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x3146 JUMP JUMPDEST PUSH2 0x266 PUSH2 0x261 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E57 JUMP JUMPDEST PUSH2 0x521 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27B PUSH2 0x276 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D5C JUMP JUMPDEST PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x35EB JUMP JUMPDEST PUSH2 0x266 PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0x2D5C JUMP JUMPDEST PUSH2 0x85D JUMP JUMPDEST PUSH2 0x231 PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C61 JUMP JUMPDEST PUSH2 0x942 JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x95D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x31A9 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x2DA CALLDATASIZE PUSH1 0x4 PUSH2 0x2E36 JUMP JUMPDEST PUSH2 0x981 JUMP JUMPDEST PUSH2 0x266 PUSH2 0x2ED CALLDATASIZE PUSH1 0x4 PUSH2 0x2D5C JUMP JUMPDEST PUSH2 0x9A1 JUMP JUMPDEST PUSH2 0x305 PUSH2 0x300 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D8C JUMP JUMPDEST PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3658 JUMP JUMPDEST PUSH2 0x2BF PUSH2 0xA84 JUMP JUMPDEST PUSH2 0x266 PUSH2 0xB28 JUMP JUMPDEST PUSH2 0x339 PUSH2 0x334 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E36 JUMP JUMPDEST PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x315A JUMP JUMPDEST PUSH2 0x231 PUSH2 0x354 CALLDATASIZE PUSH1 0x4 PUSH2 0x3004 JUMP JUMPDEST PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x266 PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ED0 JUMP JUMPDEST PUSH2 0xCCC JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x37A CALLDATASIZE PUSH1 0x4 PUSH2 0x2CEE JUMP JUMPDEST PUSH2 0x109F JUMP JUMPDEST PUSH2 0x246 PUSH2 0x12D8 JUMP JUMPDEST PUSH2 0x246 PUSH2 0x12E7 JUMP JUMPDEST PUSH2 0x3A2 PUSH2 0x39D CALLDATASIZE PUSH1 0x4 PUSH2 0x2D5C JUMP JUMPDEST PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x34EF JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x144D JUMP JUMPDEST PUSH2 0x266 PUSH2 0x3C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F68 JUMP JUMPDEST PUSH2 0x1453 JUMP JUMPDEST PUSH2 0x3DD PUSH2 0x3D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D8C JUMP JUMPDEST PUSH2 0x14BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x3487 JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x266 PUSH2 0x400 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C47 JUMP JUMPDEST PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0x266 PUSH2 0x413 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FAC JUMP JUMPDEST PUSH2 0x165B JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x19A6 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x42E CALLDATASIZE PUSH1 0x4 PUSH2 0x2EA5 JUMP JUMPDEST PUSH2 0x19CA JUMP JUMPDEST PUSH2 0x266 PUSH2 0x441 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C47 JUMP JUMPDEST PUSH2 0x19EF JUMP JUMPDEST PUSH2 0x459 PUSH2 0x454 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D8C JUMP JUMPDEST PUSH2 0x1AF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3597 JUMP JUMPDEST PUSH2 0x246 PUSH2 0x1BD3 JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x482 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E36 JUMP JUMPDEST PUSH2 0x1BE2 JUMP JUMPDEST PUSH2 0x48F PUSH2 0x2A07 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP6 MSTORE DUP3 MSTORE SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0xA0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP1 SWAP3 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP5 EQ PUSH2 0x558 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x3320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x57C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x33A4 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x59C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x32CF JUMP JUMPDEST PUSH2 0x5D1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP7 PUSH2 0x1C13 JUMP JUMPDEST DUP1 PUSH1 0x5 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP DUP3 DUP2 PUSH1 0x7 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0x5 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x725 SWAP3 SWAP2 SWAP1 PUSH2 0x2A3F JUMP JUMPDEST POP SWAP1 POP POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x743501122BA2CD9590984350A2076553271A243E2B9DE8617A802D7C7AF7D301 PUSH1 0x6 DUP7 TIMESTAMP DUP8 PUSH1 0x40 MLOAD PUSH2 0x76A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3221 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP4 ADD SLOAD PUSH1 0x2 DUP1 DUP6 ADD DUP1 SLOAD DUP9 MLOAD PUSH2 0x100 SWAP6 DUP3 AND ISZERO DUP7 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP3 DIV PUSH1 0x1F DUP2 ADD DUP9 SWAP1 DIV DUP9 MUL DUP4 ADD DUP9 ADD SWAP1 SWAP9 MSTORE DUP8 DUP3 MSTORE SWAP4 SWAP7 PUSH1 0xFF DUP1 DUP5 AND SWAP8 SWAP5 SWAP1 SWAP4 DIV SWAP1 SWAP3 AND SWAP5 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x829 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7FE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x829 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x80C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 DUP9 ADD SLOAD PUSH1 0x8 SWAP1 SWAP9 ADD SLOAD SWAP7 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 SWAP1 PUSH1 0xFF AND DUP11 JUMP JUMPDEST PUSH2 0x865 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x876 PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8BF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 EQ PUSH2 0x8ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x3320 JUMP JUMPDEST PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT DUP2 AND PUSH1 0xFF SWAP2 DUP3 AND ISZERO OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP5 SWAP3 PUSH32 0xB3C3C605D1520CD5BF41301DD5C04929E0FF021B02A10EA259B5A5B2D521A29C SWAP3 PUSH2 0x936 SWAP3 SWAP2 AND SWAP1 PUSH2 0x319E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x952 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1C77 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x9A9 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9BA PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA03 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xA3D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP2 AND DUP4 PUSH2 0x1D4E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xAD3 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x3146 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAFF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB23 SWAP2 SWAP1 PUSH2 0x2D74 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB30 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB41 PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB8A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xC2A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xC16 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x341D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xDB5E4C75 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP1 PUSH4 0xDB5E4C75 SWAP1 PUSH2 0xC8D SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x3712 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCB8 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0xCC4 JUMPI POP PUSH1 0x0 PUSH2 0x4F4 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP9 EQ PUSH2 0xCFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x3320 JUMP JUMPDEST PUSH1 0x8 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0xD1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x33A4 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP10 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xD58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x33CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x32F6 JUMP JUMPDEST DUP1 PUSH1 0x2 ADD PUSH1 0x40 MLOAD PUSH2 0xD8F SWAP2 SWAP1 PUSH2 0x30BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP6 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0xDBC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x324C JUMP JUMPDEST PUSH2 0xDCA CALLER DUP9 DUP9 DUP9 DUP9 DUP8 PUSH2 0x1C77 JUMP JUMPDEST PUSH2 0xDE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x3279 JUMP JUMPDEST PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xE39 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x3146 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE65 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE89 SWAP2 SWAP1 PUSH2 0x2D74 JUMP JUMPDEST LT ISZERO PUSH2 0xEA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x33F2 JUMP JUMPDEST DUP2 PUSH1 0x4 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP DUP1 DUP3 PUSH1 0x6 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP10 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH2 0x1040 DUP5 DUP3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D4E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 PUSH32 0x5F6D78D5D398FBDE6899ED8B8490A27AE6F7910869243D2A50B6D94B71C6CA2B DUP12 DUP12 DUP12 DUP8 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x108C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A9 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10BA PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1103 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD GT PUSH2 0x1124 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x32A3 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x1144 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x32CF JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP2 MSTORE DUP2 DUP2 MSTORE SWAP1 SWAP2 PUSH1 0x20 DUP3 ADD SWAP1 DUP9 SWAP1 DUP2 GT ISZERO PUSH2 0x116F JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1180 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x11F5 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x121E JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x123E SWAP2 PUSH1 0x2 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2A3F JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x120 SWAP1 SWAP2 ADD MLOAD PUSH1 0x8 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0xA359134B476F4B3E621AD56F265A9173E1D6890866FC0250CAA7E37F2B55F60C SWAP1 PUSH2 0x12C5 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH2 0x31E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x12FE PUSH2 0x2ACB JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 DUP4 ADD SWAP1 PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1336 JUMPI INVALID JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1341 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1363 JUMPI INVALID JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x136E JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x2 DUP3 DUP2 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP4 AND SWAP5 SWAP1 SWAP5 DIV PUSH1 0x1F DUP2 ADD DUP4 SWAP1 DIV DUP4 MUL DUP6 ADD DUP4 ADD SWAP1 SWAP2 MSTORE DUP1 DUP5 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x13FA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13CF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13FA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13DD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x8 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x82E15E51 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP1 PUSH4 0x82E15E51 SWAP1 PUSH2 0x1482 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 CALLER SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x36B7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x149C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x14C4 PUSH2 0x2B21 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0xE0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD SWAP1 SWAP6 AND DUP2 DUP6 ADD MSTORE PUSH1 0x2 DUP1 DUP4 ADD SLOAD DUP3 DUP6 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x100 SWAP1 DUP2 SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x5 DUP5 ADD DUP1 SLOAD DUP7 MLOAD SWAP9 DUP2 AND ISZERO SWAP1 SWAP3 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 DIV PUSH1 0x1F DUP2 ADD DUP7 SWAP1 DIV DUP7 MUL DUP8 ADD DUP7 ADD SWAP1 SWAP5 MSTORE DUP4 DUP7 MSTORE SWAP1 SWAP5 SWAP2 SWAP4 PUSH1 0xC0 DUP7 ADD SWAP4 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x15C0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1595 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x15C0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x15A3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x15DF PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15F0 PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1639 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x167A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x3345 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16C0 PUSH1 0x0 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 SWAP3 POP POP PUSH2 0x1DA5 SWAP1 POP JUMP JUMPDEST SWAP1 POP PUSH2 0x16D1 PUSH3 0xFFFFFF NOT DUP3 AND PUSH2 0x1DC0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E2 PUSH3 0xFFFFFF NOT DUP4 AND PUSH2 0x1E81 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x16F5 PUSH3 0xFFFFFF NOT DUP4 AND PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT PUSH2 0x171B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x3375 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x172C PUSH3 0xFFFFFF NOT DUP4 AND PUSH2 0x1EC8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1745 SWAP2 SWAP1 PUSH2 0x2DB7 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x175A DUP7 PUSH3 0xFFFFFF NOT AND PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 DUP5 EQ PUSH2 0x178C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x3320 JUMP JUMPDEST PUSH1 0x8 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x17B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x33A4 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x17D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x32CF JUMP JUMPDEST DUP1 PUSH1 0x5 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP DUP2 DUP2 PUSH1 0x7 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP11 PUSH1 0x0 SHR SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH1 0x5 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP14 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x31B937B9B996B1B430B4B7 PUSH1 0xA9 SHL DUP2 MSTORE POP DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x194E SWAP3 SWAP2 SWAP1 PUSH2 0x2A3F JUMP JUMPDEST POP SWAP1 POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x743501122BA2CD9590984350A2076553271A243E2B9DE8617A802D7C7AF7D301 DUP15 DUP7 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1990 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3755 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x8DB8D84FAF8B2365D4FFD175C1A5BF60A3C3BB8FD65FB126C9BBC39786D11DA7 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x19F7 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A08 PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1A51 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1A96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3809 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP3 MSTORE SWAP2 DUP4 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP4 ADD SLOAD PUSH1 0x2 DUP1 DUP6 ADD SLOAD PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x4 DUP8 ADD SLOAD PUSH1 0x5 DUP9 ADD DUP1 SLOAD DUP11 MLOAD PUSH2 0x100 SWAP9 DUP3 AND ISZERO DUP10 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP6 SWAP1 SWAP6 DIV PUSH1 0x1F DUP2 ADD DUP13 SWAP1 DIV DUP13 MUL DUP7 ADD DUP13 ADD SWAP1 SWAP11 MSTORE DUP10 DUP6 MSTORE SWAP7 SWAP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP9 SWAP3 SWAP8 SWAP2 SWAP7 PUSH1 0xFF DUP3 AND SWAP7 SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND SWAP5 SWAP2 SWAP4 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1BC9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B9E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1BC9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1BAC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1BFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1C6D SWAP1 DUP6 SWAP1 PUSH2 0x1F18 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x8DB8D84FAF8B2365D4FFD175C1A5BF60A3C3BB8FD65FB126C9BBC39786D11DA7 DUP9 DUP9 DUP9 DUP9 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1CBC SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x31B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH32 0x0 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1D09 SWAP3 SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1D2F DUP3 DUP7 PUSH2 0x1FC9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1DA0 SWAP1 DUP5 SWAP1 PUSH2 0x1F18 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x20 DUP5 ADD PUSH2 0x4F4 PUSH5 0xFFFFFFFFFF DUP6 AND DUP3 DUP5 PUSH2 0x2049 JUMP JUMPDEST PUSH2 0x1DCF PUSH3 0xFFFFFF NOT DUP3 AND PUSH2 0x2083 JUMP JUMPDEST PUSH2 0x1E14 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4D616C666F726D6564206D657373616765 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xE4 PUSH2 0x1E25 PUSH3 0xFFFFFF NOT DUP4 AND PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT ISZERO PUSH2 0xA3D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206275726E206D6573736167653A20746F6F2073686F727400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1EB3 PUSH1 0xE4 DUP1 PUSH2 0x1E98 PUSH3 0xFFFFFF NOT DUP7 AND PUSH2 0x1EB9 JUMP JUMPDEST PUSH3 0xFFFFFF NOT DUP7 AND SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP2 SUB AND PUSH1 0x0 PUSH2 0x20C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x18 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH2 0x1ED6 DUP5 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 POP PUSH1 0x40 MLOAD SWAP2 POP DUP2 SWAP3 POP PUSH2 0x1EF6 DUP5 DUP4 PUSH1 0x20 ADD PUSH2 0x2125 JUMP JUMPDEST POP DUP2 DUP2 ADD PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP1 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB3 PUSH3 0xFFFFFF NOT DUP4 AND PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F6D DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x226B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1DA0 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1DA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3914 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x2021 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x203F DUP7 DUP3 DUP6 DUP6 PUSH2 0x227A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2056 DUP5 DUP5 PUSH2 0x23EF JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP2 GT ISZERO PUSH2 0x2066 JUMPI POP PUSH1 0x0 JUMPDEST DUP1 PUSH2 0x2078 JUMPI PUSH3 0xFFFFFF NOT SWAP2 POP POP PUSH2 0x19E8 JUMP JUMPDEST PUSH2 0x4F4 DUP6 DUP6 DUP6 PUSH2 0x2449 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x208E DUP3 PUSH2 0x245C JUMP JUMPDEST PUSH5 0xFFFFFFFFFF AND PUSH5 0xFFFFFFFFFF EQ ISZERO PUSH2 0x20A9 JUMPI POP PUSH1 0x0 PUSH2 0x1448 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20B4 DUP4 PUSH2 0x2462 JUMP JUMPDEST PUSH1 0x40 MLOAD LT ISZERO SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x20CC DUP7 PUSH2 0x2487 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 POP PUSH2 0x20E0 DUP7 PUSH2 0x2462 JUMP JUMPDEST PUSH2 0x20F4 DUP6 PUSH2 0x20EE DUP5 DUP10 PUSH2 0x23EF JUMP JUMPDEST SWAP1 PUSH2 0x23EF JUMP JUMPDEST GT ISZERO PUSH2 0x2107 JUMPI PUSH3 0xFFFFFF NOT SWAP2 POP POP PUSH2 0x12D0 JUMP JUMPDEST PUSH2 0x2111 DUP2 DUP7 PUSH2 0x23EF JUMP JUMPDEST SWAP1 POP PUSH2 0x203F DUP4 PUSH5 0xFFFFFFFFFF AND DUP3 DUP7 PUSH2 0x2049 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2130 DUP4 PUSH2 0x2496 JUMP JUMPDEST PUSH2 0x216B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x393E PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2174 DUP4 PUSH2 0x2083 JUMP JUMPDEST PUSH2 0x21AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3966 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x21BA DUP5 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 POP PUSH1 0x0 PUSH2 0x21D0 DUP6 PUSH2 0x2487 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD SWAP2 POP DUP6 DUP3 GT ISZERO PUSH2 0x21F1 JUMPI PUSH1 0x20 PUSH1 0x60 REVERT JUMPDEST DUP4 DUP7 DUP6 DUP6 PUSH1 0x4 GAS STATICCALL SWAP1 POP DUP1 PUSH2 0x223C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x6964656E74697479204F4F47 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x952 PUSH2 0x2248 DUP9 PUSH2 0x245C JUMP JUMPDEST PUSH5 0xFFFFFFFFFF AND DUP8 DUP7 PUSH2 0x2449 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB3 PUSH3 0xFFFFFF NOT DUP4 AND PUSH1 0x44 PUSH1 0x20 PUSH2 0x24A8 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x12D0 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x24C9 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP3 GT ISZERO PUSH2 0x22DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x382F PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0x22F0 JUMPI POP DUP4 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST PUSH2 0x232B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3898 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2387 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4F4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x19E8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x60 SWAP3 DUP4 SHL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SHL OR PUSH1 0x18 SHL SWAP1 JUMP JUMPDEST PUSH1 0xD8 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x246D DUP3 PUSH2 0x1EB9 JUMP JUMPDEST PUSH2 0x2476 DUP4 PUSH2 0x2487 JUMP JUMPDEST ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x78 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24A1 DUP3 PUSH2 0x2619 JUMP JUMPDEST ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH1 0xFF AND PUSH2 0x24BF DUP6 DUP6 DUP6 PUSH2 0x2625 JUMP JUMPDEST SWAP1 SHR SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x250A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3851 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2513 DUP6 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x2564 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x25A2 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2583 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2604 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2609 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x952 DUP3 DUP3 DUP7 PUSH2 0x278E JUMP JUMPDEST PUSH3 0xFFFFFF NOT SWAP1 DUP2 AND EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH2 0x2637 JUMPI POP PUSH1 0x0 PUSH2 0x19E8 JUMP JUMPDEST PUSH2 0x2640 DUP5 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x2656 DUP5 PUSH1 0xFF DUP6 AND PUSH2 0x23EF JUMP JUMPDEST GT ISZERO PUSH2 0x2711 JUMPI PUSH2 0x268D PUSH2 0x2668 DUP6 PUSH2 0x2487 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x267A DUP7 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP6 DUP6 PUSH1 0xFF AND PUSH2 0x27F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x26D6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x26BE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2703 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 PUSH1 0xFF AND GT ISZERO PUSH2 0x2754 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x38DA PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP3 MUL PUSH1 0x0 PUSH2 0x2763 DUP7 PUSH2 0x2487 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 POP PUSH1 0x0 PUSH2 0x2779 DUP4 PUSH2 0x28E7 JUMP JUMPDEST SWAP2 SWAP1 SWAP6 ADD MLOAD AND SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x279D JUMPI POP DUP2 PUSH2 0x19E8 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x27AD JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP5 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP5 MLOAD DUP6 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x26D6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x26BE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2801 DUP7 PUSH2 0x28F6 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x0 PUSH2 0x280F DUP7 PUSH2 0x28F6 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x0 PUSH2 0x281D DUP7 PUSH2 0x28F6 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x0 PUSH2 0x282B DUP7 PUSH2 0x28F6 JUMP JUMPDEST SWAP2 POP POP DUP4 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH2 0x3991 PUSH1 0x35 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT PUSH1 0xD0 DUP8 DUP2 SHL DUP3 AND PUSH1 0x35 DUP5 ADD MSTORE PUSH15 0x40EED2E8D040D8CADCCEE8D04060F PUSH1 0x8B SHL PUSH1 0x3B DUP5 ADD MSTORE DUP7 SWAP1 SHL AND PUSH1 0x4A DUP3 ADD MSTORE PUSH1 0x50 ADD PUSH1 0x21 PUSH2 0x3877 DUP3 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT PUSH1 0xD0 SWAP5 DUP6 SHL DUP2 AND PUSH1 0x21 DUP4 ADD MSTORE PUSH15 0x40EED2E8D040D8CADCCEE8D04060F PUSH1 0x8B SHL PUSH1 0x27 DUP4 ADD MSTORE SWAP3 SWAP1 SWAP4 SHL SWAP1 SWAP2 AND PUSH1 0x36 DUP4 ADD MSTORE POP PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x3C DUP3 ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1D DUP2 DUP5 SUB ADD DUP2 MSTORE PUSH1 0x3D SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL PUSH1 0x0 NOT SWAP1 SWAP2 ADD SAR SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1F JUMPDEST PUSH1 0xF DUP2 PUSH1 0xFF AND GT ISZERO PUSH2 0x2940 JUMPI PUSH1 0xFF PUSH1 0x8 DUP3 MUL AND DUP5 SWAP1 SHR PUSH2 0x291B DUP2 PUSH2 0x298E JUMP JUMPDEST PUSH2 0xFFFF AND DUP5 OR SWAP4 POP DUP2 PUSH1 0xFF AND PUSH1 0x10 EQ PUSH2 0x2936 JUMPI PUSH1 0x10 DUP5 SWAP1 SHL SWAP4 POP JUMPDEST POP PUSH1 0x0 NOT ADD PUSH2 0x28FC JUMP JUMPDEST POP PUSH1 0xF JUMPDEST PUSH1 0xFF DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x2988 JUMPI PUSH1 0xFF PUSH1 0x8 DUP3 MUL AND DUP5 SWAP1 SHR PUSH2 0x2963 DUP2 PUSH2 0x298E JUMP JUMPDEST PUSH2 0xFFFF AND DUP4 OR SWAP3 POP DUP2 PUSH1 0xFF AND PUSH1 0x0 EQ PUSH2 0x297E JUMPI PUSH1 0x10 DUP4 SWAP1 SHL SWAP3 POP JUMPDEST POP PUSH1 0x0 NOT ADD PUSH2 0x2944 JUMP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29A0 PUSH1 0x4 DUP4 PUSH1 0xFF AND SWAP1 SHR PUSH2 0x29BE JUMP JUMPDEST PUSH1 0xFF AND OR PUSH1 0x8 SHL PUSH3 0xFFFF00 AND PUSH2 0x29B5 DUP3 PUSH2 0x29BE JUMP JUMPDEST PUSH1 0xFF AND OR SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x10 DUP1 DUP3 MSTORE PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0xF DUP5 AND SWAP2 DUP3 SWAP1 DUP2 LT PUSH2 0x29F8 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 SHR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2A75 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2ABB JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2A8E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2ABB JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2ABB JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2ABB JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2AA0 JUMP JUMPDEST POP PUSH2 0x2AC7 SWAP3 SWAP2 POP PUSH2 0x2B6F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2AC7 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2B70 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2BAC JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BC3 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2BDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2BF2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2C05 PUSH2 0x2C00 DUP3 PUSH2 0x37BA JUMP JUMPDEST PUSH2 0x3796 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x2C19 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C58 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x19E8 DUP3 PUSH2 0x2B84 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2C79 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x2C82 DUP8 PUSH2 0x2B84 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2CAC JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2CB8 DUP11 DUP4 DUP12 ADD PUSH2 0x2BE2 JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2CD4 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x2CE1 DUP10 DUP3 DUP11 ADD PUSH2 0x2BE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2D03 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x2D11 JUMPI DUP5 DUP6 REVERT JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0x2D24 JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D3F JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2D4B DUP8 DUP3 DUP9 ADD PUSH2 0x2BE2 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D6D JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D85 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D9E JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2DAE PUSH1 0x20 DUP5 ADD PUSH2 0x2B84 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2DC9 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD SWAP2 POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DE6 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2DF6 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x2E04 PUSH2 0x2C00 DUP3 PUSH2 0x37BA JUMP JUMPDEST DUP2 DUP2 MSTORE DUP7 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x2E18 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2E29 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x37DC JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E48 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2E6B JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E8F JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x2E9B DUP7 DUP3 DUP8 ADD PUSH2 0x2BE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2EB9 JUMPI DUP1 DUP2 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2EEA JUMPI DUP5 DUP6 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2F16 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2F22 DUP12 DUP4 DUP13 ADD PUSH2 0x2BE2 JUMP JUMPDEST SWAP6 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP5 POP PUSH2 0x2F37 PUSH1 0xA0 DUP12 ADD PUSH2 0x2B84 JUMP JUMPDEST SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2F4C JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x2F59 DUP11 DUP3 DUP12 ADD PUSH2 0x2BE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2F80 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2CAC JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2FC1 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x2FCA DUP6 PUSH2 0x2C33 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2FEC JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2FF8 DUP8 DUP3 DUP9 ADD PUSH2 0x2B9B JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x301B JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x3024 DUP7 PUSH2 0x2C33 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH2 0x3039 PUSH1 0x40 DUP8 ADD PUSH2 0x2C33 JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3054 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x3060 DUP9 DUP3 DUP10 ADD PUSH2 0x2B9B JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x308F DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x37DC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x30AD JUMPI INVALID JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x30AD JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD PUSH1 0x1 DUP1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x30DA JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x30F1 JUMPI PUSH2 0x3120 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE PUSH1 0x2 DUP4 DIV PUSH1 0x7F AND DUP7 ADD SWAP4 POP PUSH2 0x3120 JUMP JUMPDEST PUSH1 0x2 DUP4 DIV DUP8 DUP7 MSTORE PUSH1 0x20 DUP1 DUP8 KECCAK256 DUP8 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3118 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP3 ADD PUSH2 0x30FF JUMP JUMPDEST POP POP POP DUP7 ADD SWAP4 POP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3192 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3176 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31EF DUP3 DUP8 PUSH2 0x30B1 JUMP JUMPDEST PUSH2 0x31FC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x30A3 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3210 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x3077 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP7 AND DUP3 MSTORE DUP5 PUSH1 0x20 DUP4 ADD MSTORE DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x203F PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x3077 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x9CC2E8D2DEDCC2D8D2E8F29AD2E6DAC2E8C6D PUSH1 0x6B SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x496E76616C69645369676E6174757265 PUSH1 0x80 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x496E76616C69644E6174696F6E616C697479 PUSH1 0x70 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x125B9D985B1A59105B5BDD5B9D PUSH1 0x9A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x125B9D985B1A59149958DA5C1A595B9D PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x125B9D985B1A59141BDBDB PUSH1 0xAA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x496E7465726E616C2066756E6374696F6E206F6E6C79 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x139BC81A1BDBDAC819185D18481C1C9BDD9A591959 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x506F6F6C496E616374697665 PUSH1 0xA0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x105B1C9958591E50DB185A5B5959 PUSH1 0x92 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x496E73756666696369656E7446756E6473 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x2AB730BABA3437B934BD32B221B0B63632B9 PUSH1 0x71 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP5 ADD MLOAD AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF PUSH1 0xA0 DUP5 ADD MLOAD AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xE0 DUP1 DUP5 ADD MSTORE PUSH2 0x12D0 PUSH2 0x100 DUP5 ADD DUP3 PUSH2 0x3077 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x350E PUSH1 0x40 DUP5 ADD DUP3 PUSH2 0x30B1 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x3521 PUSH1 0x60 DUP5 ADD DUP3 PUSH2 0x30A3 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x140 DUP1 PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x353E PUSH2 0x160 DUP6 ADD DUP4 PUSH2 0x3077 JUMP JUMPDEST SWAP2 POP PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0xE0 DUP6 ADD MLOAD PUSH2 0x100 DUP2 DUP2 DUP8 ADD MSTORE DUP1 DUP8 ADD MLOAD SWAP2 POP POP PUSH2 0x120 DUP2 DUP2 DUP8 ADD MSTORE DUP1 DUP8 ADD MLOAD SWAP2 POP POP PUSH2 0x358D DUP3 DUP7 ADD DUP3 PUSH2 0x3071 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP9 DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x20 DUP4 ADD MSTORE DUP7 PUSH1 0x40 DUP4 ADD MSTORE DUP6 PUSH1 0x60 DUP4 ADD MSTORE DUP5 ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF DUP5 AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xE0 PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x35DE PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x3077 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP13 DUP4 MSTORE PUSH2 0x3600 PUSH1 0x20 DUP5 ADD DUP14 PUSH2 0x30B1 JUMP JUMPDEST PUSH2 0x360D PUSH1 0x40 DUP5 ADD DUP13 PUSH2 0x30A3 JUMP JUMPDEST DUP1 PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x361F DUP2 DUP5 ADD DUP12 PUSH2 0x3077 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD SWAP10 SWAP1 SWAP10 MSTORE POP POP PUSH1 0xA0 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xE0 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x120 SWAP1 SWAP2 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP3 MSTORE DUP6 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x36A3 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x3077 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP9 DUP3 MSTORE DUP8 PUSH1 0x20 DUP4 ADD MSTORE DUP7 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0xE0 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x36DC PUSH1 0xE0 DUP4 ADD DUP8 PUSH2 0x3077 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0xA0 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0xC0 DUP5 ADD MSTORE PUSH2 0x3704 DUP2 DUP6 PUSH2 0x3077 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP7 AND DUP3 MSTORE DUP5 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP4 ADD MSTORE DUP3 PUSH1 0x60 DUP4 ADD MSTORE DUP3 DUP5 PUSH1 0x80 DUP5 ADD CALLDATACOPY DUP2 DUP4 ADD PUSH1 0x80 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x31B937B9B996B1B430B4B7 PUSH1 0xA9 SHL PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x37B2 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x37CE JUMPI INVALID JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x37F7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x37DF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1C6D JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737345434453413A20696E76616C69642073 PUSH10 0x676E6174757265202773 0x27 KECCAK256 PUSH23 0x616C7565416464726573733A20696E7375666669636965 PUSH15 0x742062616C616E636520666F722063 PUSH2 0x6C6C 0x2E KECCAK256 COINBASE PUSH21 0x74656D7074656420746F20696E646578206174206F PUSH7 0x66736574203078 GASLIMIT NUMBER DIFFICULTY MSTORE8 COINBASE GASPRICE KECCAK256 PUSH10 0x6E76616C696420736967 PUSH15 0x6174757265202776272076616C7565 0x4F PUSH24 0x6E61626C653A2063616C6C6572206973206E6F7420746865 KECCAK256 PUSH16 0x776E657254797065644D656D56696577 0x2F PUSH10 0x6E646578202D20417474 PUSH6 0x6D7074656420 PUSH21 0x6F20696E646578206D6F7265207468616E20333220 PUSH3 0x797465 PUSH20 0x5361666545524332303A204552433230206F7065 PUSH19 0x6174696F6E20646964206E6F74207375636365 PUSH6 0x645479706564 0x4D PUSH6 0x6D566965772F PUSH4 0x6F707954 PUSH16 0x202D204E756C6C20706F696E74657220 PUSH5 0x6572656654 PUSH26 0x7065644D656D566965772F636F7079546F202D20496E76616C69 PUSH5 0x20706F696E PUSH21 0x657220646572656654797065644D656D566965772F PUSH10 0x6E646578202D204F7665 PUSH19 0x72616E2074686520766965772E20536C696365 KECCAK256 PUSH10 0x73206174203078A26469 PUSH17 0x667358221220384EEB81A97676913426C9 0xAC COINBASE DUP1 0xB8 0xCC CALLDATALOAD PUSH26 0x1EE29BC382297CA9C110ECF6B8CA64736F6C634300070600334F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573738BE0079C531659141344CD1FD0A4F284 NOT 0x49 PUSH32 0x9722A3DAAFE3B4186F6B6457E000000000000000000000000000000000000000 ","sourceMap":"1459:17395:9:-:0;;;5527:706;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;884:17:0;904:12;:10;:12::i;:::-;926:6;:18;;-1:-1:-1;;;;;;926:18:0;-1:-1:-1;;;;;926:18:0;;;;;;;959:43;;926:18;;-1:-1:-1;926:18:0;-1:-1:-1;;;;;;;;;;;959:43:0;926:6;;959:43;-1:-1:-1;5656:12:9;:28;;-1:-1:-1;;;;;5656:28:9;;;-1:-1:-1;;;;;;5656:28:9;;;;;;;-1:-1:-1;;;;;;5694:30:9;;;;;;;5734:22;:48;;;;;;;;;;;;;;;5792:29;5810:10;5792:17;:29::i;:::-;6072:20;;;;;;;;;;;-1:-1:-1;;;6072:20:9;;;;;6121:10;;;;;;;;;;-1:-1:-1;;;6121:10:9;;;;5921:295;;;;5949:95;;6062:31;;6111:21;;6150:4;;6197;;5921:295;;:::i;:::-;;;;-1:-1:-1;;5921:295:9;;;;;;;;;5898:328;;5921:295;5898:328;;;;5879:347;;-1:-1:-1;1459:17395:9;;-1:-1:-1;;1459:17395:9;598:104:6;685:10;598:104;:::o;2011:240:0:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2099:22:0;::::1;2091:73;;;;-1:-1:-1::0;;;2091:73:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2200:6;::::0;;2179:38:::1;::::0;-1:-1:-1;;;;;2179:38:0;;::::1;::::0;2200:6;::::1;::::0;-1:-1:-1;;;;;;;;;;;2179:38:0;::::1;2227:6;:17:::0;;-1:-1:-1;;;;;;2227:17:0::1;-1:-1:-1::0;;;;;2227:17:0;;;::::1;::::0;;;::::1;::::0;;2011:240::o;1085:85::-;1131:7;1157:6;-1:-1:-1;;;;;1157:6:0;1085:85;:::o;14:179:11:-;95:13;;-1:-1:-1;;;;;137:31:11;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:394::-;;;;355:2;343:9;334:7;330:23;326:32;323:2;;;376:6;368;361:22;323:2;404:42;436:9;404:42;:::i;:::-;394:52;;465:51;512:2;501:9;497:18;465:51;:::i;:::-;455:61;;535:51;582:2;571:9;567:18;535:51;:::i;:::-;525:61;;313:279;;;;;:::o;597:512::-;866:25;;;922:2;907:18;;900:34;;;;965:2;950:18;;943:34;;;;1025:6;1013:19;1008:2;993:18;;986:47;-1:-1:-1;;;;;1070:32:11;1064:3;1049:19;;1042:61;853:3;838:19;;820:289::o;:::-;1459:17395:9;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:25653:11","statements":[{"nodeType":"YulBlock","src":"6:3:11","statements":[]},{"body":{"nodeType":"YulBlock","src":"65:124:11","statements":[{"nodeType":"YulAssignment","src":"75:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"97:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"84:12:11"},"nodeType":"YulFunctionCall","src":"84:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"75:5:11"}]},{"body":{"nodeType":"YulBlock","src":"167:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"176:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"179:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"169:6:11"},"nodeType":"YulFunctionCall","src":"169:12:11"},"nodeType":"YulExpressionStatement","src":"169:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"126:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"137:5:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"152:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"157:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"148:3:11"},"nodeType":"YulFunctionCall","src":"148:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"161:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"144:3:11"},"nodeType":"YulFunctionCall","src":"144:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"133:3:11"},"nodeType":"YulFunctionCall","src":"133:31:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"123:2:11"},"nodeType":"YulFunctionCall","src":"123:42:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"116:6:11"},"nodeType":"YulFunctionCall","src":"116:50:11"},"nodeType":"YulIf","src":"113:2:11"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"44:6:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"55:5:11","type":""}],"src":"14:175:11"},{"body":{"nodeType":"YulBlock","src":"268:303:11","statements":[{"body":{"nodeType":"YulBlock","src":"317:30:11","statements":[{"expression":{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"326:8:11"},{"name":"arrayPos","nodeType":"YulIdentifier","src":"336:8:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"319:6:11"},"nodeType":"YulFunctionCall","src":"319:26:11"},"nodeType":"YulExpressionStatement","src":"319:26:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"296:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"304:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"292:3:11"},"nodeType":"YulFunctionCall","src":"292:17:11"},{"name":"end","nodeType":"YulIdentifier","src":"311:3:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"288:3:11"},"nodeType":"YulFunctionCall","src":"288:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"281:6:11"},"nodeType":"YulFunctionCall","src":"281:35:11"},"nodeType":"YulIf","src":"278:2:11"},{"nodeType":"YulAssignment","src":"356:30:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"379:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"366:12:11"},"nodeType":"YulFunctionCall","src":"366:20:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"356:6:11"}]},{"body":{"nodeType":"YulBlock","src":"429:30:11","statements":[{"expression":{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"438:8:11"},{"name":"arrayPos","nodeType":"YulIdentifier","src":"448:8:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"431:6:11"},"nodeType":"YulFunctionCall","src":"431:26:11"},"nodeType":"YulExpressionStatement","src":"431:26:11"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"401:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"409:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"398:2:11"},"nodeType":"YulFunctionCall","src":"398:30:11"},"nodeType":"YulIf","src":"395:2:11"},{"nodeType":"YulAssignment","src":"468:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"484:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"492:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"480:3:11"},"nodeType":"YulFunctionCall","src":"480:17:11"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"468:8:11"}]},{"body":{"nodeType":"YulBlock","src":"549:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"558:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"561:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"551:6:11"},"nodeType":"YulFunctionCall","src":"551:12:11"},"nodeType":"YulExpressionStatement","src":"551:12:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"520:6:11"},{"name":"length","nodeType":"YulIdentifier","src":"528:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"516:3:11"},"nodeType":"YulFunctionCall","src":"516:19:11"},{"kind":"number","nodeType":"YulLiteral","src":"537:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"512:3:11"},"nodeType":"YulFunctionCall","src":"512:30:11"},{"name":"end","nodeType":"YulIdentifier","src":"544:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"509:2:11"},"nodeType":"YulFunctionCall","src":"509:39:11"},"nodeType":"YulIf","src":"506:2:11"}]},"name":"abi_decode_t_bytes_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"231:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"239:3:11","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"247:8:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"257:6:11","type":""}],"src":"194:377:11"},{"body":{"nodeType":"YulBlock","src":"630:431:11","statements":[{"body":{"nodeType":"YulBlock","src":"679:24:11","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"688:5:11"},{"name":"array","nodeType":"YulIdentifier","src":"695:5:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"681:6:11"},"nodeType":"YulFunctionCall","src":"681:20:11"},"nodeType":"YulExpressionStatement","src":"681:20:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"658:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"666:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"654:3:11"},"nodeType":"YulFunctionCall","src":"654:17:11"},{"name":"end","nodeType":"YulIdentifier","src":"673:3:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"650:3:11"},"nodeType":"YulFunctionCall","src":"650:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"643:6:11"},"nodeType":"YulFunctionCall","src":"643:35:11"},"nodeType":"YulIf","src":"640:2:11"},{"nodeType":"YulVariableDeclaration","src":"712:30:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"735:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"722:12:11"},"nodeType":"YulFunctionCall","src":"722:20:11"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"716:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"751:64:11","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"811:2:11"}],"functionName":{"name":"array_allocation_size_t_bytes","nodeType":"YulIdentifier","src":"781:29:11"},"nodeType":"YulFunctionCall","src":"781:33:11"}],"functionName":{"name":"allocateMemory","nodeType":"YulIdentifier","src":"766:14:11"},"nodeType":"YulFunctionCall","src":"766:49:11"},"variables":[{"name":"array_1","nodeType":"YulTypedName","src":"755:7:11","type":""}]},{"expression":{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"831:7:11"},{"name":"_1","nodeType":"YulIdentifier","src":"840:2:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"824:6:11"},"nodeType":"YulFunctionCall","src":"824:19:11"},"nodeType":"YulExpressionStatement","src":"824:19:11"},{"body":{"nodeType":"YulBlock","src":"891:24:11","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"900:5:11"},{"name":"array","nodeType":"YulIdentifier","src":"907:5:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"893:6:11"},"nodeType":"YulFunctionCall","src":"893:20:11"},"nodeType":"YulExpressionStatement","src":"893:20:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"866:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"874:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"862:3:11"},"nodeType":"YulFunctionCall","src":"862:15:11"},{"kind":"number","nodeType":"YulLiteral","src":"879:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"858:3:11"},"nodeType":"YulFunctionCall","src":"858:26:11"},{"name":"end","nodeType":"YulIdentifier","src":"886:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"855:2:11"},"nodeType":"YulFunctionCall","src":"855:35:11"},"nodeType":"YulIf","src":"852:2:11"},{"expression":{"arguments":[{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"941:7:11"},{"kind":"number","nodeType":"YulLiteral","src":"950:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"937:3:11"},"nodeType":"YulFunctionCall","src":"937:18:11"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"961:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"969:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"957:3:11"},"nodeType":"YulFunctionCall","src":"957:17:11"},{"name":"_1","nodeType":"YulIdentifier","src":"976:2:11"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"924:12:11"},"nodeType":"YulFunctionCall","src":"924:55:11"},"nodeType":"YulExpressionStatement","src":"924:55:11"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"1003:7:11"},{"name":"_1","nodeType":"YulIdentifier","src":"1012:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"999:3:11"},"nodeType":"YulFunctionCall","src":"999:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"1017:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"995:3:11"},"nodeType":"YulFunctionCall","src":"995:27:11"},{"name":"array","nodeType":"YulIdentifier","src":"1024:5:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"988:6:11"},"nodeType":"YulFunctionCall","src":"988:42:11"},"nodeType":"YulExpressionStatement","src":"988:42:11"},{"nodeType":"YulAssignment","src":"1039:16:11","value":{"name":"array_1","nodeType":"YulIdentifier","src":"1048:7:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1039:5:11"}]}]},"name":"abi_decode_t_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"604:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"612:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"620:5:11","type":""}],"src":"576:485:11"},{"body":{"nodeType":"YulBlock","src":"1116:115:11","statements":[{"nodeType":"YulAssignment","src":"1126:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1148:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1135:12:11"},"nodeType":"YulFunctionCall","src":"1135:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1126:5:11"}]},{"body":{"nodeType":"YulBlock","src":"1209:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1218:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1221:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1211:6:11"},"nodeType":"YulFunctionCall","src":"1211:12:11"},"nodeType":"YulExpressionStatement","src":"1211:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1177:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1188:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"1195:10:11","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1184:3:11"},"nodeType":"YulFunctionCall","src":"1184:22:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1174:2:11"},"nodeType":"YulFunctionCall","src":"1174:33:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1167:6:11"},"nodeType":"YulFunctionCall","src":"1167:41:11"},"nodeType":"YulIf","src":"1164:2:11"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1095:6:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1106:5:11","type":""}],"src":"1066:165:11"},{"body":{"nodeType":"YulBlock","src":"1306:128:11","statements":[{"body":{"nodeType":"YulBlock","src":"1352:26:11","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1361:6:11"},{"name":"value0","nodeType":"YulIdentifier","src":"1369:6:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1354:6:11"},"nodeType":"YulFunctionCall","src":"1354:22:11"},"nodeType":"YulExpressionStatement","src":"1354:22:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1327:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1336:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1323:3:11"},"nodeType":"YulFunctionCall","src":"1323:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"1348:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1319:3:11"},"nodeType":"YulFunctionCall","src":"1319:32:11"},"nodeType":"YulIf","src":"1316:2:11"},{"nodeType":"YulAssignment","src":"1387:41:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1418:9:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1397:20:11"},"nodeType":"YulFunctionCall","src":"1397:31:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1387:6:11"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1272:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1283:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1295:6:11","type":""}],"src":"1236:198:11"},{"body":{"nodeType":"YulBlock","src":"1613:683:11","statements":[{"body":{"nodeType":"YulBlock","src":"1660:26:11","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1669:6:11"},{"name":"value4","nodeType":"YulIdentifier","src":"1677:6:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1662:6:11"},"nodeType":"YulFunctionCall","src":"1662:22:11"},"nodeType":"YulExpressionStatement","src":"1662:22:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1634:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1643:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1630:3:11"},"nodeType":"YulFunctionCall","src":"1630:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"1655:3:11","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1626:3:11"},"nodeType":"YulFunctionCall","src":"1626:33:11"},"nodeType":"YulIf","src":"1623:2:11"},{"nodeType":"YulAssignment","src":"1695:41:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1726:9:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1705:20:11"},"nodeType":"YulFunctionCall","src":"1705:31:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1695:6:11"}]},{"nodeType":"YulAssignment","src":"1745:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1772:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1783:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1768:3:11"},"nodeType":"YulFunctionCall","src":"1768:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1755:12:11"},"nodeType":"YulFunctionCall","src":"1755:32:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1745:6:11"}]},{"nodeType":"YulAssignment","src":"1796:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1823:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1834:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1819:3:11"},"nodeType":"YulFunctionCall","src":"1819:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1806:12:11"},"nodeType":"YulFunctionCall","src":"1806:32:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1796:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"1847:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1878:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1889:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1874:3:11"},"nodeType":"YulFunctionCall","src":"1874:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1861:12:11"},"nodeType":"YulFunctionCall","src":"1861:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1851:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1902:28:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1912:18:11","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1906:2:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"1957:26:11","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1966:6:11"},{"name":"value4","nodeType":"YulIdentifier","src":"1974:6:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1959:6:11"},"nodeType":"YulFunctionCall","src":"1959:22:11"},"nodeType":"YulExpressionStatement","src":"1959:22:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1945:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"1953:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1942:2:11"},"nodeType":"YulFunctionCall","src":"1942:14:11"},"nodeType":"YulIf","src":"1939:2:11"},{"nodeType":"YulAssignment","src":"1992:61:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2025:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2036:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2021:3:11"},"nodeType":"YulFunctionCall","src":"2021:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2045:7:11"}],"functionName":{"name":"abi_decode_t_bytes","nodeType":"YulIdentifier","src":"2002:18:11"},"nodeType":"YulFunctionCall","src":"2002:51:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1992:6:11"}]},{"nodeType":"YulAssignment","src":"2062:43:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2089:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2100:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2085:3:11"},"nodeType":"YulFunctionCall","src":"2085:19:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2072:12:11"},"nodeType":"YulFunctionCall","src":"2072:33:11"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2062:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"2114:49:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2147:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2158:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2143:3:11"},"nodeType":"YulFunctionCall","src":"2143:19:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2130:12:11"},"nodeType":"YulFunctionCall","src":"2130:33:11"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"2118:8:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"2192:26:11","statements":[{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"2201:6:11"},{"name":"value5","nodeType":"YulIdentifier","src":"2209:6:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2194:6:11"},"nodeType":"YulFunctionCall","src":"2194:22:11"},"nodeType":"YulExpressionStatement","src":"2194:22:11"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"2178:8:11"},{"name":"_1","nodeType":"YulIdentifier","src":"2188:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2175:2:11"},"nodeType":"YulFunctionCall","src":"2175:16:11"},"nodeType":"YulIf","src":"2172:2:11"},{"nodeType":"YulAssignment","src":"2227:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2260:9:11"},{"name":"offset_1","nodeType":"YulIdentifier","src":"2271:8:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2256:3:11"},"nodeType":"YulFunctionCall","src":"2256:24:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2282:7:11"}],"functionName":{"name":"abi_decode_t_bytes","nodeType":"YulIdentifier","src":"2237:18:11"},"nodeType":"YulFunctionCall","src":"2237:53:11"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"2227:6:11"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_string_memory_ptrt_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1539:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1550:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1562:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1570:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1578:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1586:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1594:6:11","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1602:6:11","type":""}],"src":"1439:857:11"},{"body":{"nodeType":"YulBlock","src":"2476:595:11","statements":[{"body":{"nodeType":"YulBlock","src":"2523:26:11","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2532:6:11"},{"name":"value0","nodeType":"YulIdentifier","src":"2540:6:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2525:6:11"},"nodeType":"YulFunctionCall","src":"2525:22:11"},"nodeType":"YulExpressionStatement","src":"2525:22:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2497:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"2506:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2493:3:11"},"nodeType":"YulFunctionCall","src":"2493:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"2518:3:11","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2489:3:11"},"nodeType":"YulFunctionCall","src":"2489:33:11"},"nodeType":"YulIf","src":"2486:2:11"},{"nodeType":"YulVariableDeclaration","src":"2558:36:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2584:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2571:12:11"},"nodeType":"YulFunctionCall","src":"2571:23:11"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2562:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"2627:26:11","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2636:6:11"},{"name":"value0","nodeType":"YulIdentifier","src":"2644:6:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2629:6:11"},"nodeType":"YulFunctionCall","src":"2629:22:11"},"nodeType":"YulExpressionStatement","src":"2629:22:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2616:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"2623:1:11","type":"","value":"4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2613:2:11"},"nodeType":"YulFunctionCall","src":"2613:12:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2606:6:11"},"nodeType":"YulFunctionCall","src":"2606:20:11"},"nodeType":"YulIf","src":"2603:2:11"},{"nodeType":"YulAssignment","src":"2662:15:11","value":{"name":"value","nodeType":"YulIdentifier","src":"2672:5:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2662:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"2686:47:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2718:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2729:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2714:3:11"},"nodeType":"YulFunctionCall","src":"2714:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2701:12:11"},"nodeType":"YulFunctionCall","src":"2701:32:11"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"2690:7:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"2768:26:11","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2777:6:11"},{"name":"value1","nodeType":"YulIdentifier","src":"2785:6:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2770:6:11"},"nodeType":"YulFunctionCall","src":"2770:22:11"},"nodeType":"YulExpressionStatement","src":"2770:22:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"2755:7:11"},{"kind":"number","nodeType":"YulLiteral","src":"2764:1:11","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2752:2:11"},"nodeType":"YulFunctionCall","src":"2752:14:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2745:6:11"},"nodeType":"YulFunctionCall","src":"2745:22:11"},"nodeType":"YulIf","src":"2742:2:11"},{"nodeType":"YulAssignment","src":"2803:17:11","value":{"name":"value_1","nodeType":"YulIdentifier","src":"2813:7:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2803:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"2829:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2860:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2871:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2856:3:11"},"nodeType":"YulFunctionCall","src":"2856:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2843:12:11"},"nodeType":"YulFunctionCall","src":"2843:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2833:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"2918:26:11","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"2927:6:11"},{"name":"value2","nodeType":"YulIdentifier","src":"2935:6:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2920:6:11"},"nodeType":"YulFunctionCall","src":"2920:22:11"},"nodeType":"YulExpressionStatement","src":"2920:22:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2890:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"2898:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2887:2:11"},"nodeType":"YulFunctionCall","src":"2887:30:11"},"nodeType":"YulIf","src":"2884:2:11"},{"nodeType":"YulAssignment","src":"2953:61:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2986:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"2997:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2982:3:11"},"nodeType":"YulFunctionCall","src":"2982:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3006:7:11"}],"functionName":{"name":"abi_decode_t_bytes","nodeType":"YulIdentifier","src":"2963:18:11"},"nodeType":"YulFunctionCall","src":"2963:51:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2953:6:11"}]},{"nodeType":"YulAssignment","src":"3023:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3050:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3061:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3046:3:11"},"nodeType":"YulFunctionCall","src":"3046:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3033:12:11"},"nodeType":"YulFunctionCall","src":"3033:32:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3023:6:11"}]}]},"name":"abi_decode_tuple_t_enum$_DisasterTypeEnum_$1669t_enum$_ClassificationEnum_$1672t_string_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2418:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2429:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2441:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2449:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2457:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2465:6:11","type":""}],"src":"2301:770:11"},{"body":{"nodeType":"YulBlock","src":"3146:120:11","statements":[{"body":{"nodeType":"YulBlock","src":"3192:26:11","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3201:6:11"},{"name":"value0","nodeType":"YulIdentifier","src":"3209:6:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3194:6:11"},"nodeType":"YulFunctionCall","src":"3194:22:11"},"nodeType":"YulExpressionStatement","src":"3194:22:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3167:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"3176:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3163:3:11"},"nodeType":"YulFunctionCall","src":"3163:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"3188:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3159:3:11"},"nodeType":"YulFunctionCall","src":"3159:32:11"},"nodeType":"YulIf","src":"3156:2:11"},{"nodeType":"YulAssignment","src":"3227:33:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3250:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3237:12:11"},"nodeType":"YulFunctionCall","src":"3237:23:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3227:6:11"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3112:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3123:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3135:6:11","type":""}],"src":"3076:190:11"},{"body":{"nodeType":"YulBlock","src":"3352:113:11","statements":[{"body":{"nodeType":"YulBlock","src":"3398:26:11","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3407:6:11"},{"name":"value0","nodeType":"YulIdentifier","src":"3415:6:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3400:6:11"},"nodeType":"YulFunctionCall","src":"3400:22:11"},"nodeType":"YulExpressionStatement","src":"3400:22:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3373:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"3382:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3369:3:11"},"nodeType":"YulFunctionCall","src":"3369:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"3394:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3365:3:11"},"nodeType":"YulFunctionCall","src":"3365:32:11"},"nodeType":"YulIf","src":"3362:2:11"},{"nodeType":"YulAssignment","src":"3433:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3449:9:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3443:5:11"},"nodeType":"YulFunctionCall","src":"3443:16:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3433:6:11"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3318:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3329:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3341:6:11","type":""}],"src":"3271:194:11"},{"body":{"nodeType":"YulBlock","src":"3557:179:11","statements":[{"body":{"nodeType":"YulBlock","src":"3603:26:11","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3612:6:11"},{"name":"value0","nodeType":"YulIdentifier","src":"3620:6:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3605:6:11"},"nodeType":"YulFunctionCall","src":"3605:22:11"},"nodeType":"YulExpressionStatement","src":"3605:22:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3578:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"3587:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3574:3:11"},"nodeType":"YulFunctionCall","src":"3574:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"3599:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3570:3:11"},"nodeType":"YulFunctionCall","src":"3570:32:11"},"nodeType":"YulIf","src":"3567:2:11"},{"nodeType":"YulAssignment","src":"3638:33:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3661:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3648:12:11"},"nodeType":"YulFunctionCall","src":"3648:23:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3638:6:11"}]},{"nodeType":"YulAssignment","src":"3680:50:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3715:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3726:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3711:3:11"},"nodeType":"YulFunctionCall","src":"3711:18:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3690:20:11"},"nodeType":"YulFunctionCall","src":"3690:40:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3680:6:11"}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3515:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3526:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3538:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3546:6:11","type":""}],"src":"3470:266:11"},{"body":{"nodeType":"YulBlock","src":"3849:629:11","statements":[{"body":{"nodeType":"YulBlock","src":"3895:26:11","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3904:6:11"},{"name":"value0","nodeType":"YulIdentifier","src":"3912:6:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3897:6:11"},"nodeType":"YulFunctionCall","src":"3897:22:11"},"nodeType":"YulExpressionStatement","src":"3897:22:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3870:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"3879:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3866:3:11"},"nodeType":"YulFunctionCall","src":"3866:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"3891:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3862:3:11"},"nodeType":"YulFunctionCall","src":"3862:32:11"},"nodeType":"YulIf","src":"3859:2:11"},{"nodeType":"YulAssignment","src":"3930:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3946:9:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3940:5:11"},"nodeType":"YulFunctionCall","src":"3940:16:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3930:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"3965:39:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3989:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4000:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3985:3:11"},"nodeType":"YulFunctionCall","src":"3985:18:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3979:5:11"},"nodeType":"YulFunctionCall","src":"3979:25:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3969:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"4047:26:11","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4056:6:11"},{"name":"value1","nodeType":"YulIdentifier","src":"4064:6:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4049:6:11"},"nodeType":"YulFunctionCall","src":"4049:22:11"},"nodeType":"YulExpressionStatement","src":"4049:22:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4019:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4027:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4016:2:11"},"nodeType":"YulFunctionCall","src":"4016:30:11"},"nodeType":"YulIf","src":"4013:2:11"},{"nodeType":"YulVariableDeclaration","src":"4082:32:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4096:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4107:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4092:3:11"},"nodeType":"YulFunctionCall","src":"4092:22:11"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4086:2:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"4162:26:11","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4171:6:11"},{"name":"value1","nodeType":"YulIdentifier","src":"4179:6:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4164:6:11"},"nodeType":"YulFunctionCall","src":"4164:22:11"},"nodeType":"YulExpressionStatement","src":"4164:22:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"4141:2:11"},{"kind":"number","nodeType":"YulLiteral","src":"4145:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4137:3:11"},"nodeType":"YulFunctionCall","src":"4137:13:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4152:7:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4133:3:11"},"nodeType":"YulFunctionCall","src":"4133:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4126:6:11"},"nodeType":"YulFunctionCall","src":"4126:35:11"},"nodeType":"YulIf","src":"4123:2:11"},{"nodeType":"YulVariableDeclaration","src":"4197:19:11","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"4213:2:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4207:5:11"},"nodeType":"YulFunctionCall","src":"4207:9:11"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4201:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4225:62:11","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4283:2:11"}],"functionName":{"name":"array_allocation_size_t_bytes","nodeType":"YulIdentifier","src":"4253:29:11"},"nodeType":"YulFunctionCall","src":"4253:33:11"}],"functionName":{"name":"allocateMemory","nodeType":"YulIdentifier","src":"4238:14:11"},"nodeType":"YulFunctionCall","src":"4238:49:11"},"variables":[{"name":"array","nodeType":"YulTypedName","src":"4229:5:11","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4303:5:11"},{"name":"_2","nodeType":"YulIdentifier","src":"4310:2:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4296:6:11"},"nodeType":"YulFunctionCall","src":"4296:17:11"},"nodeType":"YulExpressionStatement","src":"4296:17:11"},{"body":{"nodeType":"YulBlock","src":"4359:26:11","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4368:6:11"},{"name":"value1","nodeType":"YulIdentifier","src":"4376:6:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4361:6:11"},"nodeType":"YulFunctionCall","src":"4361:22:11"},"nodeType":"YulExpressionStatement","src":"4361:22:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"4336:2:11"},{"name":"_2","nodeType":"YulIdentifier","src":"4340:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4332:3:11"},"nodeType":"YulFunctionCall","src":"4332:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"4345:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4328:3:11"},"nodeType":"YulFunctionCall","src":"4328:20:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4350:7:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4325:2:11"},"nodeType":"YulFunctionCall","src":"4325:33:11"},"nodeType":"YulIf","src":"4322:2:11"},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"4420:2:11"},{"kind":"number","nodeType":"YulLiteral","src":"4424:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4416:3:11"},"nodeType":"YulFunctionCall","src":"4416:11:11"},{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4433:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"4440:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4429:3:11"},"nodeType":"YulFunctionCall","src":"4429:14:11"},{"name":"_2","nodeType":"YulIdentifier","src":"4445:2:11"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4394:21:11"},"nodeType":"YulFunctionCall","src":"4394:54:11"},"nodeType":"YulExpressionStatement","src":"4394:54:11"},{"nodeType":"YulAssignment","src":"4457:15:11","value":{"name":"array","nodeType":"YulIdentifier","src":"4467:5:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4457:6:11"}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3807:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3818:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3830:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3838:6:11","type":""}],"src":"3741:737:11"},{"body":{"nodeType":"YulBlock","src":"4570:171:11","statements":[{"body":{"nodeType":"YulBlock","src":"4616:26:11","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4625:6:11"},{"name":"value0","nodeType":"YulIdentifier","src":"4633:6:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4618:6:11"},"nodeType":"YulFunctionCall","src":"4618:22:11"},"nodeType":"YulExpressionStatement","src":"4618:22:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4591:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"4600:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4587:3:11"},"nodeType":"YulFunctionCall","src":"4587:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"4612:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4583:3:11"},"nodeType":"YulFunctionCall","src":"4583:32:11"},"nodeType":"YulIf","src":"4580:2:11"},{"nodeType":"YulAssignment","src":"4651:33:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4674:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4661:12:11"},"nodeType":"YulFunctionCall","src":"4661:23:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4651:6:11"}]},{"nodeType":"YulAssignment","src":"4693:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4720:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4731:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4716:3:11"},"nodeType":"YulFunctionCall","src":"4716:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4703:12:11"},"nodeType":"YulFunctionCall","src":"4703:32:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4693:6:11"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4528:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4539:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4551:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4559:6:11","type":""}],"src":"4483:258:11"},{"body":{"nodeType":"YulBlock","src":"4860:365:11","statements":[{"body":{"nodeType":"YulBlock","src":"4906:26:11","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4915:6:11"},{"name":"value0","nodeType":"YulIdentifier","src":"4923:6:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4908:6:11"},"nodeType":"YulFunctionCall","src":"4908:22:11"},"nodeType":"YulExpressionStatement","src":"4908:22:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4881:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"4890:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4877:3:11"},"nodeType":"YulFunctionCall","src":"4877:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"4902:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4873:3:11"},"nodeType":"YulFunctionCall","src":"4873:32:11"},"nodeType":"YulIf","src":"4870:2:11"},{"nodeType":"YulAssignment","src":"4941:33:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4964:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4951:12:11"},"nodeType":"YulFunctionCall","src":"4951:23:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4941:6:11"}]},{"nodeType":"YulAssignment","src":"4983:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5010:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5021:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5006:3:11"},"nodeType":"YulFunctionCall","src":"5006:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4993:12:11"},"nodeType":"YulFunctionCall","src":"4993:32:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4983:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"5034:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5065:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5076:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5061:3:11"},"nodeType":"YulFunctionCall","src":"5061:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5048:12:11"},"nodeType":"YulFunctionCall","src":"5048:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5038:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"5123:26:11","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5132:6:11"},{"name":"value2","nodeType":"YulIdentifier","src":"5140:6:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5125:6:11"},"nodeType":"YulFunctionCall","src":"5125:22:11"},"nodeType":"YulExpressionStatement","src":"5125:22:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5095:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"5103:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5092:2:11"},"nodeType":"YulFunctionCall","src":"5092:30:11"},"nodeType":"YulIf","src":"5089:2:11"},{"nodeType":"YulAssignment","src":"5158:61:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5191:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"5202:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5187:3:11"},"nodeType":"YulFunctionCall","src":"5187:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5211:7:11"}],"functionName":{"name":"abi_decode_t_bytes","nodeType":"YulIdentifier","src":"5168:18:11"},"nodeType":"YulFunctionCall","src":"5168:51:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5158:6:11"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4810:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4821:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4833:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4841:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4849:6:11","type":""}],"src":"4746:479:11"},{"body":{"nodeType":"YulBlock","src":"5334:222:11","statements":[{"body":{"nodeType":"YulBlock","src":"5380:26:11","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5389:6:11"},{"name":"value2","nodeType":"YulIdentifier","src":"5397:6:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5382:6:11"},"nodeType":"YulFunctionCall","src":"5382:22:11"},"nodeType":"YulExpressionStatement","src":"5382:22:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5355:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"5364:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5351:3:11"},"nodeType":"YulFunctionCall","src":"5351:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"5376:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5347:3:11"},"nodeType":"YulFunctionCall","src":"5347:32:11"},"nodeType":"YulIf","src":"5344:2:11"},{"nodeType":"YulAssignment","src":"5415:33:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5438:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5425:12:11"},"nodeType":"YulFunctionCall","src":"5425:23:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5415:6:11"}]},{"nodeType":"YulAssignment","src":"5457:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5484:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5495:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5480:3:11"},"nodeType":"YulFunctionCall","src":"5480:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5467:12:11"},"nodeType":"YulFunctionCall","src":"5467:32:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5457:6:11"}]},{"nodeType":"YulAssignment","src":"5508:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5535:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5546:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5531:3:11"},"nodeType":"YulFunctionCall","src":"5531:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5518:12:11"},"nodeType":"YulFunctionCall","src":"5518:32:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5508:6:11"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5284:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5295:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5307:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5315:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5323:6:11","type":""}],"src":"5230:326:11"},{"body":{"nodeType":"YulBlock","src":"5752:735:11","statements":[{"body":{"nodeType":"YulBlock","src":"5799:26:11","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5808:6:11"},{"name":"value2","nodeType":"YulIdentifier","src":"5816:6:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5801:6:11"},"nodeType":"YulFunctionCall","src":"5801:22:11"},"nodeType":"YulExpressionStatement","src":"5801:22:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5773:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"5782:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5769:3:11"},"nodeType":"YulFunctionCall","src":"5769:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"5794:3:11","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5765:3:11"},"nodeType":"YulFunctionCall","src":"5765:33:11"},"nodeType":"YulIf","src":"5762:2:11"},{"nodeType":"YulAssignment","src":"5834:33:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5857:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5844:12:11"},"nodeType":"YulFunctionCall","src":"5844:23:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5834:6:11"}]},{"nodeType":"YulAssignment","src":"5876:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5903:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5914:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5899:3:11"},"nodeType":"YulFunctionCall","src":"5899:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5886:12:11"},"nodeType":"YulFunctionCall","src":"5886:32:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5876:6:11"}]},{"nodeType":"YulAssignment","src":"5927:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5954:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5965:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5950:3:11"},"nodeType":"YulFunctionCall","src":"5950:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5937:12:11"},"nodeType":"YulFunctionCall","src":"5937:32:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5927:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"5978:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6009:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6020:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6005:3:11"},"nodeType":"YulFunctionCall","src":"6005:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5992:12:11"},"nodeType":"YulFunctionCall","src":"5992:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5982:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6033:28:11","value":{"kind":"number","nodeType":"YulLiteral","src":"6043:18:11","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6037:2:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"6088:26:11","statements":[{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"6097:6:11"},{"name":"value6","nodeType":"YulIdentifier","src":"6105:6:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6090:6:11"},"nodeType":"YulFunctionCall","src":"6090:22:11"},"nodeType":"YulExpressionStatement","src":"6090:22:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6076:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"6084:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6073:2:11"},"nodeType":"YulFunctionCall","src":"6073:14:11"},"nodeType":"YulIf","src":"6070:2:11"},{"nodeType":"YulAssignment","src":"6123:61:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6156:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"6167:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6152:3:11"},"nodeType":"YulFunctionCall","src":"6152:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6176:7:11"}],"functionName":{"name":"abi_decode_t_bytes","nodeType":"YulIdentifier","src":"6133:18:11"},"nodeType":"YulFunctionCall","src":"6133:51:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6123:6:11"}]},{"nodeType":"YulAssignment","src":"6193:43:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6220:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6231:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6216:3:11"},"nodeType":"YulFunctionCall","src":"6216:19:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6203:12:11"},"nodeType":"YulFunctionCall","src":"6203:33:11"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"6193:6:11"}]},{"nodeType":"YulAssignment","src":"6245:51:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6280:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6291:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6276:3:11"},"nodeType":"YulFunctionCall","src":"6276:19:11"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6255:20:11"},"nodeType":"YulFunctionCall","src":"6255:41:11"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"6245:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"6305:49:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6338:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6349:3:11","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6334:3:11"},"nodeType":"YulFunctionCall","src":"6334:19:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6321:12:11"},"nodeType":"YulFunctionCall","src":"6321:33:11"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"6309:8:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"6383:26:11","statements":[{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"6392:6:11"},{"name":"value6","nodeType":"YulIdentifier","src":"6400:6:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6385:6:11"},"nodeType":"YulFunctionCall","src":"6385:22:11"},"nodeType":"YulExpressionStatement","src":"6385:22:11"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"6369:8:11"},{"name":"_1","nodeType":"YulIdentifier","src":"6379:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6366:2:11"},"nodeType":"YulFunctionCall","src":"6366:16:11"},"nodeType":"YulIf","src":"6363:2:11"},{"nodeType":"YulAssignment","src":"6418:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6451:9:11"},{"name":"offset_1","nodeType":"YulIdentifier","src":"6462:8:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6447:3:11"},"nodeType":"YulFunctionCall","src":"6447:24:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6473:7:11"}],"functionName":{"name":"abi_decode_t_bytes","nodeType":"YulIdentifier","src":"6428:18:11"},"nodeType":"YulFunctionCall","src":"6428:53:11"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"6418:6:11"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptrt_uint256t_addresst_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5670:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5681:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5693:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5701:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5709:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5717:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5725:6:11","type":""},{"name":"value5","nodeType":"YulTypedName","src":"5733:6:11","type":""},{"name":"value6","nodeType":"YulTypedName","src":"5741:6:11","type":""}],"src":"5561:926:11"},{"body":{"nodeType":"YulBlock","src":"6666:675:11","statements":[{"body":{"nodeType":"YulBlock","src":"6713:26:11","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6722:6:11"},{"name":"value2","nodeType":"YulIdentifier","src":"6730:6:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6715:6:11"},"nodeType":"YulFunctionCall","src":"6715:22:11"},"nodeType":"YulExpressionStatement","src":"6715:22:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6687:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"6696:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6683:3:11"},"nodeType":"YulFunctionCall","src":"6683:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"6708:3:11","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6679:3:11"},"nodeType":"YulFunctionCall","src":"6679:33:11"},"nodeType":"YulIf","src":"6676:2:11"},{"nodeType":"YulAssignment","src":"6748:33:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6771:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6758:12:11"},"nodeType":"YulFunctionCall","src":"6758:23:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6748:6:11"}]},{"nodeType":"YulAssignment","src":"6790:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6817:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6828:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6813:3:11"},"nodeType":"YulFunctionCall","src":"6813:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6800:12:11"},"nodeType":"YulFunctionCall","src":"6800:32:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6790:6:11"}]},{"nodeType":"YulAssignment","src":"6841:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6868:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6879:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6864:3:11"},"nodeType":"YulFunctionCall","src":"6864:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6851:12:11"},"nodeType":"YulFunctionCall","src":"6851:32:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6841:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"6892:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6923:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6934:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6919:3:11"},"nodeType":"YulFunctionCall","src":"6919:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6906:12:11"},"nodeType":"YulFunctionCall","src":"6906:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6896:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6947:28:11","value":{"kind":"number","nodeType":"YulLiteral","src":"6957:18:11","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6951:2:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"7002:26:11","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"7011:6:11"},{"name":"value4","nodeType":"YulIdentifier","src":"7019:6:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7004:6:11"},"nodeType":"YulFunctionCall","src":"7004:22:11"},"nodeType":"YulExpressionStatement","src":"7004:22:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6990:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"6998:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6987:2:11"},"nodeType":"YulFunctionCall","src":"6987:14:11"},"nodeType":"YulIf","src":"6984:2:11"},{"nodeType":"YulAssignment","src":"7037:61:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7070:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"7081:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7066:3:11"},"nodeType":"YulFunctionCall","src":"7066:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7090:7:11"}],"functionName":{"name":"abi_decode_t_bytes","nodeType":"YulIdentifier","src":"7047:18:11"},"nodeType":"YulFunctionCall","src":"7047:51:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7037:6:11"}]},{"nodeType":"YulAssignment","src":"7107:43:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7134:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7145:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7130:3:11"},"nodeType":"YulFunctionCall","src":"7130:19:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7117:12:11"},"nodeType":"YulFunctionCall","src":"7117:33:11"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7107:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"7159:49:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7192:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7203:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7188:3:11"},"nodeType":"YulFunctionCall","src":"7188:19:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7175:12:11"},"nodeType":"YulFunctionCall","src":"7175:33:11"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"7163:8:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"7237:26:11","statements":[{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"7246:6:11"},{"name":"value5","nodeType":"YulIdentifier","src":"7254:6:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7239:6:11"},"nodeType":"YulFunctionCall","src":"7239:22:11"},"nodeType":"YulExpressionStatement","src":"7239:22:11"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"7223:8:11"},{"name":"_1","nodeType":"YulIdentifier","src":"7233:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7220:2:11"},"nodeType":"YulFunctionCall","src":"7220:16:11"},"nodeType":"YulIf","src":"7217:2:11"},{"nodeType":"YulAssignment","src":"7272:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7305:9:11"},{"name":"offset_1","nodeType":"YulIdentifier","src":"7316:8:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7301:3:11"},"nodeType":"YulFunctionCall","src":"7301:24:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7327:7:11"}],"functionName":{"name":"abi_decode_t_bytes","nodeType":"YulIdentifier","src":"7282:18:11"},"nodeType":"YulFunctionCall","src":"7282:53:11"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"7272:6:11"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptrt_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6592:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6603:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6615:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6623:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6631:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6639:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6647:6:11","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6655:6:11","type":""}],"src":"6492:849:11"},{"body":{"nodeType":"YulBlock","src":"7468:451:11","statements":[{"body":{"nodeType":"YulBlock","src":"7514:26:11","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7523:6:11"},{"name":"value2","nodeType":"YulIdentifier","src":"7531:6:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7516:6:11"},"nodeType":"YulFunctionCall","src":"7516:22:11"},"nodeType":"YulExpressionStatement","src":"7516:22:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7489:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"7498:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7485:3:11"},"nodeType":"YulFunctionCall","src":"7485:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"7510:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7481:3:11"},"nodeType":"YulFunctionCall","src":"7481:32:11"},"nodeType":"YulIf","src":"7478:2:11"},{"nodeType":"YulAssignment","src":"7549:40:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7579:9:11"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"7559:19:11"},"nodeType":"YulFunctionCall","src":"7559:30:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7549:6:11"}]},{"nodeType":"YulAssignment","src":"7598:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7625:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7636:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7621:3:11"},"nodeType":"YulFunctionCall","src":"7621:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7608:12:11"},"nodeType":"YulFunctionCall","src":"7608:32:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7598:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"7649:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7680:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7691:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7676:3:11"},"nodeType":"YulFunctionCall","src":"7676:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7663:12:11"},"nodeType":"YulFunctionCall","src":"7663:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7653:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"7738:26:11","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7747:6:11"},{"name":"value2","nodeType":"YulIdentifier","src":"7755:6:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7740:6:11"},"nodeType":"YulFunctionCall","src":"7740:22:11"},"nodeType":"YulExpressionStatement","src":"7740:22:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7710:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7718:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7707:2:11"},"nodeType":"YulFunctionCall","src":"7707:30:11"},"nodeType":"YulIf","src":"7704:2:11"},{"nodeType":"YulVariableDeclaration","src":"7773:86:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7831:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"7842:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7827:3:11"},"nodeType":"YulFunctionCall","src":"7827:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7851:7:11"}],"functionName":{"name":"abi_decode_t_bytes_calldata","nodeType":"YulIdentifier","src":"7799:27:11"},"nodeType":"YulFunctionCall","src":"7799:60:11"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"7777:8:11","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"7787:8:11","type":""}]},{"nodeType":"YulAssignment","src":"7868:18:11","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"7878:8:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7868:6:11"}]},{"nodeType":"YulAssignment","src":"7895:18:11","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"7905:8:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7895:6:11"}]}]},"name":"abi_decode_tuple_t_uint32t_bytes32t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7410:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7421:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7433:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7441:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7449:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7457:6:11","type":""}],"src":"7346:573:11"},{"body":{"nodeType":"YulBlock","src":"8062:510:11","statements":[{"body":{"nodeType":"YulBlock","src":"8109:26:11","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8118:6:11"},{"name":"value2","nodeType":"YulIdentifier","src":"8126:6:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8111:6:11"},"nodeType":"YulFunctionCall","src":"8111:22:11"},"nodeType":"YulExpressionStatement","src":"8111:22:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8083:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"8092:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8079:3:11"},"nodeType":"YulFunctionCall","src":"8079:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"8104:3:11","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8075:3:11"},"nodeType":"YulFunctionCall","src":"8075:33:11"},"nodeType":"YulIf","src":"8072:2:11"},{"nodeType":"YulAssignment","src":"8144:40:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8174:9:11"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"8154:19:11"},"nodeType":"YulFunctionCall","src":"8154:30:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8144:6:11"}]},{"nodeType":"YulAssignment","src":"8193:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8220:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8231:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8216:3:11"},"nodeType":"YulFunctionCall","src":"8216:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8203:12:11"},"nodeType":"YulFunctionCall","src":"8203:32:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8193:6:11"}]},{"nodeType":"YulAssignment","src":"8244:49:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8278:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8289:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8274:3:11"},"nodeType":"YulFunctionCall","src":"8274:18:11"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"8254:19:11"},"nodeType":"YulFunctionCall","src":"8254:39:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8244:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"8302:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8333:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8344:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8329:3:11"},"nodeType":"YulFunctionCall","src":"8329:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8316:12:11"},"nodeType":"YulFunctionCall","src":"8316:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8306:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"8391:26:11","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"8400:6:11"},{"name":"value4","nodeType":"YulIdentifier","src":"8408:6:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8393:6:11"},"nodeType":"YulFunctionCall","src":"8393:22:11"},"nodeType":"YulExpressionStatement","src":"8393:22:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8363:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8371:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8360:2:11"},"nodeType":"YulFunctionCall","src":"8360:30:11"},"nodeType":"YulIf","src":"8357:2:11"},{"nodeType":"YulVariableDeclaration","src":"8426:86:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8484:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"8495:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8480:3:11"},"nodeType":"YulFunctionCall","src":"8480:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8504:7:11"}],"functionName":{"name":"abi_decode_t_bytes_calldata","nodeType":"YulIdentifier","src":"8452:27:11"},"nodeType":"YulFunctionCall","src":"8452:60:11"},"variables":[{"name":"value3_1","nodeType":"YulTypedName","src":"8430:8:11","type":""},{"name":"value4_1","nodeType":"YulTypedName","src":"8440:8:11","type":""}]},{"nodeType":"YulAssignment","src":"8521:18:11","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"8531:8:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"8521:6:11"}]},{"nodeType":"YulAssignment","src":"8548:18:11","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"8558:8:11"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"8548:6:11"}]}]},"name":"abi_decode_tuple_t_uint32t_bytes32t_uint32t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7996:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8007:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8019:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8027:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8035:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8043:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8051:6:11","type":""}],"src":"7924:648:11"},{"body":{"nodeType":"YulBlock","src":"8620:50:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8637:3:11"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8656:5:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8649:6:11"},"nodeType":"YulFunctionCall","src":"8649:13:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8642:6:11"},"nodeType":"YulFunctionCall","src":"8642:21:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8630:6:11"},"nodeType":"YulFunctionCall","src":"8630:34:11"},"nodeType":"YulExpressionStatement","src":"8630:34:11"}]},"name":"abi_encode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8604:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8611:3:11","type":""}],"src":"8577:93:11"},{"body":{"nodeType":"YulBlock","src":"8726:208:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8736:26:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8756:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8750:5:11"},"nodeType":"YulFunctionCall","src":"8750:12:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8740:6:11","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8778:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"8783:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8771:6:11"},"nodeType":"YulFunctionCall","src":"8771:19:11"},"nodeType":"YulExpressionStatement","src":"8771:19:11"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8825:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"8832:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8821:3:11"},"nodeType":"YulFunctionCall","src":"8821:16:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8843:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"8848:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8839:3:11"},"nodeType":"YulFunctionCall","src":"8839:14:11"},{"name":"length","nodeType":"YulIdentifier","src":"8855:6:11"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"8799:21:11"},"nodeType":"YulFunctionCall","src":"8799:63:11"},"nodeType":"YulExpressionStatement","src":"8799:63:11"},{"nodeType":"YulAssignment","src":"8871:57:11","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8886:3:11"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8899:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8907:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8895:3:11"},"nodeType":"YulFunctionCall","src":"8895:15:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8916:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8912:3:11"},"nodeType":"YulFunctionCall","src":"8912:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8891:3:11"},"nodeType":"YulFunctionCall","src":"8891:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8882:3:11"},"nodeType":"YulFunctionCall","src":"8882:39:11"},{"kind":"number","nodeType":"YulLiteral","src":"8923:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8878:3:11"},"nodeType":"YulFunctionCall","src":"8878:50:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8871:3:11"}]}]},"name":"abi_encode_t_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8703:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8710:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8718:3:11","type":""}],"src":"8675:259:11"},{"body":{"nodeType":"YulBlock","src":"9002:80:11","statements":[{"body":{"nodeType":"YulBlock","src":"9036:13:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"invalid","nodeType":"YulIdentifier","src":"9038:7:11"},"nodeType":"YulFunctionCall","src":"9038:9:11"},"nodeType":"YulExpressionStatement","src":"9038:9:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9025:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"9032:1:11","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9022:2:11"},"nodeType":"YulFunctionCall","src":"9022:12:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9015:6:11"},"nodeType":"YulFunctionCall","src":"9015:20:11"},"nodeType":"YulIf","src":"9012:2:11"},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9065:3:11"},{"name":"value","nodeType":"YulIdentifier","src":"9070:5:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9058:6:11"},"nodeType":"YulFunctionCall","src":"9058:18:11"},"nodeType":"YulExpressionStatement","src":"9058:18:11"}]},"name":"abi_encode_t_enum$_ClassificationEnum","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8986:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8993:3:11","type":""}],"src":"8939:143:11"},{"body":{"nodeType":"YulBlock","src":"9148:80:11","statements":[{"body":{"nodeType":"YulBlock","src":"9182:13:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"invalid","nodeType":"YulIdentifier","src":"9184:7:11"},"nodeType":"YulFunctionCall","src":"9184:9:11"},"nodeType":"YulExpressionStatement","src":"9184:9:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9171:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"9178:1:11","type":"","value":"4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9168:2:11"},"nodeType":"YulFunctionCall","src":"9168:12:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9161:6:11"},"nodeType":"YulFunctionCall","src":"9161:20:11"},"nodeType":"YulIf","src":"9158:2:11"},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9211:3:11"},{"name":"value","nodeType":"YulIdentifier","src":"9216:5:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9204:6:11"},"nodeType":"YulFunctionCall","src":"9204:18:11"},"nodeType":"YulExpressionStatement","src":"9204:18:11"}]},"name":"abi_encode_t_enum$_DisasterTypeEnum","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9132:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9139:3:11","type":""}],"src":"9087:141:11"},{"body":{"nodeType":"YulBlock","src":"9371:692:11","statements":[{"nodeType":"YulVariableDeclaration","src":"9381:14:11","value":{"name":"end","nodeType":"YulIdentifier","src":"9392:3:11"},"variables":[{"name":"ret","nodeType":"YulTypedName","src":"9385:3:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9404:30:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9427:6:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"9421:5:11"},"nodeType":"YulFunctionCall","src":"9421:13:11"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"9408:9:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9443:11:11","value":{"kind":"number","nodeType":"YulLiteral","src":"9453:1:11","type":"","value":"1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9447:2:11","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"9504:119:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9525:3:11"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"9534:9:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9549:3:11","type":"","value":"255"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9545:3:11"},"nodeType":"YulFunctionCall","src":"9545:8:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9530:3:11"},"nodeType":"YulFunctionCall","src":"9530:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9518:6:11"},"nodeType":"YulFunctionCall","src":"9518:37:11"},"nodeType":"YulExpressionStatement","src":"9518:37:11"},{"nodeType":"YulAssignment","src":"9568:45:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9579:3:11"},{"arguments":[{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"9592:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9603:1:11","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9588:3:11"},"nodeType":"YulFunctionCall","src":"9588:17:11"},{"kind":"number","nodeType":"YulLiteral","src":"9607:4:11","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9584:3:11"},"nodeType":"YulFunctionCall","src":"9584:28:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9575:3:11"},"nodeType":"YulFunctionCall","src":"9575:38:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"9568:3:11"}]}]},"nodeType":"YulCase","src":"9497:126:11","value":{"kind":"number","nodeType":"YulLiteral","src":"9502:1:11","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"9639:399:11","statements":[{"nodeType":"YulVariableDeclaration","src":"9653:31:11","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"9671:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9682:1:11","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9667:3:11"},"nodeType":"YulFunctionCall","src":"9667:17:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9657:6:11","type":""}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"9704:3:11"},{"name":"value0","nodeType":"YulIdentifier","src":"9709:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9697:6:11"},"nodeType":"YulFunctionCall","src":"9697:19:11"},"nodeType":"YulExpressionStatement","src":"9697:19:11"},{"nodeType":"YulVariableDeclaration","src":"9729:14:11","value":{"kind":"number","nodeType":"YulLiteral","src":"9739:4:11","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"9733:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9756:33:11","value":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"9781:3:11"},{"name":"_2","nodeType":"YulIdentifier","src":"9786:2:11"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"9771:9:11"},"nodeType":"YulFunctionCall","src":"9771:18:11"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"9760:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9802:12:11","value":{"name":"end","nodeType":"YulIdentifier","src":"9811:3:11"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9806:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"9881:111:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9910:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"9915:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9906:3:11"},"nodeType":"YulFunctionCall","src":"9906:11:11"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"9925:7:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"9919:5:11"},"nodeType":"YulFunctionCall","src":"9919:14:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9899:6:11"},"nodeType":"YulFunctionCall","src":"9899:35:11"},"nodeType":"YulExpressionStatement","src":"9899:35:11"},{"nodeType":"YulAssignment","src":"9951:27:11","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"9966:7:11"},{"name":"_1","nodeType":"YulIdentifier","src":"9975:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9962:3:11"},"nodeType":"YulFunctionCall","src":"9962:16:11"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"9951:7:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9838:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"9841:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9835:2:11"},"nodeType":"YulFunctionCall","src":"9835:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9849:19:11","statements":[{"nodeType":"YulAssignment","src":"9851:15:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9860:1:11"},{"name":"_2","nodeType":"YulIdentifier","src":"9863:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9856:3:11"},"nodeType":"YulFunctionCall","src":"9856:10:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9851:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"9831:3:11","statements":[]},"src":"9827:165:11"},{"nodeType":"YulAssignment","src":"10005:23:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10016:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"10021:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10012:3:11"},"nodeType":"YulFunctionCall","src":"10012:16:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10005:3:11"}]}]},"nodeType":"YulCase","src":"9632:406:11","value":{"kind":"number","nodeType":"YulLiteral","src":"9637:1:11","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"9474:9:11"},{"name":"_1","nodeType":"YulIdentifier","src":"9485:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9470:3:11"},"nodeType":"YulFunctionCall","src":"9470:18:11"},"nodeType":"YulSwitch","src":"9463:575:11"},{"nodeType":"YulAssignment","src":"10047:10:11","value":{"name":"ret","nodeType":"YulIdentifier","src":"10054:3:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10047:3:11"}]}]},"name":"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9347:3:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9352:6:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9363:3:11","type":""}],"src":"9233:830:11"},{"body":{"nodeType":"YulBlock","src":"10316:144:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10333:3:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10342:3:11","type":"","value":"240"},{"kind":"number","nodeType":"YulLiteral","src":"10347:4:11","type":"","value":"6401"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10338:3:11"},"nodeType":"YulFunctionCall","src":"10338:14:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10326:6:11"},"nodeType":"YulFunctionCall","src":"10326:27:11"},"nodeType":"YulExpressionStatement","src":"10326:27:11"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10373:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"10378:1:11","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10369:3:11"},"nodeType":"YulFunctionCall","src":"10369:11:11"},{"name":"value0","nodeType":"YulIdentifier","src":"10382:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10362:6:11"},"nodeType":"YulFunctionCall","src":"10362:27:11"},"nodeType":"YulExpressionStatement","src":"10362:27:11"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10409:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"10414:2:11","type":"","value":"34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10405:3:11"},"nodeType":"YulFunctionCall","src":"10405:12:11"},{"name":"value1","nodeType":"YulIdentifier","src":"10419:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10398:6:11"},"nodeType":"YulFunctionCall","src":"10398:28:11"},"nodeType":"YulExpressionStatement","src":"10398:28:11"},{"nodeType":"YulAssignment","src":"10435:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10446:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"10451:2:11","type":"","value":"66"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10442:3:11"},"nodeType":"YulFunctionCall","src":"10442:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10435:3:11"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10284:3:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10289:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10297:6:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10308:3:11","type":""}],"src":"10068:392:11"},{"body":{"nodeType":"YulBlock","src":"10566:102:11","statements":[{"nodeType":"YulAssignment","src":"10576:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10588:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10599:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10584:3:11"},"nodeType":"YulFunctionCall","src":"10584:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10576:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10618:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10633:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10649:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"10654:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10645:3:11"},"nodeType":"YulFunctionCall","src":"10645:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"10658:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10641:3:11"},"nodeType":"YulFunctionCall","src":"10641:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10629:3:11"},"nodeType":"YulFunctionCall","src":"10629:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10611:6:11"},"nodeType":"YulFunctionCall","src":"10611:51:11"},"nodeType":"YulExpressionStatement","src":"10611:51:11"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10535:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10546:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10557:4:11","type":""}],"src":"10465:203:11"},{"body":{"nodeType":"YulBlock","src":"10824:484:11","statements":[{"nodeType":"YulVariableDeclaration","src":"10834:12:11","value":{"kind":"number","nodeType":"YulLiteral","src":"10844:2:11","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10838:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10855:32:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10873:9:11"},{"name":"_1","nodeType":"YulIdentifier","src":"10884:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10869:3:11"},"nodeType":"YulFunctionCall","src":"10869:18:11"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"10859:6:11","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10903:9:11"},{"name":"_1","nodeType":"YulIdentifier","src":"10914:2:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10896:6:11"},"nodeType":"YulFunctionCall","src":"10896:21:11"},"nodeType":"YulExpressionStatement","src":"10896:21:11"},{"nodeType":"YulVariableDeclaration","src":"10926:17:11","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"10937:6:11"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"10930:3:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10952:27:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10972:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10966:5:11"},"nodeType":"YulFunctionCall","src":"10966:13:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10956:6:11","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"10995:6:11"},{"name":"length","nodeType":"YulIdentifier","src":"11003:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10988:6:11"},"nodeType":"YulFunctionCall","src":"10988:22:11"},"nodeType":"YulExpressionStatement","src":"10988:22:11"},{"nodeType":"YulAssignment","src":"11019:25:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11030:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11041:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11026:3:11"},"nodeType":"YulFunctionCall","src":"11026:18:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11019:3:11"}]},{"nodeType":"YulVariableDeclaration","src":"11053:29:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11071:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"11079:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11067:3:11"},"nodeType":"YulFunctionCall","src":"11067:15:11"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"11057:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11091:13:11","value":{"name":"tail","nodeType":"YulIdentifier","src":"11100:4:11"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11095:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"11162:120:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11183:3:11"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11194:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11188:5:11"},"nodeType":"YulFunctionCall","src":"11188:13:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11176:6:11"},"nodeType":"YulFunctionCall","src":"11176:26:11"},"nodeType":"YulExpressionStatement","src":"11176:26:11"},{"nodeType":"YulAssignment","src":"11215:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11226:3:11"},{"name":"_1","nodeType":"YulIdentifier","src":"11231:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11222:3:11"},"nodeType":"YulFunctionCall","src":"11222:12:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11215:3:11"}]},{"nodeType":"YulAssignment","src":"11247:25:11","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11261:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"11269:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11257:3:11"},"nodeType":"YulFunctionCall","src":"11257:15:11"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11247:6:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11124:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"11127:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11121:2:11"},"nodeType":"YulFunctionCall","src":"11121:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11135:18:11","statements":[{"nodeType":"YulAssignment","src":"11137:14:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11146:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"11149:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11142:3:11"},"nodeType":"YulFunctionCall","src":"11142:9:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11137:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"11117:3:11","statements":[]},"src":"11113:169:11"},{"nodeType":"YulAssignment","src":"11291:11:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"11299:3:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11291:4:11"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10793:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10804:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10815:4:11","type":""}],"src":"10673:635:11"},{"body":{"nodeType":"YulBlock","src":"11408:92:11","statements":[{"nodeType":"YulAssignment","src":"11418:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11430:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11441:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11426:3:11"},"nodeType":"YulFunctionCall","src":"11426:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11418:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11460:9:11"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11485:6:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11478:6:11"},"nodeType":"YulFunctionCall","src":"11478:14:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11471:6:11"},"nodeType":"YulFunctionCall","src":"11471:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11453:6:11"},"nodeType":"YulFunctionCall","src":"11453:41:11"},"nodeType":"YulExpressionStatement","src":"11453:41:11"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11377:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11388:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11399:4:11","type":""}],"src":"11313:187:11"},{"body":{"nodeType":"YulBlock","src":"11606:76:11","statements":[{"nodeType":"YulAssignment","src":"11616:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11628:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11639:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11624:3:11"},"nodeType":"YulFunctionCall","src":"11624:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11616:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11658:9:11"},{"name":"value0","nodeType":"YulIdentifier","src":"11669:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11651:6:11"},"nodeType":"YulFunctionCall","src":"11651:25:11"},"nodeType":"YulExpressionStatement","src":"11651:25:11"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11575:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11586:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11597:4:11","type":""}],"src":"11505:177:11"},{"body":{"nodeType":"YulBlock","src":"11928:320:11","statements":[{"nodeType":"YulAssignment","src":"11938:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11950:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11961:3:11","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11946:3:11"},"nodeType":"YulFunctionCall","src":"11946:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11938:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11981:9:11"},{"name":"value0","nodeType":"YulIdentifier","src":"11992:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11974:6:11"},"nodeType":"YulFunctionCall","src":"11974:25:11"},"nodeType":"YulExpressionStatement","src":"11974:25:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12019:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12030:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12015:3:11"},"nodeType":"YulFunctionCall","src":"12015:18:11"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12039:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12055:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"12060:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12051:3:11"},"nodeType":"YulFunctionCall","src":"12051:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"12064:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12047:3:11"},"nodeType":"YulFunctionCall","src":"12047:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12035:3:11"},"nodeType":"YulFunctionCall","src":"12035:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12008:6:11"},"nodeType":"YulFunctionCall","src":"12008:60:11"},"nodeType":"YulExpressionStatement","src":"12008:60:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12088:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12099:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12084:3:11"},"nodeType":"YulFunctionCall","src":"12084:18:11"},{"name":"value2","nodeType":"YulIdentifier","src":"12104:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12077:6:11"},"nodeType":"YulFunctionCall","src":"12077:34:11"},"nodeType":"YulExpressionStatement","src":"12077:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12131:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12142:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12127:3:11"},"nodeType":"YulFunctionCall","src":"12127:18:11"},{"name":"value3","nodeType":"YulIdentifier","src":"12147:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12120:6:11"},"nodeType":"YulFunctionCall","src":"12120:34:11"},"nodeType":"YulExpressionStatement","src":"12120:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12174:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12185:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12170:3:11"},"nodeType":"YulFunctionCall","src":"12170:19:11"},{"name":"value4","nodeType":"YulIdentifier","src":"12191:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12163:6:11"},"nodeType":"YulFunctionCall","src":"12163:35:11"},"nodeType":"YulExpressionStatement","src":"12163:35:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12218:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12229:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12214:3:11"},"nodeType":"YulFunctionCall","src":"12214:19:11"},{"name":"value5","nodeType":"YulIdentifier","src":"12235:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12207:6:11"},"nodeType":"YulFunctionCall","src":"12207:35:11"},"nodeType":"YulExpressionStatement","src":"12207:35:11"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256_t_bytes32_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256_t_bytes32_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11857:9:11","type":""},{"name":"value5","nodeType":"YulTypedName","src":"11868:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11876:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11884:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11892:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11900:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11908:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11919:4:11","type":""}],"src":"11687:561:11"},{"body":{"nodeType":"YulBlock","src":"12368:102:11","statements":[{"nodeType":"YulAssignment","src":"12378:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12390:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12401:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12386:3:11"},"nodeType":"YulFunctionCall","src":"12386:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12378:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12420:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12435:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12451:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"12456:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12447:3:11"},"nodeType":"YulFunctionCall","src":"12447:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"12460:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12443:3:11"},"nodeType":"YulFunctionCall","src":"12443:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12431:3:11"},"nodeType":"YulFunctionCall","src":"12431:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12413:6:11"},"nodeType":"YulFunctionCall","src":"12413:51:11"},"nodeType":"YulExpressionStatement","src":"12413:51:11"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$658__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12337:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12348:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12359:4:11","type":""}],"src":"12253:217:11"},{"body":{"nodeType":"YulBlock","src":"12720:291:11","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12766:6:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"12774:9:11"}],"functionName":{"name":"abi_encode_t_enum$_DisasterTypeEnum","nodeType":"YulIdentifier","src":"12730:35:11"},"nodeType":"YulFunctionCall","src":"12730:54:11"},"nodeType":"YulExpressionStatement","src":"12730:54:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12831:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12843:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12854:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12839:3:11"},"nodeType":"YulFunctionCall","src":"12839:18:11"}],"functionName":{"name":"abi_encode_t_enum$_ClassificationEnum","nodeType":"YulIdentifier","src":"12793:37:11"},"nodeType":"YulFunctionCall","src":"12793:65:11"},"nodeType":"YulExpressionStatement","src":"12793:65:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12878:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12889:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12874:3:11"},"nodeType":"YulFunctionCall","src":"12874:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"12894:3:11","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12867:6:11"},"nodeType":"YulFunctionCall","src":"12867:31:11"},"nodeType":"YulExpressionStatement","src":"12867:31:11"},{"nodeType":"YulAssignment","src":"12907:55:11","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12934:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12946:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12957:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12942:3:11"},"nodeType":"YulFunctionCall","src":"12942:19:11"}],"functionName":{"name":"abi_encode_t_bytes","nodeType":"YulIdentifier","src":"12915:18:11"},"nodeType":"YulFunctionCall","src":"12915:47:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12907:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12982:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12993:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12978:3:11"},"nodeType":"YulFunctionCall","src":"12978:18:11"},{"name":"value3","nodeType":"YulIdentifier","src":"12998:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12971:6:11"},"nodeType":"YulFunctionCall","src":"12971:34:11"},"nodeType":"YulExpressionStatement","src":"12971:34:11"}]},"name":"abi_encode_tuple_t_enum$_DisasterTypeEnum_$1669_t_enum$_ClassificationEnum_$1672_t_string_memory_ptr_t_uint256__to_t_uint8_t_uint8_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12665:9:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12676:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12684:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12692:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12700:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12711:4:11","type":""}],"src":"12475:536:11"},{"body":{"nodeType":"YulBlock","src":"13228:248:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13245:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13260:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"13268:10:11","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13256:3:11"},"nodeType":"YulFunctionCall","src":"13256:23:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13238:6:11"},"nodeType":"YulFunctionCall","src":"13238:42:11"},"nodeType":"YulExpressionStatement","src":"13238:42:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13300:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13311:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13296:3:11"},"nodeType":"YulFunctionCall","src":"13296:18:11"},{"name":"value1","nodeType":"YulIdentifier","src":"13316:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13289:6:11"},"nodeType":"YulFunctionCall","src":"13289:34:11"},"nodeType":"YulExpressionStatement","src":"13289:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13343:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13354:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13339:3:11"},"nodeType":"YulFunctionCall","src":"13339:18:11"},{"name":"value2","nodeType":"YulIdentifier","src":"13359:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13332:6:11"},"nodeType":"YulFunctionCall","src":"13332:34:11"},"nodeType":"YulExpressionStatement","src":"13332:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13386:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13397:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13382:3:11"},"nodeType":"YulFunctionCall","src":"13382:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"13402:3:11","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13375:6:11"},"nodeType":"YulFunctionCall","src":"13375:31:11"},"nodeType":"YulExpressionStatement","src":"13375:31:11"},{"nodeType":"YulAssignment","src":"13415:55:11","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"13442:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13454:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13465:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13450:3:11"},"nodeType":"YulFunctionCall","src":"13450:19:11"}],"functionName":{"name":"abi_encode_t_bytes","nodeType":"YulIdentifier","src":"13423:18:11"},"nodeType":"YulFunctionCall","src":"13423:47:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13415:4:11"}]}]},"name":"abi_encode_tuple_t_rational_6_by_1_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint32_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13173:9:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13184:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13192:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13200:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13208:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13219:4:11","type":""}],"src":"13016:460:11"},{"body":{"nodeType":"YulBlock","src":"13655:169:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13672:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13683:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13665:6:11"},"nodeType":"YulFunctionCall","src":"13665:21:11"},"nodeType":"YulExpressionStatement","src":"13665:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13706:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13717:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13702:3:11"},"nodeType":"YulFunctionCall","src":"13702:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"13722:2:11","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13695:6:11"},"nodeType":"YulFunctionCall","src":"13695:30:11"},"nodeType":"YulExpressionStatement","src":"13695:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13745:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13756:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13741:3:11"},"nodeType":"YulFunctionCall","src":"13741:18:11"},{"kind":"string","nodeType":"YulLiteral","src":"13761:21:11","type":"","value":"NationalityMismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13734:6:11"},"nodeType":"YulFunctionCall","src":"13734:49:11"},"nodeType":"YulExpressionStatement","src":"13734:49:11"},{"nodeType":"YulAssignment","src":"13792:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13804:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13815:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13800:3:11"},"nodeType":"YulFunctionCall","src":"13800:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13792:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_0080df61d19626bcd0b1dc2321b8f7ad75bd0c790e83a846a1a2b44d96f7eb28__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13632:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13646:4:11","type":""}],"src":"13481:343:11"},{"body":{"nodeType":"YulBlock","src":"14003:166:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14020:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14031:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14013:6:11"},"nodeType":"YulFunctionCall","src":"14013:21:11"},"nodeType":"YulExpressionStatement","src":"14013:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14054:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14065:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14050:3:11"},"nodeType":"YulFunctionCall","src":"14050:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"14070:2:11","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14043:6:11"},"nodeType":"YulFunctionCall","src":"14043:30:11"},"nodeType":"YulExpressionStatement","src":"14043:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14093:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14104:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14089:3:11"},"nodeType":"YulFunctionCall","src":"14089:18:11"},{"kind":"string","nodeType":"YulLiteral","src":"14109:18:11","type":"","value":"InvalidSignature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14082:6:11"},"nodeType":"YulFunctionCall","src":"14082:46:11"},"nodeType":"YulExpressionStatement","src":"14082:46:11"},{"nodeType":"YulAssignment","src":"14137:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14149:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14160:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14145:3:11"},"nodeType":"YulFunctionCall","src":"14145:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14137:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_26f94074f55601aaa609f6dfadf4b7fc63d9f3c56ec02fb00e9d0804ff24ff6f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13980:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13994:4:11","type":""}],"src":"13829:340:11"},{"body":{"nodeType":"YulBlock","src":"14348:168:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14365:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14376:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14358:6:11"},"nodeType":"YulFunctionCall","src":"14358:21:11"},"nodeType":"YulExpressionStatement","src":"14358:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14399:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14410:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14395:3:11"},"nodeType":"YulFunctionCall","src":"14395:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"14415:2:11","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14388:6:11"},"nodeType":"YulFunctionCall","src":"14388:30:11"},"nodeType":"YulExpressionStatement","src":"14388:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14438:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14449:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14434:3:11"},"nodeType":"YulFunctionCall","src":"14434:18:11"},{"kind":"string","nodeType":"YulLiteral","src":"14454:20:11","type":"","value":"InvalidNationality"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14427:6:11"},"nodeType":"YulFunctionCall","src":"14427:48:11"},"nodeType":"YulExpressionStatement","src":"14427:48:11"},{"nodeType":"YulAssignment","src":"14484:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14496:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14507:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14492:3:11"},"nodeType":"YulFunctionCall","src":"14492:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14484:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_458175237385bace94a4d132a3bee7efde50498b86fcf8d7b44596cad42dccdb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14325:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14339:4:11","type":""}],"src":"14174:342:11"},{"body":{"nodeType":"YulBlock","src":"14695:163:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14712:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14723:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14705:6:11"},"nodeType":"YulFunctionCall","src":"14705:21:11"},"nodeType":"YulExpressionStatement","src":"14705:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14746:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14757:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14742:3:11"},"nodeType":"YulFunctionCall","src":"14742:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"14762:2:11","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14735:6:11"},"nodeType":"YulFunctionCall","src":"14735:30:11"},"nodeType":"YulExpressionStatement","src":"14735:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14785:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14796:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14781:3:11"},"nodeType":"YulFunctionCall","src":"14781:18:11"},{"kind":"string","nodeType":"YulLiteral","src":"14801:15:11","type":"","value":"InvalidAmount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14774:6:11"},"nodeType":"YulFunctionCall","src":"14774:43:11"},"nodeType":"YulExpressionStatement","src":"14774:43:11"},{"nodeType":"YulAssignment","src":"14826:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14838:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14849:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14834:3:11"},"nodeType":"YulFunctionCall","src":"14834:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14826:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_483313f3910f88408dc57d1e1e6afbe0d5fb0a2ab36e197f65b49ed489f7c914__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14672:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14686:4:11","type":""}],"src":"14521:337:11"},{"body":{"nodeType":"YulBlock","src":"15037:166:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15054:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15065:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15047:6:11"},"nodeType":"YulFunctionCall","src":"15047:21:11"},"nodeType":"YulExpressionStatement","src":"15047:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15088:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15099:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15084:3:11"},"nodeType":"YulFunctionCall","src":"15084:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"15104:2:11","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15077:6:11"},"nodeType":"YulFunctionCall","src":"15077:30:11"},"nodeType":"YulExpressionStatement","src":"15077:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15127:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15138:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15123:3:11"},"nodeType":"YulFunctionCall","src":"15123:18:11"},{"kind":"string","nodeType":"YulLiteral","src":"15143:18:11","type":"","value":"InvalidRecipient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15116:6:11"},"nodeType":"YulFunctionCall","src":"15116:46:11"},"nodeType":"YulExpressionStatement","src":"15116:46:11"},{"nodeType":"YulAssignment","src":"15171:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15183:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15194:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15179:3:11"},"nodeType":"YulFunctionCall","src":"15179:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15171:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_5a59791da5e1793a3002179f4942b6a9467f5e9aa375b40eb65586f20e547a9f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15014:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15028:4:11","type":""}],"src":"14863:340:11"},{"body":{"nodeType":"YulBlock","src":"15382:161:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15399:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15410:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15392:6:11"},"nodeType":"YulFunctionCall","src":"15392:21:11"},"nodeType":"YulExpressionStatement","src":"15392:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15433:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15444:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15429:3:11"},"nodeType":"YulFunctionCall","src":"15429:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"15449:2:11","type":"","value":"11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15422:6:11"},"nodeType":"YulFunctionCall","src":"15422:30:11"},"nodeType":"YulExpressionStatement","src":"15422:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15472:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15483:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15468:3:11"},"nodeType":"YulFunctionCall","src":"15468:18:11"},{"kind":"string","nodeType":"YulLiteral","src":"15488:13:11","type":"","value":"InvalidPool"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15461:6:11"},"nodeType":"YulFunctionCall","src":"15461:41:11"},"nodeType":"YulExpressionStatement","src":"15461:41:11"},{"nodeType":"YulAssignment","src":"15511:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15523:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15534:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15519:3:11"},"nodeType":"YulFunctionCall","src":"15519:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15511:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_5c68e0213938b1801b388ff78c6baada7bed83db5b5cf0948cc4e453d00382f8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15359:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15373:4:11","type":""}],"src":"15208:335:11"},{"body":{"nodeType":"YulBlock","src":"15722:172:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15739:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15750:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15732:6:11"},"nodeType":"YulFunctionCall","src":"15732:21:11"},"nodeType":"YulExpressionStatement","src":"15732:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15773:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15784:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15769:3:11"},"nodeType":"YulFunctionCall","src":"15769:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"15789:2:11","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15762:6:11"},"nodeType":"YulFunctionCall","src":"15762:30:11"},"nodeType":"YulExpressionStatement","src":"15762:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15812:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15823:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15808:3:11"},"nodeType":"YulFunctionCall","src":"15808:18:11"},{"kind":"string","nodeType":"YulLiteral","src":"15828:24:11","type":"","value":"Internal function only"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15801:6:11"},"nodeType":"YulFunctionCall","src":"15801:52:11"},"nodeType":"YulExpressionStatement","src":"15801:52:11"},{"nodeType":"YulAssignment","src":"15862:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15874:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15885:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15870:3:11"},"nodeType":"YulFunctionCall","src":"15870:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15862:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_6378970b6df3ebf384bf9ab3a985c67d1495bbfa66239ddc466b9b36aabfc3c0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15699:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15713:4:11","type":""}],"src":"15548:346:11"},{"body":{"nodeType":"YulBlock","src":"16073:171:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16090:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16101:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16083:6:11"},"nodeType":"YulFunctionCall","src":"16083:21:11"},"nodeType":"YulExpressionStatement","src":"16083:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16124:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16135:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16120:3:11"},"nodeType":"YulFunctionCall","src":"16120:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"16140:2:11","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16113:6:11"},"nodeType":"YulFunctionCall","src":"16113:30:11"},"nodeType":"YulExpressionStatement","src":"16113:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16163:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16174:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16159:3:11"},"nodeType":"YulFunctionCall","src":"16159:18:11"},{"kind":"string","nodeType":"YulLiteral","src":"16179:23:11","type":"","value":"No hook data provided"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16152:6:11"},"nodeType":"YulFunctionCall","src":"16152:51:11"},"nodeType":"YulExpressionStatement","src":"16152:51:11"},{"nodeType":"YulAssignment","src":"16212:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16224:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16235:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16220:3:11"},"nodeType":"YulFunctionCall","src":"16220:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16212:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_c36ba545cd82429076ebd7f7d2e176f2fe180384a1840447ebeedd850fffb9c5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16050:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16064:4:11","type":""}],"src":"15899:345:11"},{"body":{"nodeType":"YulBlock","src":"16423:162:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16440:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16451:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16433:6:11"},"nodeType":"YulFunctionCall","src":"16433:21:11"},"nodeType":"YulExpressionStatement","src":"16433:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16474:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16485:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16470:3:11"},"nodeType":"YulFunctionCall","src":"16470:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"16490:2:11","type":"","value":"12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16463:6:11"},"nodeType":"YulFunctionCall","src":"16463:30:11"},"nodeType":"YulExpressionStatement","src":"16463:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16513:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16524:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16509:3:11"},"nodeType":"YulFunctionCall","src":"16509:18:11"},{"kind":"string","nodeType":"YulLiteral","src":"16529:14:11","type":"","value":"PoolInactive"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16502:6:11"},"nodeType":"YulFunctionCall","src":"16502:42:11"},"nodeType":"YulExpressionStatement","src":"16502:42:11"},{"nodeType":"YulAssignment","src":"16553:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16565:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16576:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16561:3:11"},"nodeType":"YulFunctionCall","src":"16561:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16553:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_cea4cbe3d2d2029f106bbd6d2c93feedfb34cb9dab628d750e618312175cac3c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16400:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16414:4:11","type":""}],"src":"16249:336:11"},{"body":{"nodeType":"YulBlock","src":"16764:164:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16781:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16792:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16774:6:11"},"nodeType":"YulFunctionCall","src":"16774:21:11"},"nodeType":"YulExpressionStatement","src":"16774:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16815:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16826:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16811:3:11"},"nodeType":"YulFunctionCall","src":"16811:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"16831:2:11","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16804:6:11"},"nodeType":"YulFunctionCall","src":"16804:30:11"},"nodeType":"YulExpressionStatement","src":"16804:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16854:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16865:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16850:3:11"},"nodeType":"YulFunctionCall","src":"16850:18:11"},{"kind":"string","nodeType":"YulLiteral","src":"16870:16:11","type":"","value":"AlreadyClaimed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16843:6:11"},"nodeType":"YulFunctionCall","src":"16843:44:11"},"nodeType":"YulExpressionStatement","src":"16843:44:11"},{"nodeType":"YulAssignment","src":"16896:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16908:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16919:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16904:3:11"},"nodeType":"YulFunctionCall","src":"16904:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16896:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_d1b3442bbeff8c60abd0f004b91e82e19cb839acf9a91a5e5b6c59a74157707b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16741:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16755:4:11","type":""}],"src":"16590:338:11"},{"body":{"nodeType":"YulBlock","src":"17107:167:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17124:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17135:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17117:6:11"},"nodeType":"YulFunctionCall","src":"17117:21:11"},"nodeType":"YulExpressionStatement","src":"17117:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17158:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17169:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17154:3:11"},"nodeType":"YulFunctionCall","src":"17154:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"17174:2:11","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17147:6:11"},"nodeType":"YulFunctionCall","src":"17147:30:11"},"nodeType":"YulExpressionStatement","src":"17147:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17197:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17208:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17193:3:11"},"nodeType":"YulFunctionCall","src":"17193:18:11"},{"kind":"string","nodeType":"YulLiteral","src":"17213:19:11","type":"","value":"InsufficientFunds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17186:6:11"},"nodeType":"YulFunctionCall","src":"17186:47:11"},"nodeType":"YulExpressionStatement","src":"17186:47:11"},{"nodeType":"YulAssignment","src":"17242:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17254:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17265:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17250:3:11"},"nodeType":"YulFunctionCall","src":"17250:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17242:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_d2ce7f36f76fcb4610533d95a01cb9b0fdd2b058fe7ffae027e7112f5480b8df__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17084:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17098:4:11","type":""}],"src":"16933:341:11"},{"body":{"nodeType":"YulBlock","src":"17453:168:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17470:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17481:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17463:6:11"},"nodeType":"YulFunctionCall","src":"17463:21:11"},"nodeType":"YulExpressionStatement","src":"17463:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17504:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17515:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17500:3:11"},"nodeType":"YulFunctionCall","src":"17500:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"17520:2:11","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17493:6:11"},"nodeType":"YulFunctionCall","src":"17493:30:11"},"nodeType":"YulExpressionStatement","src":"17493:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17543:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17554:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17539:3:11"},"nodeType":"YulFunctionCall","src":"17539:18:11"},{"kind":"string","nodeType":"YulLiteral","src":"17559:20:11","type":"","value":"UnauthorizedCaller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17532:6:11"},"nodeType":"YulFunctionCall","src":"17532:48:11"},"nodeType":"YulExpressionStatement","src":"17532:48:11"},{"nodeType":"YulAssignment","src":"17589:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17601:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17612:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17597:3:11"},"nodeType":"YulFunctionCall","src":"17597:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17589:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_ede1a3593ba4cc1179efac6ca3c84eee5b40d87537257a00e5715a9e107e43f2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17430:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17444:4:11","type":""}],"src":"17279:342:11"},{"body":{"nodeType":"YulBlock","src":"17785:362:11","statements":[{"nodeType":"YulAssignment","src":"17795:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17807:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17818:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17803:3:11"},"nodeType":"YulFunctionCall","src":"17803:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17795:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17838:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17855:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17849:5:11"},"nodeType":"YulFunctionCall","src":"17849:13:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17831:6:11"},"nodeType":"YulFunctionCall","src":"17831:32:11"},"nodeType":"YulExpressionStatement","src":"17831:32:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17883:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17894:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17879:3:11"},"nodeType":"YulFunctionCall","src":"17879:20:11"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17911:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"17919:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17907:3:11"},"nodeType":"YulFunctionCall","src":"17907:17:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17901:5:11"},"nodeType":"YulFunctionCall","src":"17901:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17872:6:11"},"nodeType":"YulFunctionCall","src":"17872:54:11"},"nodeType":"YulExpressionStatement","src":"17872:54:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17946:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17957:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17942:3:11"},"nodeType":"YulFunctionCall","src":"17942:20:11"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17978:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"17986:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17974:3:11"},"nodeType":"YulFunctionCall","src":"17974:17:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17968:5:11"},"nodeType":"YulFunctionCall","src":"17968:24:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18002:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"18007:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17998:3:11"},"nodeType":"YulFunctionCall","src":"17998:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"18011:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17994:3:11"},"nodeType":"YulFunctionCall","src":"17994:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17964:3:11"},"nodeType":"YulFunctionCall","src":"17964:50:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17935:6:11"},"nodeType":"YulFunctionCall","src":"17935:80:11"},"nodeType":"YulExpressionStatement","src":"17935:80:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18035:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18046:4:11","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18031:3:11"},"nodeType":"YulFunctionCall","src":"18031:20:11"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18063:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"18071:4:11","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18059:3:11"},"nodeType":"YulFunctionCall","src":"18059:17:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18053:5:11"},"nodeType":"YulFunctionCall","src":"18053:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18024:6:11"},"nodeType":"YulFunctionCall","src":"18024:54:11"},"nodeType":"YulExpressionStatement","src":"18024:54:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18098:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18109:4:11","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18094:3:11"},"nodeType":"YulFunctionCall","src":"18094:20:11"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18126:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"18134:4:11","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18122:3:11"},"nodeType":"YulFunctionCall","src":"18122:17:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18116:5:11"},"nodeType":"YulFunctionCall","src":"18116:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18087:6:11"},"nodeType":"YulFunctionCall","src":"18087:54:11"},"nodeType":"YulExpressionStatement","src":"18087:54:11"}]},"name":"abi_encode_tuple_t_struct$_Beneficiary_$1649_memory_ptr__to_t_struct$_Beneficiary_$1649_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17754:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17765:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17776:4:11","type":""}],"src":"17626:521:11"},{"body":{"nodeType":"YulBlock","src":"18299:611:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18316:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18327:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18309:6:11"},"nodeType":"YulFunctionCall","src":"18309:21:11"},"nodeType":"YulExpressionStatement","src":"18309:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18350:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18361:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18346:3:11"},"nodeType":"YulFunctionCall","src":"18346:18:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18372:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18366:5:11"},"nodeType":"YulFunctionCall","src":"18366:13:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18339:6:11"},"nodeType":"YulFunctionCall","src":"18339:41:11"},"nodeType":"YulExpressionStatement","src":"18339:41:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18400:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18411:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18396:3:11"},"nodeType":"YulFunctionCall","src":"18396:18:11"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18430:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"18438:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18426:3:11"},"nodeType":"YulFunctionCall","src":"18426:15:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18420:5:11"},"nodeType":"YulFunctionCall","src":"18420:22:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18452:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"18457:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18448:3:11"},"nodeType":"YulFunctionCall","src":"18448:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"18461:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18444:3:11"},"nodeType":"YulFunctionCall","src":"18444:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18416:3:11"},"nodeType":"YulFunctionCall","src":"18416:48:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18389:6:11"},"nodeType":"YulFunctionCall","src":"18389:76:11"},"nodeType":"YulExpressionStatement","src":"18389:76:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18485:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18496:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18481:3:11"},"nodeType":"YulFunctionCall","src":"18481:18:11"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18511:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"18519:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18507:3:11"},"nodeType":"YulFunctionCall","src":"18507:15:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18501:5:11"},"nodeType":"YulFunctionCall","src":"18501:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18474:6:11"},"nodeType":"YulFunctionCall","src":"18474:50:11"},"nodeType":"YulExpressionStatement","src":"18474:50:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18544:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18555:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18540:3:11"},"nodeType":"YulFunctionCall","src":"18540:19:11"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18571:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"18579:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18567:3:11"},"nodeType":"YulFunctionCall","src":"18567:15:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18561:5:11"},"nodeType":"YulFunctionCall","src":"18561:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18533:6:11"},"nodeType":"YulFunctionCall","src":"18533:51:11"},"nodeType":"YulExpressionStatement","src":"18533:51:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18604:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18615:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18600:3:11"},"nodeType":"YulFunctionCall","src":"18600:19:11"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18645:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"18653:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18641:3:11"},"nodeType":"YulFunctionCall","src":"18641:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18635:5:11"},"nodeType":"YulFunctionCall","src":"18635:23:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18628:6:11"},"nodeType":"YulFunctionCall","src":"18628:31:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18621:6:11"},"nodeType":"YulFunctionCall","src":"18621:39:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18593:6:11"},"nodeType":"YulFunctionCall","src":"18593:68:11"},"nodeType":"YulExpressionStatement","src":"18593:68:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18681:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18692:3:11","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18677:3:11"},"nodeType":"YulFunctionCall","src":"18677:19:11"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18712:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"18720:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18708:3:11"},"nodeType":"YulFunctionCall","src":"18708:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18702:5:11"},"nodeType":"YulFunctionCall","src":"18702:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"18727:10:11","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18698:3:11"},"nodeType":"YulFunctionCall","src":"18698:40:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18670:6:11"},"nodeType":"YulFunctionCall","src":"18670:69:11"},"nodeType":"YulExpressionStatement","src":"18670:69:11"},{"nodeType":"YulVariableDeclaration","src":"18748:43:11","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18778:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"18786:3:11","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18774:3:11"},"nodeType":"YulFunctionCall","src":"18774:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18768:5:11"},"nodeType":"YulFunctionCall","src":"18768:23:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"18752:12:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18811:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18822:4:11","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18807:3:11"},"nodeType":"YulFunctionCall","src":"18807:20:11"},{"kind":"number","nodeType":"YulLiteral","src":"18829:4:11","type":"","value":"0xe0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18800:6:11"},"nodeType":"YulFunctionCall","src":"18800:34:11"},"nodeType":"YulExpressionStatement","src":"18800:34:11"},{"nodeType":"YulAssignment","src":"18843:61:11","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"18870:12:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18888:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18899:3:11","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18884:3:11"},"nodeType":"YulFunctionCall","src":"18884:19:11"}],"functionName":{"name":"abi_encode_t_bytes","nodeType":"YulIdentifier","src":"18851:18:11"},"nodeType":"YulFunctionCall","src":"18851:53:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18843:4:11"}]}]},"name":"abi_encode_tuple_t_struct$_Donor_$1664_memory_ptr__to_t_struct$_Donor_$1664_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18268:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18279:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18290:4:11","type":""}],"src":"18152:758:11"},{"body":{"nodeType":"YulBlock","src":"19072:1073:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19089:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19100:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19082:6:11"},"nodeType":"YulFunctionCall","src":"19082:21:11"},"nodeType":"YulExpressionStatement","src":"19082:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19123:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19134:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19119:3:11"},"nodeType":"YulFunctionCall","src":"19119:18:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19145:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19139:5:11"},"nodeType":"YulFunctionCall","src":"19139:13:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19112:6:11"},"nodeType":"YulFunctionCall","src":"19112:41:11"},"nodeType":"YulExpressionStatement","src":"19112:41:11"},{"nodeType":"YulVariableDeclaration","src":"19162:42:11","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19192:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"19200:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19188:3:11"},"nodeType":"YulFunctionCall","src":"19188:15:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19182:5:11"},"nodeType":"YulFunctionCall","src":"19182:22:11"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"19166:12:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"19249:12:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19267:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19278:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19263:3:11"},"nodeType":"YulFunctionCall","src":"19263:18:11"}],"functionName":{"name":"abi_encode_t_enum$_DisasterTypeEnum","nodeType":"YulIdentifier","src":"19213:35:11"},"nodeType":"YulFunctionCall","src":"19213:69:11"},"nodeType":"YulExpressionStatement","src":"19213:69:11"},{"nodeType":"YulVariableDeclaration","src":"19291:44:11","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19323:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"19331:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19319:3:11"},"nodeType":"YulFunctionCall","src":"19319:15:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19313:5:11"},"nodeType":"YulFunctionCall","src":"19313:22:11"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"19295:14:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"19382:14:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19402:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19413:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19398:3:11"},"nodeType":"YulFunctionCall","src":"19398:18:11"}],"functionName":{"name":"abi_encode_t_enum$_ClassificationEnum","nodeType":"YulIdentifier","src":"19344:37:11"},"nodeType":"YulFunctionCall","src":"19344:73:11"},"nodeType":"YulExpressionStatement","src":"19344:73:11"},{"nodeType":"YulVariableDeclaration","src":"19426:44:11","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19458:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"19466:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19454:3:11"},"nodeType":"YulFunctionCall","src":"19454:15:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19448:5:11"},"nodeType":"YulFunctionCall","src":"19448:22:11"},"variables":[{"name":"memberValue0_2","nodeType":"YulTypedName","src":"19430:14:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19479:16:11","value":{"kind":"number","nodeType":"YulLiteral","src":"19489:6:11","type":"","value":"0x0140"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"19483:2:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19515:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19526:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19511:3:11"},"nodeType":"YulFunctionCall","src":"19511:19:11"},{"name":"_1","nodeType":"YulIdentifier","src":"19532:2:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19504:6:11"},"nodeType":"YulFunctionCall","src":"19504:31:11"},"nodeType":"YulExpressionStatement","src":"19504:31:11"},{"nodeType":"YulVariableDeclaration","src":"19544:69:11","value":{"arguments":[{"name":"memberValue0_2","nodeType":"YulIdentifier","src":"19577:14:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19597:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19608:3:11","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19593:3:11"},"nodeType":"YulFunctionCall","src":"19593:19:11"}],"functionName":{"name":"abi_encode_t_bytes","nodeType":"YulIdentifier","src":"19558:18:11"},"nodeType":"YulFunctionCall","src":"19558:55:11"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"19548:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19633:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19644:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19629:3:11"},"nodeType":"YulFunctionCall","src":"19629:19:11"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19660:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"19668:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19656:3:11"},"nodeType":"YulFunctionCall","src":"19656:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19650:5:11"},"nodeType":"YulFunctionCall","src":"19650:23:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19622:6:11"},"nodeType":"YulFunctionCall","src":"19622:52:11"},"nodeType":"YulExpressionStatement","src":"19622:52:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19694:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19705:3:11","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19690:3:11"},"nodeType":"YulFunctionCall","src":"19690:19:11"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19721:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"19729:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19717:3:11"},"nodeType":"YulFunctionCall","src":"19717:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19711:5:11"},"nodeType":"YulFunctionCall","src":"19711:23:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19683:6:11"},"nodeType":"YulFunctionCall","src":"19683:52:11"},"nodeType":"YulExpressionStatement","src":"19683:52:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19755:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"19766:3:11","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19751:3:11"},"nodeType":"YulFunctionCall","src":"19751:19:11"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19782:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"19790:3:11","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19778:3:11"},"nodeType":"YulFunctionCall","src":"19778:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19772:5:11"},"nodeType":"YulFunctionCall","src":"19772:23:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19744:6:11"},"nodeType":"YulFunctionCall","src":"19744:52:11"},"nodeType":"YulExpressionStatement","src":"19744:52:11"},{"nodeType":"YulVariableDeclaration","src":"19805:33:11","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19825:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"19833:3:11","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19821:3:11"},"nodeType":"YulFunctionCall","src":"19821:16:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19815:5:11"},"nodeType":"YulFunctionCall","src":"19815:23:11"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"19809:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19847:13:11","value":{"kind":"number","nodeType":"YulLiteral","src":"19857:3:11","type":"","value":"256"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"19851:2:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19880:9:11"},{"name":"_3","nodeType":"YulIdentifier","src":"19891:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19876:3:11"},"nodeType":"YulFunctionCall","src":"19876:18:11"},{"name":"_2","nodeType":"YulIdentifier","src":"19896:2:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19869:6:11"},"nodeType":"YulFunctionCall","src":"19869:30:11"},"nodeType":"YulExpressionStatement","src":"19869:30:11"},{"nodeType":"YulVariableDeclaration","src":"19908:32:11","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19928:6:11"},{"name":"_3","nodeType":"YulIdentifier","src":"19936:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19924:3:11"},"nodeType":"YulFunctionCall","src":"19924:15:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19918:5:11"},"nodeType":"YulFunctionCall","src":"19918:22:11"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"19912:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19949:13:11","value":{"kind":"number","nodeType":"YulLiteral","src":"19959:3:11","type":"","value":"288"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"19953:2:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19982:9:11"},{"name":"_5","nodeType":"YulIdentifier","src":"19993:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19978:3:11"},"nodeType":"YulFunctionCall","src":"19978:18:11"},{"name":"_4","nodeType":"YulIdentifier","src":"19998:2:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19971:6:11"},"nodeType":"YulFunctionCall","src":"19971:30:11"},"nodeType":"YulExpressionStatement","src":"19971:30:11"},{"nodeType":"YulVariableDeclaration","src":"20010:44:11","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20042:6:11"},{"name":"_5","nodeType":"YulIdentifier","src":"20050:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20038:3:11"},"nodeType":"YulFunctionCall","src":"20038:15:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20032:5:11"},"nodeType":"YulFunctionCall","src":"20032:22:11"},"variables":[{"name":"memberValue0_3","nodeType":"YulTypedName","src":"20014:14:11","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_3","nodeType":"YulIdentifier","src":"20081:14:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20101:9:11"},{"name":"_1","nodeType":"YulIdentifier","src":"20112:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20097:3:11"},"nodeType":"YulFunctionCall","src":"20097:18:11"}],"functionName":{"name":"abi_encode_t_bool","nodeType":"YulIdentifier","src":"20063:17:11"},"nodeType":"YulFunctionCall","src":"20063:53:11"},"nodeType":"YulExpressionStatement","src":"20063:53:11"},{"nodeType":"YulAssignment","src":"20125:14:11","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"20133:6:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20125:4:11"}]}]},"name":"abi_encode_tuple_t_struct$_ReliefPool_$1693_memory_ptr__to_t_struct$_ReliefPool_$1693_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19041:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19052:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19063:4:11","type":""}],"src":"18915:1230:11"},{"body":{"nodeType":"YulBlock","src":"20251:76:11","statements":[{"nodeType":"YulAssignment","src":"20261:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20273:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20284:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20269:3:11"},"nodeType":"YulFunctionCall","src":"20269:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20261:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20303:9:11"},{"name":"value0","nodeType":"YulIdentifier","src":"20314:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20296:6:11"},"nodeType":"YulFunctionCall","src":"20296:25:11"},"nodeType":"YulExpressionStatement","src":"20296:25:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20220:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20231:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20242:4:11","type":""}],"src":"20150:177:11"},{"body":{"nodeType":"YulBlock","src":"20613:422:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20630:9:11"},{"name":"value0","nodeType":"YulIdentifier","src":"20641:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20623:6:11"},"nodeType":"YulFunctionCall","src":"20623:25:11"},"nodeType":"YulExpressionStatement","src":"20623:25:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20668:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20679:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20664:3:11"},"nodeType":"YulFunctionCall","src":"20664:18:11"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20688:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20704:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"20709:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"20700:3:11"},"nodeType":"YulFunctionCall","src":"20700:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"20713:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20696:3:11"},"nodeType":"YulFunctionCall","src":"20696:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20684:3:11"},"nodeType":"YulFunctionCall","src":"20684:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20657:6:11"},"nodeType":"YulFunctionCall","src":"20657:60:11"},"nodeType":"YulExpressionStatement","src":"20657:60:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20737:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20748:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20733:3:11"},"nodeType":"YulFunctionCall","src":"20733:18:11"},{"name":"value2","nodeType":"YulIdentifier","src":"20753:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20726:6:11"},"nodeType":"YulFunctionCall","src":"20726:34:11"},"nodeType":"YulExpressionStatement","src":"20726:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20780:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20791:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20776:3:11"},"nodeType":"YulFunctionCall","src":"20776:18:11"},{"name":"value3","nodeType":"YulIdentifier","src":"20796:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20769:6:11"},"nodeType":"YulFunctionCall","src":"20769:34:11"},"nodeType":"YulExpressionStatement","src":"20769:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20823:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20834:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20819:3:11"},"nodeType":"YulFunctionCall","src":"20819:19:11"},{"arguments":[{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"20854:6:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20847:6:11"},"nodeType":"YulFunctionCall","src":"20847:14:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20840:6:11"},"nodeType":"YulFunctionCall","src":"20840:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20812:6:11"},"nodeType":"YulFunctionCall","src":"20812:51:11"},"nodeType":"YulExpressionStatement","src":"20812:51:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20883:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20894:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20879:3:11"},"nodeType":"YulFunctionCall","src":"20879:19:11"},{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"20904:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"20912:10:11","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20900:3:11"},"nodeType":"YulFunctionCall","src":"20900:23:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20872:6:11"},"nodeType":"YulFunctionCall","src":"20872:52:11"},"nodeType":"YulExpressionStatement","src":"20872:52:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20944:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"20955:3:11","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20940:3:11"},"nodeType":"YulFunctionCall","src":"20940:19:11"},{"kind":"number","nodeType":"YulLiteral","src":"20961:3:11","type":"","value":"224"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20933:6:11"},"nodeType":"YulFunctionCall","src":"20933:32:11"},"nodeType":"YulExpressionStatement","src":"20933:32:11"},{"nodeType":"YulAssignment","src":"20974:55:11","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"21001:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21013:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"21024:3:11","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21009:3:11"},"nodeType":"YulFunctionCall","src":"21009:19:11"}],"functionName":{"name":"abi_encode_t_bytes","nodeType":"YulIdentifier","src":"20982:18:11"},"nodeType":"YulFunctionCall","src":"20982:47:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20974:4:11"}]}]},"name":"abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256_t_bool_t_uint32_t_string_memory_ptr__to_t_uint256_t_address_t_uint256_t_uint256_t_bool_t_uint32_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20534:9:11","type":""},{"name":"value6","nodeType":"YulTypedName","src":"20545:6:11","type":""},{"name":"value5","nodeType":"YulTypedName","src":"20553:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"20561:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"20569:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20577:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20585:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20593:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20604:4:11","type":""}],"src":"20332:703:11"},{"body":{"nodeType":"YulBlock","src":"21447:591:11","statements":[{"nodeType":"YulVariableDeclaration","src":"21457:13:11","value":{"kind":"number","nodeType":"YulLiteral","src":"21467:3:11","type":"","value":"320"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"21461:2:11","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21486:9:11"},{"name":"value0","nodeType":"YulIdentifier","src":"21497:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21479:6:11"},"nodeType":"YulFunctionCall","src":"21479:25:11"},"nodeType":"YulExpressionStatement","src":"21479:25:11"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21549:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21561:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"21572:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21557:3:11"},"nodeType":"YulFunctionCall","src":"21557:18:11"}],"functionName":{"name":"abi_encode_t_enum$_DisasterTypeEnum","nodeType":"YulIdentifier","src":"21513:35:11"},"nodeType":"YulFunctionCall","src":"21513:63:11"},"nodeType":"YulExpressionStatement","src":"21513:63:11"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"21623:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21635:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"21646:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21631:3:11"},"nodeType":"YulFunctionCall","src":"21631:18:11"}],"functionName":{"name":"abi_encode_t_enum$_ClassificationEnum","nodeType":"YulIdentifier","src":"21585:37:11"},"nodeType":"YulFunctionCall","src":"21585:65:11"},"nodeType":"YulExpressionStatement","src":"21585:65:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21670:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"21681:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21666:3:11"},"nodeType":"YulFunctionCall","src":"21666:18:11"},{"name":"_1","nodeType":"YulIdentifier","src":"21686:2:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21659:6:11"},"nodeType":"YulFunctionCall","src":"21659:30:11"},"nodeType":"YulExpressionStatement","src":"21659:30:11"},{"nodeType":"YulAssignment","src":"21698:54:11","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"21725:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21737:9:11"},{"name":"_1","nodeType":"YulIdentifier","src":"21748:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21733:3:11"},"nodeType":"YulFunctionCall","src":"21733:18:11"}],"functionName":{"name":"abi_encode_t_bytes","nodeType":"YulIdentifier","src":"21706:18:11"},"nodeType":"YulFunctionCall","src":"21706:46:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21698:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21772:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"21783:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21768:3:11"},"nodeType":"YulFunctionCall","src":"21768:19:11"},{"name":"value4","nodeType":"YulIdentifier","src":"21789:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21761:6:11"},"nodeType":"YulFunctionCall","src":"21761:35:11"},"nodeType":"YulExpressionStatement","src":"21761:35:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21816:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"21827:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21812:3:11"},"nodeType":"YulFunctionCall","src":"21812:19:11"},{"name":"value5","nodeType":"YulIdentifier","src":"21833:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21805:6:11"},"nodeType":"YulFunctionCall","src":"21805:35:11"},"nodeType":"YulExpressionStatement","src":"21805:35:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21860:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"21871:3:11","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21856:3:11"},"nodeType":"YulFunctionCall","src":"21856:19:11"},{"name":"value6","nodeType":"YulIdentifier","src":"21877:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21849:6:11"},"nodeType":"YulFunctionCall","src":"21849:35:11"},"nodeType":"YulExpressionStatement","src":"21849:35:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21904:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"21915:3:11","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21900:3:11"},"nodeType":"YulFunctionCall","src":"21900:19:11"},{"name":"value7","nodeType":"YulIdentifier","src":"21921:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21893:6:11"},"nodeType":"YulFunctionCall","src":"21893:35:11"},"nodeType":"YulExpressionStatement","src":"21893:35:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21948:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"21959:3:11","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21944:3:11"},"nodeType":"YulFunctionCall","src":"21944:19:11"},{"name":"value8","nodeType":"YulIdentifier","src":"21965:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21937:6:11"},"nodeType":"YulFunctionCall","src":"21937:35:11"},"nodeType":"YulExpressionStatement","src":"21937:35:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21992:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"22003:3:11","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21988:3:11"},"nodeType":"YulFunctionCall","src":"21988:19:11"},{"arguments":[{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"22023:6:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22016:6:11"},"nodeType":"YulFunctionCall","src":"22016:14:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22009:6:11"},"nodeType":"YulFunctionCall","src":"22009:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21981:6:11"},"nodeType":"YulFunctionCall","src":"21981:51:11"},"nodeType":"YulExpressionStatement","src":"21981:51:11"}]},"name":"abi_encode_tuple_t_uint256_t_enum$_DisasterTypeEnum_$1669_t_enum$_ClassificationEnum_$1672_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint8_t_uint8_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21344:9:11","type":""},{"name":"value9","nodeType":"YulTypedName","src":"21355:6:11","type":""},{"name":"value8","nodeType":"YulTypedName","src":"21363:6:11","type":""},{"name":"value7","nodeType":"YulTypedName","src":"21371:6:11","type":""},{"name":"value6","nodeType":"YulTypedName","src":"21379:6:11","type":""},{"name":"value5","nodeType":"YulTypedName","src":"21387:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"21395:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21403:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21411:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21419:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21427:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21438:4:11","type":""}],"src":"21040:998:11"},{"body":{"nodeType":"YulBlock","src":"22256:276:11","statements":[{"nodeType":"YulAssignment","src":"22266:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22278:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"22289:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22274:3:11"},"nodeType":"YulFunctionCall","src":"22274:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22266:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22309:9:11"},{"name":"value0","nodeType":"YulIdentifier","src":"22320:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22302:6:11"},"nodeType":"YulFunctionCall","src":"22302:25:11"},"nodeType":"YulExpressionStatement","src":"22302:25:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22347:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"22358:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22343:3:11"},"nodeType":"YulFunctionCall","src":"22343:18:11"},{"name":"value1","nodeType":"YulIdentifier","src":"22363:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22336:6:11"},"nodeType":"YulFunctionCall","src":"22336:34:11"},"nodeType":"YulExpressionStatement","src":"22336:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22390:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"22401:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22386:3:11"},"nodeType":"YulFunctionCall","src":"22386:18:11"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"22410:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22426:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"22431:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22422:3:11"},"nodeType":"YulFunctionCall","src":"22422:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"22435:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22418:3:11"},"nodeType":"YulFunctionCall","src":"22418:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22406:3:11"},"nodeType":"YulFunctionCall","src":"22406:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22379:6:11"},"nodeType":"YulFunctionCall","src":"22379:60:11"},"nodeType":"YulExpressionStatement","src":"22379:60:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22459:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"22470:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22455:3:11"},"nodeType":"YulFunctionCall","src":"22455:18:11"},{"name":"value3","nodeType":"YulIdentifier","src":"22475:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22448:6:11"},"nodeType":"YulFunctionCall","src":"22448:34:11"},"nodeType":"YulExpressionStatement","src":"22448:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22502:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"22513:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22498:3:11"},"nodeType":"YulFunctionCall","src":"22498:19:11"},{"name":"value4","nodeType":"YulIdentifier","src":"22519:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22491:6:11"},"nodeType":"YulFunctionCall","src":"22491:35:11"},"nodeType":"YulExpressionStatement","src":"22491:35:11"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_address_t_uint256_t_uint256__to_t_uint256_t_uint256_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22193:9:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"22204:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22212:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22220:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22228:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22236:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22247:4:11","type":""}],"src":"22043:489:11"},{"body":{"nodeType":"YulBlock","src":"22770:275:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22787:9:11"},{"name":"value0","nodeType":"YulIdentifier","src":"22798:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22780:6:11"},"nodeType":"YulFunctionCall","src":"22780:25:11"},"nodeType":"YulExpressionStatement","src":"22780:25:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22825:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"22836:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22821:3:11"},"nodeType":"YulFunctionCall","src":"22821:18:11"},{"name":"value1","nodeType":"YulIdentifier","src":"22841:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22814:6:11"},"nodeType":"YulFunctionCall","src":"22814:34:11"},"nodeType":"YulExpressionStatement","src":"22814:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22868:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"22879:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22864:3:11"},"nodeType":"YulFunctionCall","src":"22864:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"22884:3:11","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22857:6:11"},"nodeType":"YulFunctionCall","src":"22857:31:11"},"nodeType":"YulExpressionStatement","src":"22857:31:11"},{"nodeType":"YulAssignment","src":"22897:55:11","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"22924:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22936:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"22947:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22932:3:11"},"nodeType":"YulFunctionCall","src":"22932:19:11"}],"functionName":{"name":"abi_encode_t_bytes","nodeType":"YulIdentifier","src":"22905:18:11"},"nodeType":"YulFunctionCall","src":"22905:47:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22897:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22972:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"22983:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22968:3:11"},"nodeType":"YulFunctionCall","src":"22968:18:11"},{"name":"value3","nodeType":"YulIdentifier","src":"22988:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22961:6:11"},"nodeType":"YulFunctionCall","src":"22961:34:11"},"nodeType":"YulExpressionStatement","src":"22961:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23015:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23026:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23011:3:11"},"nodeType":"YulFunctionCall","src":"23011:19:11"},{"name":"value4","nodeType":"YulIdentifier","src":"23032:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23004:6:11"},"nodeType":"YulFunctionCall","src":"23004:35:11"},"nodeType":"YulExpressionStatement","src":"23004:35:11"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr_t_uint256_t_uint256__to_t_uint256_t_uint256_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22707:9:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"22718:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22726:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22734:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22742:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22750:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22761:4:11","type":""}],"src":"22537:508:11"},{"body":{"nodeType":"YulBlock","src":"23365:462:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23382:9:11"},{"name":"value0","nodeType":"YulIdentifier","src":"23393:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23375:6:11"},"nodeType":"YulFunctionCall","src":"23375:25:11"},"nodeType":"YulExpressionStatement","src":"23375:25:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23420:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23431:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23416:3:11"},"nodeType":"YulFunctionCall","src":"23416:18:11"},{"name":"value1","nodeType":"YulIdentifier","src":"23436:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23409:6:11"},"nodeType":"YulFunctionCall","src":"23409:34:11"},"nodeType":"YulExpressionStatement","src":"23409:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23463:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23474:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23459:3:11"},"nodeType":"YulFunctionCall","src":"23459:18:11"},{"name":"value2","nodeType":"YulIdentifier","src":"23479:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23452:6:11"},"nodeType":"YulFunctionCall","src":"23452:34:11"},"nodeType":"YulExpressionStatement","src":"23452:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23506:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23517:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23502:3:11"},"nodeType":"YulFunctionCall","src":"23502:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"23522:3:11","type":"","value":"224"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23495:6:11"},"nodeType":"YulFunctionCall","src":"23495:31:11"},"nodeType":"YulExpressionStatement","src":"23495:31:11"},{"nodeType":"YulVariableDeclaration","src":"23535:61:11","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"23568:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23580:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23591:3:11","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23576:3:11"},"nodeType":"YulFunctionCall","src":"23576:19:11"}],"functionName":{"name":"abi_encode_t_bytes","nodeType":"YulIdentifier","src":"23549:18:11"},"nodeType":"YulFunctionCall","src":"23549:47:11"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"23539:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23616:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23627:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23612:3:11"},"nodeType":"YulFunctionCall","src":"23612:19:11"},{"name":"value4","nodeType":"YulIdentifier","src":"23633:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23605:6:11"},"nodeType":"YulFunctionCall","src":"23605:35:11"},"nodeType":"YulExpressionStatement","src":"23605:35:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23660:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23671:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23656:3:11"},"nodeType":"YulFunctionCall","src":"23656:19:11"},{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"23681:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23697:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"23702:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"23693:3:11"},"nodeType":"YulFunctionCall","src":"23693:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"23706:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23689:3:11"},"nodeType":"YulFunctionCall","src":"23689:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23677:3:11"},"nodeType":"YulFunctionCall","src":"23677:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23649:6:11"},"nodeType":"YulFunctionCall","src":"23649:61:11"},"nodeType":"YulExpressionStatement","src":"23649:61:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23730:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23741:3:11","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23726:3:11"},"nodeType":"YulFunctionCall","src":"23726:19:11"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"23751:6:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"23759:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23747:3:11"},"nodeType":"YulFunctionCall","src":"23747:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23719:6:11"},"nodeType":"YulFunctionCall","src":"23719:51:11"},"nodeType":"YulExpressionStatement","src":"23719:51:11"},{"nodeType":"YulAssignment","src":"23779:42:11","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"23806:6:11"},{"name":"tail_1","nodeType":"YulIdentifier","src":"23814:6:11"}],"functionName":{"name":"abi_encode_t_bytes","nodeType":"YulIdentifier","src":"23787:18:11"},"nodeType":"YulFunctionCall","src":"23787:34:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23779:4:11"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_string_memory_ptr_t_uint256_t_address_payable_t_bytes_memory_ptr__to_t_uint256_t_uint256_t_uint256_t_string_memory_ptr_t_uint256_t_address_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23286:9:11","type":""},{"name":"value6","nodeType":"YulTypedName","src":"23297:6:11","type":""},{"name":"value5","nodeType":"YulTypedName","src":"23305:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"23313:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23321:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23329:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23337:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23345:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23356:4:11","type":""}],"src":"23050:777:11"},{"body":{"nodeType":"YulBlock","src":"24015:368:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24032:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24047:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"24055:10:11","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24043:3:11"},"nodeType":"YulFunctionCall","src":"24043:23:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24025:6:11"},"nodeType":"YulFunctionCall","src":"24025:42:11"},"nodeType":"YulExpressionStatement","src":"24025:42:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24087:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24098:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24083:3:11"},"nodeType":"YulFunctionCall","src":"24083:18:11"},{"name":"value1","nodeType":"YulIdentifier","src":"24103:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24076:6:11"},"nodeType":"YulFunctionCall","src":"24076:34:11"},"nodeType":"YulExpressionStatement","src":"24076:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24130:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24141:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24126:3:11"},"nodeType":"YulFunctionCall","src":"24126:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"24146:2:11","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24119:6:11"},"nodeType":"YulFunctionCall","src":"24119:30:11"},"nodeType":"YulExpressionStatement","src":"24119:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24169:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24180:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24165:3:11"},"nodeType":"YulFunctionCall","src":"24165:18:11"},{"name":"value3","nodeType":"YulIdentifier","src":"24185:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24158:6:11"},"nodeType":"YulFunctionCall","src":"24158:34:11"},"nodeType":"YulExpressionStatement","src":"24158:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24218:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24229:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24214:3:11"},"nodeType":"YulFunctionCall","src":"24214:19:11"},{"name":"value2","nodeType":"YulIdentifier","src":"24235:6:11"},{"name":"value3","nodeType":"YulIdentifier","src":"24243:6:11"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"24201:12:11"},"nodeType":"YulFunctionCall","src":"24201:49:11"},"nodeType":"YulExpressionStatement","src":"24201:49:11"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24274:9:11"},{"name":"value3","nodeType":"YulIdentifier","src":"24285:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24270:3:11"},"nodeType":"YulFunctionCall","src":"24270:22:11"},{"kind":"number","nodeType":"YulLiteral","src":"24294:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24266:3:11"},"nodeType":"YulFunctionCall","src":"24266:32:11"},{"name":"tail","nodeType":"YulIdentifier","src":"24300:4:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24259:6:11"},"nodeType":"YulFunctionCall","src":"24259:46:11"},"nodeType":"YulExpressionStatement","src":"24259:46:11"},{"nodeType":"YulAssignment","src":"24314:63:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24330:9:11"},{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"24349:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"24357:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24345:3:11"},"nodeType":"YulFunctionCall","src":"24345:15:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24366:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"24362:3:11"},"nodeType":"YulFunctionCall","src":"24362:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24341:3:11"},"nodeType":"YulFunctionCall","src":"24341:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24326:3:11"},"nodeType":"YulFunctionCall","src":"24326:45:11"},{"kind":"number","nodeType":"YulLiteral","src":"24373:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24322:3:11"},"nodeType":"YulFunctionCall","src":"24322:55:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24314:4:11"}]}]},"name":"abi_encode_tuple_t_uint32_t_bytes32_t_bytes_calldata_ptr__to_t_uint32_t_bytes32_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23960:9:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23971:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23979:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23987:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23995:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24006:4:11","type":""}],"src":"23832:551:11"},{"body":{"nodeType":"YulBlock","src":"24644:311:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24661:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24676:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"24684:10:11","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24672:3:11"},"nodeType":"YulFunctionCall","src":"24672:23:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24654:6:11"},"nodeType":"YulFunctionCall","src":"24654:42:11"},"nodeType":"YulExpressionStatement","src":"24654:42:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24716:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24727:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24712:3:11"},"nodeType":"YulFunctionCall","src":"24712:18:11"},{"name":"value1","nodeType":"YulIdentifier","src":"24732:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24705:6:11"},"nodeType":"YulFunctionCall","src":"24705:34:11"},"nodeType":"YulExpressionStatement","src":"24705:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24759:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24770:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24755:3:11"},"nodeType":"YulFunctionCall","src":"24755:18:11"},{"name":"value2","nodeType":"YulIdentifier","src":"24775:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24748:6:11"},"nodeType":"YulFunctionCall","src":"24748:34:11"},"nodeType":"YulExpressionStatement","src":"24748:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24802:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24813:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24798:3:11"},"nodeType":"YulFunctionCall","src":"24798:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"24818:3:11","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24791:6:11"},"nodeType":"YulFunctionCall","src":"24791:31:11"},"nodeType":"YulExpressionStatement","src":"24791:31:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24842:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24853:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24838:3:11"},"nodeType":"YulFunctionCall","src":"24838:19:11"},{"kind":"number","nodeType":"YulLiteral","src":"24859:2:11","type":"","value":"11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24831:6:11"},"nodeType":"YulFunctionCall","src":"24831:31:11"},"nodeType":"YulExpressionStatement","src":"24831:31:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24882:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24893:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24878:3:11"},"nodeType":"YulFunctionCall","src":"24878:19:11"},{"kind":"string","nodeType":"YulLiteral","src":"24899:13:11","type":"","value":"cross-chain"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24871:6:11"},"nodeType":"YulFunctionCall","src":"24871:42:11"},"nodeType":"YulExpressionStatement","src":"24871:42:11"},{"nodeType":"YulAssignment","src":"24922:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24934:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24945:3:11","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24930:3:11"},"nodeType":"YulFunctionCall","src":"24930:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24922:4:11"}]}]},"name":"abi_encode_tuple_t_uint32_t_uint256_t_uint256_t_stringliteral_bd876a4a5961cdfed0b8e6c469c044c8852b321773f68dc2514cfe08a70411c2__to_t_uint32_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24597:9:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24608:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24616:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24624:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24635:4:11","type":""}],"src":"24388:567:11"},{"body":{"nodeType":"YulBlock","src":"25004:198:11","statements":[{"nodeType":"YulAssignment","src":"25014:19:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25030:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25024:5:11"},"nodeType":"YulFunctionCall","src":"25024:9:11"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25014:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"25042:35:11","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25064:6:11"},{"name":"size","nodeType":"YulIdentifier","src":"25072:4:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25060:3:11"},"nodeType":"YulFunctionCall","src":"25060:17:11"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"25046:10:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"25152:13:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"invalid","nodeType":"YulIdentifier","src":"25154:7:11"},"nodeType":"YulFunctionCall","src":"25154:9:11"},"nodeType":"YulExpressionStatement","src":"25154:9:11"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"25095:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"25107:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25092:2:11"},"nodeType":"YulFunctionCall","src":"25092:34:11"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"25131:10:11"},{"name":"memPtr","nodeType":"YulIdentifier","src":"25143:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"25128:2:11"},"nodeType":"YulFunctionCall","src":"25128:22:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"25089:2:11"},"nodeType":"YulFunctionCall","src":"25089:62:11"},"nodeType":"YulIf","src":"25086:2:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25181:2:11","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"25185:10:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25174:6:11"},"nodeType":"YulFunctionCall","src":"25174:22:11"},"nodeType":"YulExpressionStatement","src":"25174:22:11"}]},"name":"allocateMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"24984:4:11","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"24993:6:11","type":""}],"src":"24960:242:11"},{"body":{"nodeType":"YulBlock","src":"25266:122:11","statements":[{"body":{"nodeType":"YulBlock","src":"25310:13:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"invalid","nodeType":"YulIdentifier","src":"25312:7:11"},"nodeType":"YulFunctionCall","src":"25312:9:11"},"nodeType":"YulExpressionStatement","src":"25312:9:11"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"25282:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"25290:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25279:2:11"},"nodeType":"YulFunctionCall","src":"25279:30:11"},"nodeType":"YulIf","src":"25276:2:11"},{"nodeType":"YulAssignment","src":"25332:50:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"25352:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"25360:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25348:3:11"},"nodeType":"YulFunctionCall","src":"25348:17:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25371:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"25367:3:11"},"nodeType":"YulFunctionCall","src":"25367:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25344:3:11"},"nodeType":"YulFunctionCall","src":"25344:31:11"},{"kind":"number","nodeType":"YulLiteral","src":"25377:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25340:3:11"},"nodeType":"YulFunctionCall","src":"25340:42:11"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"25332:4:11"}]}]},"name":"array_allocation_size_t_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"25246:6:11","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"25257:4:11","type":""}],"src":"25207:181:11"},{"body":{"nodeType":"YulBlock","src":"25446:205:11","statements":[{"nodeType":"YulVariableDeclaration","src":"25456:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"25465:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"25460:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"25525:63:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"25550:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"25555:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25546:3:11"},"nodeType":"YulFunctionCall","src":"25546:11:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"25569:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"25574:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25565:3:11"},"nodeType":"YulFunctionCall","src":"25565:11:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25559:5:11"},"nodeType":"YulFunctionCall","src":"25559:18:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25539:6:11"},"nodeType":"YulFunctionCall","src":"25539:39:11"},"nodeType":"YulExpressionStatement","src":"25539:39:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"25486:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"25489:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"25483:2:11"},"nodeType":"YulFunctionCall","src":"25483:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"25497:19:11","statements":[{"nodeType":"YulAssignment","src":"25499:15:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"25508:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"25511:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25504:3:11"},"nodeType":"YulFunctionCall","src":"25504:10:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"25499:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"25479:3:11","statements":[]},"src":"25475:113:11"},{"body":{"nodeType":"YulBlock","src":"25614:31:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"25627:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"25632:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25623:3:11"},"nodeType":"YulFunctionCall","src":"25623:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"25641:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25616:6:11"},"nodeType":"YulFunctionCall","src":"25616:27:11"},"nodeType":"YulExpressionStatement","src":"25616:27:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"25603:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"25606:6:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25600:2:11"},"nodeType":"YulFunctionCall","src":"25600:13:11"},"nodeType":"YulIf","src":"25597:2:11"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"25424:3:11","type":""},{"name":"dst","nodeType":"YulTypedName","src":"25429:3:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"25434:6:11","type":""}],"src":"25393:258:11"}]},"contents":"{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_t_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(arrayPos, arrayPos) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(arrayPos, arrayPos) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_t_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let array_1 := allocateMemory(array_allocation_size_t_bytes(_1))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(array, array) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), array)\n        array := array_1\n    }\n    function abi_decode_t_uint32(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_string_memory_ptrt_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(value4, value4) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        value3 := abi_decode_t_bytes(add(headStart, offset), dataEnd)\n        value4 := calldataload(add(headStart, 128))\n        let offset_1 := calldataload(add(headStart, 160))\n        if gt(offset_1, _1) { revert(value5, value5) }\n        value5 := abi_decode_t_bytes(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_enum$_DisasterTypeEnum_$1669t_enum$_ClassificationEnum_$1672t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(lt(value, 4)) { revert(value0, value0) }\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(lt(value_1, 2)) { revert(value1, value1) }\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(value2, value2) }\n        value2 := abi_decode_t_bytes(add(headStart, offset), dataEnd)\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := mload(headStart)\n        let offset := mload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(value1, value1) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(value1, value1) }\n        let _2 := mload(_1)\n        let array := allocateMemory(array_allocation_size_t_bytes(_2))\n        mstore(array, _2)\n        if gt(add(add(_1, _2), 32), dataEnd) { revert(value1, value1) }\n        copy_memory_to_memory(add(_1, 32), add(array, 32), _2)\n        value1 := array\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(value2, value2) }\n        value2 := abi_decode_t_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptrt_uint256t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(value2, value2) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value6, value6) }\n        value3 := abi_decode_t_bytes(add(headStart, offset), dataEnd)\n        value4 := calldataload(add(headStart, 128))\n        value5 := abi_decode_t_address(add(headStart, 160))\n        let offset_1 := calldataload(add(headStart, 192))\n        if gt(offset_1, _1) { revert(value6, value6) }\n        value6 := abi_decode_t_bytes(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_string_memory_ptrt_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(value2, value2) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        value3 := abi_decode_t_bytes(add(headStart, offset), dataEnd)\n        value4 := calldataload(add(headStart, 128))\n        let offset_1 := calldataload(add(headStart, 160))\n        if gt(offset_1, _1) { revert(value5, value5) }\n        value5 := abi_decode_t_bytes(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_uint32t_bytes32t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_uint32(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(value2, value2) }\n        let value2_1, value3_1 := abi_decode_t_bytes_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_uint32t_bytes32t_uint32t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value2, value2) }\n        value0 := abi_decode_t_uint32(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_t_uint32(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(value4, value4) }\n        let value3_1, value4_1 := abi_decode_t_bytes_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_encode_t_bool(value, pos)\n    {\n        mstore(pos, iszero(iszero(value)))\n    }\n    function abi_encode_t_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_t_enum$_ClassificationEnum(value, pos)\n    {\n        if iszero(lt(value, 2)) { invalid() }\n        mstore(pos, value)\n    }\n    function abi_encode_t_enum$_DisasterTypeEnum(value, pos)\n    {\n        if iszero(lt(value, 4)) { invalid() }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let ret := end\n        let slotValue := sload(value0)\n        let _1 := 1\n        switch and(slotValue, _1)\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, and(div(slotValue, 2), 0x7f))\n        }\n        case 1 {\n            let length := div(slotValue, 2)\n            mstore(end, value0)\n            let _2 := 0x20\n            let dataPos := keccak256(end, _2)\n            let i := end\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        end := ret\n    }\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, shl(240, 6401))\n        mstore(add(pos, 2), value0)\n        mstore(add(pos, 34), value1)\n        end := add(pos, 66)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256_t_bytes32_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256_t_bytes32_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$658__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_enum$_DisasterTypeEnum_$1669_t_enum$_ClassificationEnum_$1672_t_string_memory_ptr_t_uint256__to_t_uint8_t_uint8_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        abi_encode_t_enum$_DisasterTypeEnum(value0, headStart)\n        abi_encode_t_enum$_ClassificationEnum(value1, add(headStart, 32))\n        mstore(add(headStart, 64), 128)\n        tail := abi_encode_t_bytes(value2, add(headStart, 128))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_rational_6_by_1_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint32_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_t_bytes(value3, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_0080df61d19626bcd0b1dc2321b8f7ad75bd0c790e83a846a1a2b44d96f7eb28__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"NationalityMismatch\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_26f94074f55601aaa609f6dfadf4b7fc63d9f3c56ec02fb00e9d0804ff24ff6f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"InvalidSignature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_458175237385bace94a4d132a3bee7efde50498b86fcf8d7b44596cad42dccdb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"InvalidNationality\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_483313f3910f88408dc57d1e1e6afbe0d5fb0a2ab36e197f65b49ed489f7c914__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"InvalidAmount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5a59791da5e1793a3002179f4942b6a9467f5e9aa375b40eb65586f20e547a9f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"InvalidRecipient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5c68e0213938b1801b388ff78c6baada7bed83db5b5cf0948cc4e453d00382f8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"InvalidPool\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6378970b6df3ebf384bf9ab3a985c67d1495bbfa66239ddc466b9b36aabfc3c0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Internal function only\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c36ba545cd82429076ebd7f7d2e176f2fe180384a1840447ebeedd850fffb9c5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"No hook data provided\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cea4cbe3d2d2029f106bbd6d2c93feedfb34cb9dab628d750e618312175cac3c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"PoolInactive\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d1b3442bbeff8c60abd0f004b91e82e19cb839acf9a91a5e5b6c59a74157707b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"AlreadyClaimed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d2ce7f36f76fcb4610533d95a01cb9b0fdd2b058fe7ffae027e7112f5480b8df__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"InsufficientFunds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ede1a3593ba4cc1179efac6ca3c84eee5b40d87537257a00e5715a9e107e43f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"UnauthorizedCaller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_Beneficiary_$1649_memory_ptr__to_t_struct$_Beneficiary_$1649_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), and(mload(add(value0, 0x40)), sub(shl(160, 1), 1)))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n    }\n    function abi_encode_tuple_t_struct$_Donor_$1664_memory_ptr__to_t_struct$_Donor_$1664_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), mload(value0))\n        mstore(add(headStart, 64), and(mload(add(value0, 32)), sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), mload(add(value0, 64)))\n        mstore(add(headStart, 128), mload(add(value0, 96)))\n        mstore(add(headStart, 160), iszero(iszero(mload(add(value0, 128)))))\n        mstore(add(headStart, 192), and(mload(add(value0, 160)), 0xffffffff))\n        let memberValue0 := mload(add(value0, 192))\n        mstore(add(headStart, 0xe0), 0xe0)\n        tail := abi_encode_t_bytes(memberValue0, add(headStart, 256))\n    }\n    function abi_encode_tuple_t_struct$_ReliefPool_$1693_memory_ptr__to_t_struct$_ReliefPool_$1693_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), mload(value0))\n        let memberValue0 := mload(add(value0, 32))\n        abi_encode_t_enum$_DisasterTypeEnum(memberValue0, add(headStart, 64))\n        let memberValue0_1 := mload(add(value0, 64))\n        abi_encode_t_enum$_ClassificationEnum(memberValue0_1, add(headStart, 96))\n        let memberValue0_2 := mload(add(value0, 96))\n        let _1 := 0x0140\n        mstore(add(headStart, 128), _1)\n        let tail_1 := abi_encode_t_bytes(memberValue0_2, add(headStart, 352))\n        mstore(add(headStart, 160), mload(add(value0, 128)))\n        mstore(add(headStart, 192), mload(add(value0, 160)))\n        mstore(add(headStart, 224), mload(add(value0, 192)))\n        let _2 := mload(add(value0, 224))\n        let _3 := 256\n        mstore(add(headStart, _3), _2)\n        let _4 := mload(add(value0, _3))\n        let _5 := 288\n        mstore(add(headStart, _5), _4)\n        let memberValue0_3 := mload(add(value0, _5))\n        abi_encode_t_bool(memberValue0_3, add(headStart, _1))\n        tail := tail_1\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256_t_bool_t_uint32_t_string_memory_ptr__to_t_uint256_t_address_t_uint256_t_uint256_t_bool_t_uint32_t_string_memory_ptr__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n        mstore(add(headStart, 160), and(value5, 0xffffffff))\n        mstore(add(headStart, 192), 224)\n        tail := abi_encode_t_bytes(value6, add(headStart, 224))\n    }\n    function abi_encode_tuple_t_uint256_t_enum$_DisasterTypeEnum_$1669_t_enum$_ClassificationEnum_$1672_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint8_t_uint8_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 320\n        mstore(headStart, value0)\n        abi_encode_t_enum$_DisasterTypeEnum(value1, add(headStart, 32))\n        abi_encode_t_enum$_ClassificationEnum(value2, add(headStart, 64))\n        mstore(add(headStart, 96), _1)\n        tail := abi_encode_t_bytes(value3, add(headStart, _1))\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n        mstore(add(headStart, 256), value8)\n        mstore(add(headStart, 288), iszero(iszero(value9)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_address_t_uint256_t_uint256__to_t_uint256_t_uint256_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr_t_uint256_t_uint256__to_t_uint256_t_uint256_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 160)\n        tail := abi_encode_t_bytes(value2, add(headStart, 160))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_string_memory_ptr_t_uint256_t_address_payable_t_bytes_memory_ptr__to_t_uint256_t_uint256_t_uint256_t_string_memory_ptr_t_uint256_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 224)\n        let tail_1 := abi_encode_t_bytes(value3, add(headStart, 224))\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), and(value5, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 192), sub(tail_1, headStart))\n        tail := abi_encode_t_bytes(value6, tail_1)\n    }\n    function abi_encode_tuple_t_uint32_t_bytes32_t_bytes_calldata_ptr__to_t_uint32_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 96)\n        mstore(add(headStart, 96), value3)\n        calldatacopy(add(headStart, 128), value2, value3)\n        mstore(add(add(headStart, value3), 128), tail)\n        tail := add(add(headStart, and(add(value3, 31), not(31))), 128)\n    }\n    function abi_encode_tuple_t_uint32_t_uint256_t_uint256_t_stringliteral_bd876a4a5961cdfed0b8e6c469c044c8852b321773f68dc2514cfe08a70411c2__to_t_uint32_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        mstore(add(headStart, 128), 11)\n        mstore(add(headStart, 160), \"cross-chain\")\n        tail := add(headStart, 192)\n    }\n    function allocateMemory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_t_bytes(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { invalid() }\n        size := add(and(add(length, 0x1f), not(31)), 0x20)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n}","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1634":[{"length":32,"start":1279},{"length":32,"start":1449},{"length":32,"start":2580},{"length":32,"start":2718},{"length":32,"start":3588},{"length":32,"start":4105}],"1695":[{"length":32,"start":2399},{"length":32,"start":7384}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B29CAF5 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xD9DB6E03 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x433 JUMPI DUP1 PUSH4 0xF594DBF4 EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0xFC6F9468 EQ PUSH2 0x46C JUMPI DUP1 PUSH4 0xFEB16532 EQ PUSH2 0x474 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0xD9DB6E03 EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0xDB5E4C75 EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0xE1A788EB EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0xEF20C85A EQ PUSH2 0x420 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x9E3079CB GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x9E3079CB EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0xA8F7F995 EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0xD0E5A743 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xD3FFE67A EQ PUSH2 0x3EA JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x8B29CAF5 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x8C73EB04 EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x8E09727E EQ PUSH2 0x38F JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x3B121902 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x73AACB00 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x7C92F219 EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x82E15E51 EQ PUSH2 0x359 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x3B121902 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x59B3C2D8 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x316 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x19C2799F GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x19C2799F EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x216B31C1 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x29D9B720 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2B7 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x6CC759B EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x11CFFB67 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x11EAC855 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x16C3CDF5 EQ PUSH2 0x253 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D8C JUMP JUMPDEST PUSH2 0x487 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x3449 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x3004 JUMP JUMPDEST PUSH2 0x4F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x319E JUMP JUMPDEST PUSH2 0x246 PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x3146 JUMP JUMPDEST PUSH2 0x266 PUSH2 0x261 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E57 JUMP JUMPDEST PUSH2 0x521 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27B PUSH2 0x276 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D5C JUMP JUMPDEST PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x35EB JUMP JUMPDEST PUSH2 0x266 PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0x2D5C JUMP JUMPDEST PUSH2 0x85D JUMP JUMPDEST PUSH2 0x231 PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C61 JUMP JUMPDEST PUSH2 0x942 JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x95D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x31A9 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x2DA CALLDATASIZE PUSH1 0x4 PUSH2 0x2E36 JUMP JUMPDEST PUSH2 0x981 JUMP JUMPDEST PUSH2 0x266 PUSH2 0x2ED CALLDATASIZE PUSH1 0x4 PUSH2 0x2D5C JUMP JUMPDEST PUSH2 0x9A1 JUMP JUMPDEST PUSH2 0x305 PUSH2 0x300 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D8C JUMP JUMPDEST PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3658 JUMP JUMPDEST PUSH2 0x2BF PUSH2 0xA84 JUMP JUMPDEST PUSH2 0x266 PUSH2 0xB28 JUMP JUMPDEST PUSH2 0x339 PUSH2 0x334 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E36 JUMP JUMPDEST PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x315A JUMP JUMPDEST PUSH2 0x231 PUSH2 0x354 CALLDATASIZE PUSH1 0x4 PUSH2 0x3004 JUMP JUMPDEST PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x266 PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ED0 JUMP JUMPDEST PUSH2 0xCCC JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x37A CALLDATASIZE PUSH1 0x4 PUSH2 0x2CEE JUMP JUMPDEST PUSH2 0x109F JUMP JUMPDEST PUSH2 0x246 PUSH2 0x12D8 JUMP JUMPDEST PUSH2 0x246 PUSH2 0x12E7 JUMP JUMPDEST PUSH2 0x3A2 PUSH2 0x39D CALLDATASIZE PUSH1 0x4 PUSH2 0x2D5C JUMP JUMPDEST PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x34EF JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x144D JUMP JUMPDEST PUSH2 0x266 PUSH2 0x3C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F68 JUMP JUMPDEST PUSH2 0x1453 JUMP JUMPDEST PUSH2 0x3DD PUSH2 0x3D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D8C JUMP JUMPDEST PUSH2 0x14BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x3487 JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x266 PUSH2 0x400 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C47 JUMP JUMPDEST PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0x266 PUSH2 0x413 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FAC JUMP JUMPDEST PUSH2 0x165B JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x19A6 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x42E CALLDATASIZE PUSH1 0x4 PUSH2 0x2EA5 JUMP JUMPDEST PUSH2 0x19CA JUMP JUMPDEST PUSH2 0x266 PUSH2 0x441 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C47 JUMP JUMPDEST PUSH2 0x19EF JUMP JUMPDEST PUSH2 0x459 PUSH2 0x454 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D8C JUMP JUMPDEST PUSH2 0x1AF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3597 JUMP JUMPDEST PUSH2 0x246 PUSH2 0x1BD3 JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x482 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E36 JUMP JUMPDEST PUSH2 0x1BE2 JUMP JUMPDEST PUSH2 0x48F PUSH2 0x2A07 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP6 MSTORE DUP3 MSTORE SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0xA0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP1 SWAP3 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP5 EQ PUSH2 0x558 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x3320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x57C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x33A4 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x59C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x32CF JUMP JUMPDEST PUSH2 0x5D1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP7 PUSH2 0x1C13 JUMP JUMPDEST DUP1 PUSH1 0x5 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP DUP3 DUP2 PUSH1 0x7 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0x5 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x725 SWAP3 SWAP2 SWAP1 PUSH2 0x2A3F JUMP JUMPDEST POP SWAP1 POP POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x743501122BA2CD9590984350A2076553271A243E2B9DE8617A802D7C7AF7D301 PUSH1 0x6 DUP7 TIMESTAMP DUP8 PUSH1 0x40 MLOAD PUSH2 0x76A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3221 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP4 ADD SLOAD PUSH1 0x2 DUP1 DUP6 ADD DUP1 SLOAD DUP9 MLOAD PUSH2 0x100 SWAP6 DUP3 AND ISZERO DUP7 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP3 DIV PUSH1 0x1F DUP2 ADD DUP9 SWAP1 DIV DUP9 MUL DUP4 ADD DUP9 ADD SWAP1 SWAP9 MSTORE DUP8 DUP3 MSTORE SWAP4 SWAP7 PUSH1 0xFF DUP1 DUP5 AND SWAP8 SWAP5 SWAP1 SWAP4 DIV SWAP1 SWAP3 AND SWAP5 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x829 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7FE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x829 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x80C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 DUP9 ADD SLOAD PUSH1 0x8 SWAP1 SWAP9 ADD SLOAD SWAP7 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 SWAP1 PUSH1 0xFF AND DUP11 JUMP JUMPDEST PUSH2 0x865 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x876 PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8BF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 EQ PUSH2 0x8ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x3320 JUMP JUMPDEST PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT DUP2 AND PUSH1 0xFF SWAP2 DUP3 AND ISZERO OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP5 SWAP3 PUSH32 0xB3C3C605D1520CD5BF41301DD5C04929E0FF021B02A10EA259B5A5B2D521A29C SWAP3 PUSH2 0x936 SWAP3 SWAP2 AND SWAP1 PUSH2 0x319E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x952 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1C77 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x9A9 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9BA PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA03 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xA3D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP2 AND DUP4 PUSH2 0x1D4E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xAD3 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x3146 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAFF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB23 SWAP2 SWAP1 PUSH2 0x2D74 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB30 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB41 PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB8A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xC2A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xC16 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x341D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xDB5E4C75 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP1 PUSH4 0xDB5E4C75 SWAP1 PUSH2 0xC8D SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x3712 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCB8 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0xCC4 JUMPI POP PUSH1 0x0 PUSH2 0x4F4 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP9 EQ PUSH2 0xCFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x3320 JUMP JUMPDEST PUSH1 0x8 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0xD1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x33A4 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP10 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xD58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x33CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x32F6 JUMP JUMPDEST DUP1 PUSH1 0x2 ADD PUSH1 0x40 MLOAD PUSH2 0xD8F SWAP2 SWAP1 PUSH2 0x30BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP6 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0xDBC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x324C JUMP JUMPDEST PUSH2 0xDCA CALLER DUP9 DUP9 DUP9 DUP9 DUP8 PUSH2 0x1C77 JUMP JUMPDEST PUSH2 0xDE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x3279 JUMP JUMPDEST PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xE39 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x3146 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE65 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE89 SWAP2 SWAP1 PUSH2 0x2D74 JUMP JUMPDEST LT ISZERO PUSH2 0xEA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x33F2 JUMP JUMPDEST DUP2 PUSH1 0x4 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP DUP1 DUP3 PUSH1 0x6 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE SWAP1 POP POP PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP10 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH2 0x1040 DUP5 DUP3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D4E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 PUSH32 0x5F6D78D5D398FBDE6899ED8B8490A27AE6F7910869243D2A50B6D94B71C6CA2B DUP12 DUP12 DUP12 DUP8 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x108C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A9 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10BA PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1103 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD GT PUSH2 0x1124 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x32A3 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x1144 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x32CF JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP2 MSTORE DUP2 DUP2 MSTORE SWAP1 SWAP2 PUSH1 0x20 DUP3 ADD SWAP1 DUP9 SWAP1 DUP2 GT ISZERO PUSH2 0x116F JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1180 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x11F5 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x121E JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x123E SWAP2 PUSH1 0x2 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2A3F JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x120 SWAP1 SWAP2 ADD MLOAD PUSH1 0x8 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0xA359134B476F4B3E621AD56F265A9173E1D6890866FC0250CAA7E37F2B55F60C SWAP1 PUSH2 0x12C5 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH2 0x31E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x12FE PUSH2 0x2ACB JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 DUP4 ADD SWAP1 PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1336 JUMPI INVALID JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1341 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1363 JUMPI INVALID JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x136E JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x2 DUP3 DUP2 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP4 AND SWAP5 SWAP1 SWAP5 DIV PUSH1 0x1F DUP2 ADD DUP4 SWAP1 DIV DUP4 MUL DUP6 ADD DUP4 ADD SWAP1 SWAP2 MSTORE DUP1 DUP5 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x13FA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13CF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13FA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13DD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x8 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x82E15E51 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP1 PUSH4 0x82E15E51 SWAP1 PUSH2 0x1482 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 CALLER SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x36B7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x149C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x14C4 PUSH2 0x2B21 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0xE0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD SWAP1 SWAP6 AND DUP2 DUP6 ADD MSTORE PUSH1 0x2 DUP1 DUP4 ADD SLOAD DUP3 DUP6 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x100 SWAP1 DUP2 SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x5 DUP5 ADD DUP1 SLOAD DUP7 MLOAD SWAP9 DUP2 AND ISZERO SWAP1 SWAP3 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 DIV PUSH1 0x1F DUP2 ADD DUP7 SWAP1 DIV DUP7 MUL DUP8 ADD DUP7 ADD SWAP1 SWAP5 MSTORE DUP4 DUP7 MSTORE SWAP1 SWAP5 SWAP2 SWAP4 PUSH1 0xC0 DUP7 ADD SWAP4 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x15C0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1595 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x15C0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x15A3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x15DF PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15F0 PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1639 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x167A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x3345 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16C0 PUSH1 0x0 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 SWAP3 POP POP PUSH2 0x1DA5 SWAP1 POP JUMP JUMPDEST SWAP1 POP PUSH2 0x16D1 PUSH3 0xFFFFFF NOT DUP3 AND PUSH2 0x1DC0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E2 PUSH3 0xFFFFFF NOT DUP4 AND PUSH2 0x1E81 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x16F5 PUSH3 0xFFFFFF NOT DUP4 AND PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT PUSH2 0x171B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x3375 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x172C PUSH3 0xFFFFFF NOT DUP4 AND PUSH2 0x1EC8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1745 SWAP2 SWAP1 PUSH2 0x2DB7 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x175A DUP7 PUSH3 0xFFFFFF NOT AND PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 DUP5 EQ PUSH2 0x178C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x3320 JUMP JUMPDEST PUSH1 0x8 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x17B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x33A4 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x17D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F SWAP1 PUSH2 0x32CF JUMP JUMPDEST DUP1 PUSH1 0x5 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP DUP2 DUP2 PUSH1 0x7 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP11 PUSH1 0x0 SHR SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH1 0x5 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP14 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x31B937B9B996B1B430B4B7 PUSH1 0xA9 SHL DUP2 MSTORE POP DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x194E SWAP3 SWAP2 SWAP1 PUSH2 0x2A3F JUMP JUMPDEST POP SWAP1 POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x743501122BA2CD9590984350A2076553271A243E2B9DE8617A802D7C7AF7D301 DUP15 DUP7 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1990 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3755 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x8DB8D84FAF8B2365D4FFD175C1A5BF60A3C3BB8FD65FB126C9BBC39786D11DA7 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x19F7 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A08 PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1A51 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1A96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3809 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP3 MSTORE SWAP2 DUP4 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP4 ADD SLOAD PUSH1 0x2 DUP1 DUP6 ADD SLOAD PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x4 DUP8 ADD SLOAD PUSH1 0x5 DUP9 ADD DUP1 SLOAD DUP11 MLOAD PUSH2 0x100 SWAP9 DUP3 AND ISZERO DUP10 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP6 SWAP1 SWAP6 DIV PUSH1 0x1F DUP2 ADD DUP13 SWAP1 DIV DUP13 MUL DUP7 ADD DUP13 ADD SWAP1 SWAP11 MSTORE DUP10 DUP6 MSTORE SWAP7 SWAP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP9 SWAP3 SWAP8 SWAP2 SWAP7 PUSH1 0xFF DUP3 AND SWAP7 SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND SWAP5 SWAP2 SWAP4 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1BC9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B9E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1BC9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1BAC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1BFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1C6D SWAP1 DUP6 SWAP1 PUSH2 0x1F18 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x8DB8D84FAF8B2365D4FFD175C1A5BF60A3C3BB8FD65FB126C9BBC39786D11DA7 DUP9 DUP9 DUP9 DUP9 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1CBC SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x31B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH32 0x0 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1D09 SWAP3 SWAP2 SWAP1 PUSH2 0x312B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1D2F DUP3 DUP7 PUSH2 0x1FC9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1DA0 SWAP1 DUP5 SWAP1 PUSH2 0x1F18 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x20 DUP5 ADD PUSH2 0x4F4 PUSH5 0xFFFFFFFFFF DUP6 AND DUP3 DUP5 PUSH2 0x2049 JUMP JUMPDEST PUSH2 0x1DCF PUSH3 0xFFFFFF NOT DUP3 AND PUSH2 0x2083 JUMP JUMPDEST PUSH2 0x1E14 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4D616C666F726D6564206D657373616765 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xE4 PUSH2 0x1E25 PUSH3 0xFFFFFF NOT DUP4 AND PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT ISZERO PUSH2 0xA3D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206275726E206D6573736167653A20746F6F2073686F727400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1EB3 PUSH1 0xE4 DUP1 PUSH2 0x1E98 PUSH3 0xFFFFFF NOT DUP7 AND PUSH2 0x1EB9 JUMP JUMPDEST PUSH3 0xFFFFFF NOT DUP7 AND SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP2 SUB AND PUSH1 0x0 PUSH2 0x20C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x18 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH2 0x1ED6 DUP5 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 POP PUSH1 0x40 MLOAD SWAP2 POP DUP2 SWAP3 POP PUSH2 0x1EF6 DUP5 DUP4 PUSH1 0x20 ADD PUSH2 0x2125 JUMP JUMPDEST POP DUP2 DUP2 ADD PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP1 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB3 PUSH3 0xFFFFFF NOT DUP4 AND PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F6D DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x226B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1DA0 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1DA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3914 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x2021 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x203F DUP7 DUP3 DUP6 DUP6 PUSH2 0x227A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2056 DUP5 DUP5 PUSH2 0x23EF JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP2 GT ISZERO PUSH2 0x2066 JUMPI POP PUSH1 0x0 JUMPDEST DUP1 PUSH2 0x2078 JUMPI PUSH3 0xFFFFFF NOT SWAP2 POP POP PUSH2 0x19E8 JUMP JUMPDEST PUSH2 0x4F4 DUP6 DUP6 DUP6 PUSH2 0x2449 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x208E DUP3 PUSH2 0x245C JUMP JUMPDEST PUSH5 0xFFFFFFFFFF AND PUSH5 0xFFFFFFFFFF EQ ISZERO PUSH2 0x20A9 JUMPI POP PUSH1 0x0 PUSH2 0x1448 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20B4 DUP4 PUSH2 0x2462 JUMP JUMPDEST PUSH1 0x40 MLOAD LT ISZERO SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x20CC DUP7 PUSH2 0x2487 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 POP PUSH2 0x20E0 DUP7 PUSH2 0x2462 JUMP JUMPDEST PUSH2 0x20F4 DUP6 PUSH2 0x20EE DUP5 DUP10 PUSH2 0x23EF JUMP JUMPDEST SWAP1 PUSH2 0x23EF JUMP JUMPDEST GT ISZERO PUSH2 0x2107 JUMPI PUSH3 0xFFFFFF NOT SWAP2 POP POP PUSH2 0x12D0 JUMP JUMPDEST PUSH2 0x2111 DUP2 DUP7 PUSH2 0x23EF JUMP JUMPDEST SWAP1 POP PUSH2 0x203F DUP4 PUSH5 0xFFFFFFFFFF AND DUP3 DUP7 PUSH2 0x2049 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2130 DUP4 PUSH2 0x2496 JUMP JUMPDEST PUSH2 0x216B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x393E PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2174 DUP4 PUSH2 0x2083 JUMP JUMPDEST PUSH2 0x21AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3966 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x21BA DUP5 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 POP PUSH1 0x0 PUSH2 0x21D0 DUP6 PUSH2 0x2487 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD SWAP2 POP DUP6 DUP3 GT ISZERO PUSH2 0x21F1 JUMPI PUSH1 0x20 PUSH1 0x60 REVERT JUMPDEST DUP4 DUP7 DUP6 DUP6 PUSH1 0x4 GAS STATICCALL SWAP1 POP DUP1 PUSH2 0x223C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x6964656E74697479204F4F47 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x952 PUSH2 0x2248 DUP9 PUSH2 0x245C JUMP JUMPDEST PUSH5 0xFFFFFFFFFF AND DUP8 DUP7 PUSH2 0x2449 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB3 PUSH3 0xFFFFFF NOT DUP4 AND PUSH1 0x44 PUSH1 0x20 PUSH2 0x24A8 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x12D0 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x24C9 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP3 GT ISZERO PUSH2 0x22DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x382F PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0x22F0 JUMPI POP DUP4 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST PUSH2 0x232B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3898 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2387 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4F4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x19E8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x60 SWAP3 DUP4 SHL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SHL OR PUSH1 0x18 SHL SWAP1 JUMP JUMPDEST PUSH1 0xD8 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x246D DUP3 PUSH2 0x1EB9 JUMP JUMPDEST PUSH2 0x2476 DUP4 PUSH2 0x2487 JUMP JUMPDEST ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x78 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24A1 DUP3 PUSH2 0x2619 JUMP JUMPDEST ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH1 0xFF AND PUSH2 0x24BF DUP6 DUP6 DUP6 PUSH2 0x2625 JUMP JUMPDEST SWAP1 SHR SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x250A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3851 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2513 DUP6 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x2564 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x25A2 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2583 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2604 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2609 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x952 DUP3 DUP3 DUP7 PUSH2 0x278E JUMP JUMPDEST PUSH3 0xFFFFFF NOT SWAP1 DUP2 AND EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH2 0x2637 JUMPI POP PUSH1 0x0 PUSH2 0x19E8 JUMP JUMPDEST PUSH2 0x2640 DUP5 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x2656 DUP5 PUSH1 0xFF DUP6 AND PUSH2 0x23EF JUMP JUMPDEST GT ISZERO PUSH2 0x2711 JUMPI PUSH2 0x268D PUSH2 0x2668 DUP6 PUSH2 0x2487 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x267A DUP7 PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP6 DUP6 PUSH1 0xFF AND PUSH2 0x27F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x26D6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x26BE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2703 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 PUSH1 0xFF AND GT ISZERO PUSH2 0x2754 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x38DA PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP3 MUL PUSH1 0x0 PUSH2 0x2763 DUP7 PUSH2 0x2487 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 POP PUSH1 0x0 PUSH2 0x2779 DUP4 PUSH2 0x28E7 JUMP JUMPDEST SWAP2 SWAP1 SWAP6 ADD MLOAD AND SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x279D JUMPI POP DUP2 PUSH2 0x19E8 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x27AD JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP5 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP5 MLOAD DUP6 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x26D6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x26BE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2801 DUP7 PUSH2 0x28F6 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x0 PUSH2 0x280F DUP7 PUSH2 0x28F6 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x0 PUSH2 0x281D DUP7 PUSH2 0x28F6 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x0 PUSH2 0x282B DUP7 PUSH2 0x28F6 JUMP JUMPDEST SWAP2 POP POP DUP4 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH2 0x3991 PUSH1 0x35 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT PUSH1 0xD0 DUP8 DUP2 SHL DUP3 AND PUSH1 0x35 DUP5 ADD MSTORE PUSH15 0x40EED2E8D040D8CADCCEE8D04060F PUSH1 0x8B SHL PUSH1 0x3B DUP5 ADD MSTORE DUP7 SWAP1 SHL AND PUSH1 0x4A DUP3 ADD MSTORE PUSH1 0x50 ADD PUSH1 0x21 PUSH2 0x3877 DUP3 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT PUSH1 0xD0 SWAP5 DUP6 SHL DUP2 AND PUSH1 0x21 DUP4 ADD MSTORE PUSH15 0x40EED2E8D040D8CADCCEE8D04060F PUSH1 0x8B SHL PUSH1 0x27 DUP4 ADD MSTORE SWAP3 SWAP1 SWAP4 SHL SWAP1 SWAP2 AND PUSH1 0x36 DUP4 ADD MSTORE POP PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x3C DUP3 ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1D DUP2 DUP5 SUB ADD DUP2 MSTORE PUSH1 0x3D SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL PUSH1 0x0 NOT SWAP1 SWAP2 ADD SAR SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1F JUMPDEST PUSH1 0xF DUP2 PUSH1 0xFF AND GT ISZERO PUSH2 0x2940 JUMPI PUSH1 0xFF PUSH1 0x8 DUP3 MUL AND DUP5 SWAP1 SHR PUSH2 0x291B DUP2 PUSH2 0x298E JUMP JUMPDEST PUSH2 0xFFFF AND DUP5 OR SWAP4 POP DUP2 PUSH1 0xFF AND PUSH1 0x10 EQ PUSH2 0x2936 JUMPI PUSH1 0x10 DUP5 SWAP1 SHL SWAP4 POP JUMPDEST POP PUSH1 0x0 NOT ADD PUSH2 0x28FC JUMP JUMPDEST POP PUSH1 0xF JUMPDEST PUSH1 0xFF DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x2988 JUMPI PUSH1 0xFF PUSH1 0x8 DUP3 MUL AND DUP5 SWAP1 SHR PUSH2 0x2963 DUP2 PUSH2 0x298E JUMP JUMPDEST PUSH2 0xFFFF AND DUP4 OR SWAP3 POP DUP2 PUSH1 0xFF AND PUSH1 0x0 EQ PUSH2 0x297E JUMPI PUSH1 0x10 DUP4 SWAP1 SHL SWAP3 POP JUMPDEST POP PUSH1 0x0 NOT ADD PUSH2 0x2944 JUMP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29A0 PUSH1 0x4 DUP4 PUSH1 0xFF AND SWAP1 SHR PUSH2 0x29BE JUMP JUMPDEST PUSH1 0xFF AND OR PUSH1 0x8 SHL PUSH3 0xFFFF00 AND PUSH2 0x29B5 DUP3 PUSH2 0x29BE JUMP JUMPDEST PUSH1 0xFF AND OR SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x10 DUP1 DUP3 MSTORE PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0xF DUP5 AND SWAP2 DUP3 SWAP1 DUP2 LT PUSH2 0x29F8 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 SHR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2A75 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2ABB JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2A8E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2ABB JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2ABB JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2ABB JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2AA0 JUMP JUMPDEST POP PUSH2 0x2AC7 SWAP3 SWAP2 POP PUSH2 0x2B6F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2AC7 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2B70 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2BAC JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BC3 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2BDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2BF2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2C05 PUSH2 0x2C00 DUP3 PUSH2 0x37BA JUMP JUMPDEST PUSH2 0x3796 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x2C19 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C58 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x19E8 DUP3 PUSH2 0x2B84 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2C79 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x2C82 DUP8 PUSH2 0x2B84 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2CAC JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2CB8 DUP11 DUP4 DUP12 ADD PUSH2 0x2BE2 JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2CD4 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x2CE1 DUP10 DUP3 DUP11 ADD PUSH2 0x2BE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2D03 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x2D11 JUMPI DUP5 DUP6 REVERT JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0x2D24 JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D3F JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2D4B DUP8 DUP3 DUP9 ADD PUSH2 0x2BE2 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D6D JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D85 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D9E JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2DAE PUSH1 0x20 DUP5 ADD PUSH2 0x2B84 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2DC9 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD SWAP2 POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DE6 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2DF6 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x2E04 PUSH2 0x2C00 DUP3 PUSH2 0x37BA JUMP JUMPDEST DUP2 DUP2 MSTORE DUP7 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x2E18 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2E29 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x37DC JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E48 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2E6B JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E8F JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x2E9B DUP7 DUP3 DUP8 ADD PUSH2 0x2BE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2EB9 JUMPI DUP1 DUP2 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2EEA JUMPI DUP5 DUP6 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2F16 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2F22 DUP12 DUP4 DUP13 ADD PUSH2 0x2BE2 JUMP JUMPDEST SWAP6 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP5 POP PUSH2 0x2F37 PUSH1 0xA0 DUP12 ADD PUSH2 0x2B84 JUMP JUMPDEST SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2F4C JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x2F59 DUP11 DUP3 DUP12 ADD PUSH2 0x2BE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2F80 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2CAC JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2FC1 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x2FCA DUP6 PUSH2 0x2C33 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2FEC JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2FF8 DUP8 DUP3 DUP9 ADD PUSH2 0x2B9B JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x301B JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x3024 DUP7 PUSH2 0x2C33 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH2 0x3039 PUSH1 0x40 DUP8 ADD PUSH2 0x2C33 JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3054 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x3060 DUP9 DUP3 DUP10 ADD PUSH2 0x2B9B JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x308F DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x37DC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x30AD JUMPI INVALID JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x30AD JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD PUSH1 0x1 DUP1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x30DA JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x30F1 JUMPI PUSH2 0x3120 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE PUSH1 0x2 DUP4 DIV PUSH1 0x7F AND DUP7 ADD SWAP4 POP PUSH2 0x3120 JUMP JUMPDEST PUSH1 0x2 DUP4 DIV DUP8 DUP7 MSTORE PUSH1 0x20 DUP1 DUP8 KECCAK256 DUP8 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3118 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP3 ADD PUSH2 0x30FF JUMP JUMPDEST POP POP POP DUP7 ADD SWAP4 POP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3192 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3176 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31EF DUP3 DUP8 PUSH2 0x30B1 JUMP JUMPDEST PUSH2 0x31FC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x30A3 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3210 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x3077 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP7 AND DUP3 MSTORE DUP5 PUSH1 0x20 DUP4 ADD MSTORE DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x203F PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x3077 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x9CC2E8D2DEDCC2D8D2E8F29AD2E6DAC2E8C6D PUSH1 0x6B SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x496E76616C69645369676E6174757265 PUSH1 0x80 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x496E76616C69644E6174696F6E616C697479 PUSH1 0x70 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x125B9D985B1A59105B5BDD5B9D PUSH1 0x9A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x125B9D985B1A59149958DA5C1A595B9D PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x125B9D985B1A59141BDBDB PUSH1 0xAA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x496E7465726E616C2066756E6374696F6E206F6E6C79 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x139BC81A1BDBDAC819185D18481C1C9BDD9A591959 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x506F6F6C496E616374697665 PUSH1 0xA0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x105B1C9958591E50DB185A5B5959 PUSH1 0x92 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x496E73756666696369656E7446756E6473 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x2AB730BABA3437B934BD32B221B0B63632B9 PUSH1 0x71 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP5 ADD MLOAD AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF PUSH1 0xA0 DUP5 ADD MLOAD AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xE0 DUP1 DUP5 ADD MSTORE PUSH2 0x12D0 PUSH2 0x100 DUP5 ADD DUP3 PUSH2 0x3077 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x350E PUSH1 0x40 DUP5 ADD DUP3 PUSH2 0x30B1 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x3521 PUSH1 0x60 DUP5 ADD DUP3 PUSH2 0x30A3 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x140 DUP1 PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x353E PUSH2 0x160 DUP6 ADD DUP4 PUSH2 0x3077 JUMP JUMPDEST SWAP2 POP PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0xE0 DUP6 ADD MLOAD PUSH2 0x100 DUP2 DUP2 DUP8 ADD MSTORE DUP1 DUP8 ADD MLOAD SWAP2 POP POP PUSH2 0x120 DUP2 DUP2 DUP8 ADD MSTORE DUP1 DUP8 ADD MLOAD SWAP2 POP POP PUSH2 0x358D DUP3 DUP7 ADD DUP3 PUSH2 0x3071 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP9 DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x20 DUP4 ADD MSTORE DUP7 PUSH1 0x40 DUP4 ADD MSTORE DUP6 PUSH1 0x60 DUP4 ADD MSTORE DUP5 ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF DUP5 AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xE0 PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x35DE PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x3077 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP13 DUP4 MSTORE PUSH2 0x3600 PUSH1 0x20 DUP5 ADD DUP14 PUSH2 0x30B1 JUMP JUMPDEST PUSH2 0x360D PUSH1 0x40 DUP5 ADD DUP13 PUSH2 0x30A3 JUMP JUMPDEST DUP1 PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x361F DUP2 DUP5 ADD DUP12 PUSH2 0x3077 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD SWAP10 SWAP1 SWAP10 MSTORE POP POP PUSH1 0xA0 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xE0 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x120 SWAP1 SWAP2 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP3 MSTORE DUP6 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x36A3 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x3077 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP9 DUP3 MSTORE DUP8 PUSH1 0x20 DUP4 ADD MSTORE DUP7 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0xE0 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x36DC PUSH1 0xE0 DUP4 ADD DUP8 PUSH2 0x3077 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0xA0 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0xC0 DUP5 ADD MSTORE PUSH2 0x3704 DUP2 DUP6 PUSH2 0x3077 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP7 AND DUP3 MSTORE DUP5 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP4 ADD MSTORE DUP3 PUSH1 0x60 DUP4 ADD MSTORE DUP3 DUP5 PUSH1 0x80 DUP5 ADD CALLDATACOPY DUP2 DUP4 ADD PUSH1 0x80 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x31B937B9B996B1B430B4B7 PUSH1 0xA9 SHL PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x37B2 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x37CE JUMPI INVALID JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x37F7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x37DF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1C6D JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737345434453413A20696E76616C69642073 PUSH10 0x676E6174757265202773 0x27 KECCAK256 PUSH23 0x616C7565416464726573733A20696E7375666669636965 PUSH15 0x742062616C616E636520666F722063 PUSH2 0x6C6C 0x2E KECCAK256 COINBASE PUSH21 0x74656D7074656420746F20696E646578206174206F PUSH7 0x66736574203078 GASLIMIT NUMBER DIFFICULTY MSTORE8 COINBASE GASPRICE KECCAK256 PUSH10 0x6E76616C696420736967 PUSH15 0x6174757265202776272076616C7565 0x4F PUSH24 0x6E61626C653A2063616C6C6572206973206E6F7420746865 KECCAK256 PUSH16 0x776E657254797065644D656D56696577 0x2F PUSH10 0x6E646578202D20417474 PUSH6 0x6D7074656420 PUSH21 0x6F20696E646578206D6F7265207468616E20333220 PUSH3 0x797465 PUSH20 0x5361666545524332303A204552433230206F7065 PUSH19 0x6174696F6E20646964206E6F74207375636365 PUSH6 0x645479706564 0x4D PUSH6 0x6D566965772F PUSH4 0x6F707954 PUSH16 0x202D204E756C6C20706F696E74657220 PUSH5 0x6572656654 PUSH26 0x7065644D656D566965772F636F7079546F202D20496E76616C69 PUSH5 0x20706F696E PUSH21 0x657220646572656654797065644D656D566965772F PUSH10 0x6E646578202D204F7665 PUSH19 0x72616E2074686520766965772E20536C696365 KECCAK256 PUSH10 0x73206174203078A26469 PUSH17 0x667358221220384EEB81A97676913426C9 0xAC COINBASE DUP1 0xB8 0xCC CALLDATALOAD PUSH26 0x1EE29BC382297CA9C110ECF6B8CA64736F6C6343000706003300 ","sourceMap":"1459:17395:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16758:166;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7701:237;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1722:33::-;;;:::i;:::-;;;;;;;:::i;11108:1123::-;;;;;;:::i;:::-;;:::i;:::-;;3558:49;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;15356:278::-;;;;;;:::i;:::-;;:::i;17944:375::-;;;;;;:::i;:::-;;:::i;3199:41::-;;;:::i;:::-;;;;;;;:::i;3934:76::-;;;;;;:::i;:::-;;:::i;18573:123::-;;;;;;:::i;:::-;;:::i;3613:76::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;18383:120::-;;;:::i;1717:145:0:-;;;:::i;17615:255:9:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8324:398::-;;;;;;:::i;:::-;;:::i;12562:2286::-;;;;;;:::i;:::-;;:::i;6533:1107::-;;;;;;:::i;:::-;;:::i;1761:37::-;;;:::i;1085:85:0:-;;;:::i;16557:124:9:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1845:26::-;;;:::i;14948:344::-;;;;;;:::i;:::-;;:::i;16995:135::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;18760:92::-;;;:::i;12319:152::-;;;;;;:::i;:::-;;:::i;9008:1995::-;;;;;;:::i;:::-;;:::i;3322:201::-;;;:::i;17238:278::-;;;;;;:::i;:::-;;:::i;2011:240:0:-;;;;;;:::i;:::-;;:::i;3695:63:9:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;1689:27::-;;;:::i;4052:55::-;;;;;;:::i;:::-;;:::i;16758:166::-;16842:18;;:::i;:::-;-1:-1:-1;16879:25:9;;;;:17;:25;;;;;;;;-1:-1:-1;;;;;16879:38:9;;;;;;;;;;;16872:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16758:166::o;7701:237::-;7927:4;7701:237;;;;;;;;:::o;1722:33::-;;;:::o;11108:1123::-;11199:23;11225:19;;;:11;:19;;;;;11271:7;;:17;;11263:41;;;;-1:-1:-1;;;11263:41:9;;;;;;;:::i;:::-;;;;;;;;;11322:13;;;;;;11314:38;;;;-1:-1:-1;;;11314:38:9;;;;;;;:::i;:::-;11379:1;11370:6;:10;11362:36;;;;-1:-1:-1;;;11362:36:9;;;;;;;:::i;:::-;11465:61;-1:-1:-1;;;;;11465:9:9;:26;11492:10;11512:4;11519:6;11465:26;:61::i;:::-;11574:4;:16;;;:18;;;;;;;;;;;;;11629:6;11602:4;:23;;;:33;;;;;;;;;;;11718:291;;;;;;;;11742:4;:16;;;11718:291;;;;11787:10;-1:-1:-1;;;;;11718:291:9;;;;;11819:6;11718:291;;;;11850:15;11718:291;;;;11893:5;11718:291;;;;;;11926:1;11718:291;;;;;;11990:8;11718:291;;;11685:10;:18;11696:6;11685:18;;;;;;;;;;;:30;11704:10;-1:-1:-1;;;;;11685:30:9;-1:-1:-1;;;;;11685:30:9;;;;;;;;;;;;:324;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11685:324:9;;;;;-1:-1:-1;;;;;11685:324:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;12079:10;-1:-1:-1;;;;;12033:191:9;12059:6;12033:191;12103:1;12157:6;12177:15;12206:8;12033:191;;;;;;;;;:::i;:::-;;;;;;;;11108:1123;;;;:::o;3558:49::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3558:49:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3558:49:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3558:49:9;;-1:-1:-1;3558:49:9;;;;;:::o;15356:278::-;1308:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;;;15427:23:9::1;15453:19:::0;;;:11:::1;:19;::::0;;;;15490:7;;:17;::::1;15482:41;;;;-1:-1:-1::0;;;15482:41:9::1;;;;;;;:::i;:::-;15559:13;::::0;::::1;::::0;;-1:-1:-1;;15542:30:9;::::1;15559:13;::::0;;::::1;15558:14;15542:30;::::0;;;;15587:40:::1;::::0;15605:6;;15587:40:::1;::::0;::::1;::::0;15613:13;::::1;::::0;15587:40:::1;:::i;:::-;;;;;;;;1367:1:0;15356:278:9::0;:::o;17944:375::-;18190:4;18211:101;18233:11;18246:9;18257:14;18273:11;18286:9;18297:14;18211:21;:101::i;:::-;18204:108;17944:375;-1:-1:-1;;;;;;;17944:375:9:o;3199:41::-;;;:::o;3934:76::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;18573:123::-;1308:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;;;18668:12:9::1;::::0;18645:44:::1;::::0;-1:-1:-1;;;;;18645:9:9::1;:22:::0;::::1;::::0;18668:12:::1;18682:6:::0;18645:22:::1;:44::i;:::-;18573:123:::0;:::o;3613:76::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3613:76:9;;;;;;:::o;18383:120::-;18462:34;;-1:-1:-1;;;18462:34:9;;18436:7;;-1:-1:-1;;;;;18462:9:9;:19;;;;:34;;18490:4;;18462:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18455:41;;18383:120;:::o;1717:145:0:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;;;1823:1:::1;1807:6:::0;;1786:40:::1;::::0;-1:-1:-1;;;;;1807:6:0;;::::1;::::0;1786:40:::1;::::0;1823:1;;1786:40:::1;1853:1;1836:19:::0;;-1:-1:-1;;;;;;1836:19:0::1;::::0;;1717:145::o;17615:255:9:-;17829:34;;;;:18;:34;;;;;;;;;17822:41;;;;;;;;;;;;;;;;;17712:16;;17822:41;;;17829:34;17822:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17615:255;;;;:::o;8324:398::-;6407:22;;8549:4;;-1:-1:-1;;;;;6407:22:9;6393:10;:36;6385:67;;;;-1:-1:-1;;;6385:67:9;;;;;;;:::i;:::-;8569:66:::1;::::0;-1:-1:-1;;;8569:66:9;;:4:::1;::::0;:31:::1;::::0;:66:::1;::::0;8601:12;;8615:6;;8623:11;;;;8569:66:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;8565:151;;-1:-1:-1::0;8700:5:9::1;8693:12;;8565:151;-1:-1:-1::0;8657:4:9::1;8650:11;;12562:2286:::0;12817:23;12843:19;;;:11;:19;;;;;12918:7;;:17;;12910:41;;;;-1:-1:-1;;;12910:41:9;;;;;;;:::i;:::-;12969:13;;;;;;12961:38;;;;-1:-1:-1;;;12961:38:9;;;;;;;:::i;:::-;13018:32;;;;:24;:32;;;;;;;;:48;;;;;;;;;;;13017:49;13009:76;;;;-1:-1:-1;;;13009:76:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;13103:23:9;;13095:52;;;;-1:-1:-1;;;13095:52:9;;;;;;;:::i;:::-;13291:4;:24;;13275:42;;;;;;:::i;:::-;;;;;;;;13258:11;13242:29;;;;;;:75;13221:141;;;;-1:-1:-1;;;13221:141:9;;;;;;;:::i;:::-;13481:100;13503:10;13515:9;13526:14;13542:11;13555:9;13566:14;13481:21;:100::i;:::-;13460:163;;;;-1:-1:-1;;;13460:163:9;;;;;;;:::i;:::-;13710:28;;;;13756:34;;-1:-1:-1;;;13756:34:9;;13710:28;;-1:-1:-1;;;;;13756:9:9;:19;;;;:34;;13784:4;;13756:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;;13748:79;;;;-1:-1:-1;;;13748:79:9;;;;;;;:::i;:::-;13875:4;:23;;;:25;;;;;;;;;;;;;13937:11;13910:4;:23;;;:38;;;;;;;;;;;14081:212;;;;;;;;14118:9;14081:212;;;;14157:14;14081:212;;;;14200:9;-1:-1:-1;;;;;14081:212:9;;;;;14231:11;14081:212;;;;14267:15;14081:212;;;14042:17;:25;14060:6;14042:25;;;;;;;;;;;:36;14068:9;-1:-1:-1;;;;;14042:36:9;-1:-1:-1;;;;;14042:36:9;;;;;;;;;;;;:251;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14042:251:9;;;;;-1:-1:-1;;;;;14042:251:9;;;;;;;;;;;;;;;;;;;;;;;;;14433:4;14382:24;:32;14407:6;14382:32;;;;;;;;;;;:48;14415:14;14382:48;;;;;;;;;;;;:55;;;;;;;;;;;;;;;;;;14447:18;:34;14466:14;14447:34;;;;;;;;;;;14487:6;14447:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14552:46;14575:9;14586:11;14552:9;-1:-1:-1;;;;;14552:22:9;;;:46;;;;;:::i;:::-;14692:9;-1:-1:-1;;;;;14622:219:9;14668:10;-1:-1:-1;;;;;14622:219:9;14648:6;14622:219;14715:9;14738:14;14766:11;14791;14816:15;14622:219;;;;;;;;;;:::i;:::-;;;;;;;;12562:2286;;;;;;;;;:::o;6533:1107::-;6759:7;1308:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;;;6822:1:9::1;6792:19;6786:33;:37;6778:68;;;;-1:-1:-1::0;;;6778:68:9::1;;;;;;;:::i;:::-;6890:1;6864:23;:27;6856:53;;;;-1:-1:-1::0;;;6856:53:9::1;;;;;;;:::i;:::-;6945:11;:13:::0;;::::1;::::0;::::1;::::0;;6999:407:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;6945:13;;6999:407:::1;::::0;::::1;::::0;7062:12;;6999:407;::::1;;;;;;;;;;7104:14;6999:407;;;;;;;;;;;;7153:19;6999:407;;;;7211:23;6999:407;;;;7268:1;6999:407;;;;7296:1;6999:407;;;;7331:1;6999:407;;;;7366:1;6999:407;;;;7391:4;6999:407;;;;::::0;6977:11:::1;:19;6989:6;6977:19;;;;;;;;;;;:429;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;6977:429:9::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;6977:429:9::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;6977:429:9::1;::::0;::::1;;::::0;;;::::1;::::0;;7430:171:::1;::::0;7461:6;;7430:171:::1;::::0;::::1;::::0;7481:12;;7507:14;;7535:19;;7568:23;;7430:171:::1;:::i;:::-;;;;;;;;7627:6:::0;-1:-1:-1;1367:1:0::1;6533:1107:9::0;;;;;;:::o;1761:37::-;;;-1:-1:-1;;;;;1761:37:9;;:::o;1085:85:0:-;1131:7;1157:6;-1:-1:-1;;;;;1157:6:0;1085:85;:::o;16557:124:9:-;16619:17;;:::i;:::-;16655:19;;;;:11;:19;;;;;;;;;16648:26;;;;;;;;;;;;;;;;16655:19;;16648:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16648:26:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;16648:26:9;;;-1:-1:-1;;16648:26:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16557:124:9;;;;:::o;1845:26::-;;;;:::o;14948:344::-;15182:103;;-1:-1:-1;;;15182:103:9;;:4;;:16;;:103;;15199:6;;15207:9;;15218:14;;15234:11;;15247:9;;15258:10;;15270:14;;15182:103;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14948:344;;;;;;:::o;16995:135::-;17067:12;;:::i;:::-;17098:18;;;;:10;:18;;;;;;;;-1:-1:-1;;;;;17098:25:9;;;;;;;;;;;;17091:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17091:32:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;17098:25;;17091:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16995:135;;;;:::o;18760:92::-;18834:11;;18760:92;:::o;12319:152::-;1308:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;;;12416:22:9::1;:48:::0;;-1:-1:-1;;;;;;12416:48:9::1;-1:-1:-1::0;;;;;12416:48:9;;;::::1;::::0;;;::::1;::::0;;12319:152::o;9008:1995::-;9237:10;9259:4;9237:27;9229:62;;;;-1:-1:-1;;;9229:62:9;;;;;;;:::i;:::-;9310:12;9325:18;9341:1;9325:11;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9325:15:9;;:18;-1:-1:-1;;9325:15:9;:18;-1:-1:-1;9325:18:9:i;:::-;9310:33;-1:-1:-1;9397:33:9;-1:-1:-1;;9397:31:9;;;:33::i;:::-;9478:20;9501:19;-1:-1:-1;;9501:17:9;;;:19::i;:::-;9478:42;-1:-1:-1;9559:1:9;9538:18;-1:-1:-1;;9538:16:9;;;:18::i;:::-;-1:-1:-1;;;;;9538:22:9;;9530:56;;;;-1:-1:-1;;;9530:56:9;;;;;;;:::i;:::-;9596:21;9620:20;-1:-1:-1;;9620:18:9;;;:20::i;:::-;9596:44;;9709:14;9725:22;9762:8;9751:39;;;;;;;;;;;;:::i;:::-;9708:82;;;;9844:22;9869:17;:4;:15;;;;:17::i;:::-;9905:23;9931:19;;;:11;:19;;;;;10006:7;;9844:42;;-1:-1:-1;9931:19:9;10006:17;;9998:41;;;;-1:-1:-1;;;9998:41:9;;;;;;;:::i;:::-;10057:13;;;;;;10049:38;;;;-1:-1:-1;;;10049:38:9;;;;;;;:::i;:::-;10122:1;10105:14;:18;10097:44;;;;-1:-1:-1;;;10097:44:9;;;;;;;:::i;:::-;10189:4;:16;;;:18;;;;;;;;;;;;;10244:14;10217:4;:23;;;:41;;;;;;;;;;;10345:21;10393:6;10385:15;;10345:57;;10493:300;;;;;;;;10517:4;:16;;;10493:300;;;;10562:13;-1:-1:-1;;;;;10493:300:9;;;;;10597:14;10493:300;;;;10636:15;10493:300;;;;10679:4;10493:300;;;;;;10711:12;10493:300;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;10493:300:9;;;;;;10457:10;:18;10468:6;10457:18;;;;;;;;;;;:33;10476:13;-1:-1:-1;;;;;10457:33:9;-1:-1:-1;;;;;10457:33:9;;;;;;;;;;;;:336;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10457:336:9;;;;;-1:-1:-1;;;;;10457:336:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;10863:13;-1:-1:-1;;;;;10817:179:9;10843:6;10817:179;10890:12;10916:14;10944:15;10817:179;;;;;;;;:::i;:::-;;;;;;;;9008:1995;;;;;;;;;;;;:::o;3322:201::-;3378:145;3322:201;:::o;17238:278::-;17356:4;17461:32;;;:24;:32;;;;;;;;:48;;;;;;;;;;;17238:278;;;;;;:::o;2011:240:0:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;2099:22:0;::::1;2091:73;;;;-1:-1:-1::0;;;2091:73:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2200:6;::::0;;2179:38:::1;::::0;-1:-1:-1;;;;;2179:38:0;;::::1;::::0;2200:6;::::1;::::0;2179:38:::1;::::0;::::1;2227:6;:17:::0;;-1:-1:-1;;;;;;2227:17:0::1;-1:-1:-1::0;;;;;2227:17:0;;;::::1;::::0;;;::::1;::::0;;2011:240::o;3695:63:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3695:63:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3695:63:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1689:27::-;;;-1:-1:-1;;;;;1689:27:9;;:::o;4052:55::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;885:203:4:-;1012:68;;;-1:-1:-1;;;;;1012:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1012:68:4;-1:-1:-1;;;1012:68:4;;;985:96;;1005:5;;985:19;:96::i;:::-;885:203;;;;:::o;598:104:6:-;685:10;598:104;:::o;15712:779:9:-;15954:4;15970:18;3378:145;16089:11;16118:9;16145:14;16193:11;16177:29;;;;;;16224:9;16014:233;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15991:266;;;;;;15970:287;;16276:14;16345:16;16363:10;16316:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;16316:58:9;;;;;;;;;16293:91;;16316:58;16293:91;;;;;-1:-1:-1;16403:14:9;16420:25;16293:91;16435:9;16420:14;:25::i;:::-;16472:12;;-1:-1:-1;;;;;16472:12:9;;;16462:22;;;;15712:779;-1:-1:-1;;;;;;;;;;15712:779:9:o;704:175:4:-;813:58;;;-1:-1:-1;;;;;813:58:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;813:58:4;-1:-1:-1;;;813:58:4;;;786:86;;806:5;;786:19;:86::i;:::-;704:175;;;:::o;12816:368:10:-;12920:10;;12886:7;;13075:4;13066:14;;13151:26;;;;13066:14;12920:10;13151:5;:26::i;5126:254:8:-;5212:18;-1:-1:-1;;5212:16:8;;;:18::i;:::-;5204:48;;;;;-1:-1:-1;;;5204:48:8;;;;;;;;;;;;-1:-1:-1;;;5204:48:8;;;;;;;;;;;;;;;1893:3;5283:14;-1:-1:-1;;5283:12:8;;;:14::i;:::-;-1:-1:-1;;;;;5283:33:8;;;5262:111;;;;;-1:-1:-1;;;5262:111:8;;;;;;;;;;;;;;;;;;;;;;;;;;;4745:238;4808:7;4846:130;1893:3;;4911:14;-1:-1:-1;;4911:12:8;;;:14::i;:::-;-1:-1:-1;;4846:14:8;;;:130;-1:-1:-1;;;;;4911:32:8;;4846:130;4961:1;4846:14;:130::i;:::-;4827:149;4745:238;-1:-1:-1;;4745:238:8:o;15402:332:10:-;15567:2;15686:24;-1:-1:-1;;;;;15682:36:10;;15588:140::o;27460:614::-;27515:16;27543:11;27564:12;27579;27583:7;27579:3;:12::i;:::-;-1:-1:-1;;;;;27564:27:10;;;27709:4;27703:11;27696:18;;27764:3;27757:10;;27786:33;27799:7;27808:3;27814:4;27808:10;27786:12;:33::i;:::-;-1:-1:-1;27941:14:10;;;27957:4;27937:25;27931:4;27924:39;28004:17;;27838:230;;-1:-1:-1;27838:230:10:o;3764:115:8:-;3825:7;3851:21;-1:-1:-1;;3851:19:8;;;:21::i;2967:751:4:-;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;-1:-1:-1;;;;;3412:27:4;;;:69;;;;;:::i;:::-;3495:17;;3386:95;;-1:-1:-1;3495:21:4;3491:221;;3635:10;3624:30;;;;;;;;;;;;;;;-1:-1:-1;3624:30:4;3616:85;;;;-1:-1:-1;;;3616:85:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1072:740:1;1150:7;1211:9;:16;1231:2;1211:22;1207:94;;1249:41;;;-1:-1:-1;;;1249:41:1;;;;;;;;;;;;;;;;;;;;;;;;;;;1207:94;1651:4;1636:20;;1630:27;1696:4;1681:20;;1675:27;1749:4;1734:20;;1728:27;1367:9;1720:36;1783:22;1791:4;1720:36;1630:27;1675;1783:7;:22::i;:::-;1776:29;1072:740;-1:-1:-1;;;;;;1072:740:1:o;11976:443:10:-;12057:15;;12099:14;:4;12108;12099:8;:14::i;:::-;12084:29;;12236:4;12230:11;12224:4;12221:21;12218:2;;;-1:-1:-1;12269:1:10;12218:2;12307:9;12303:51;;-1:-1:-1;;12332:11:10;;;;;12303:51;12373:39;12394:5;12401:4;12407;12373:20;:39::i;7666:314::-;7723:8;7747:15;7754:7;7747:6;:15::i;:::-;:31;;7766:12;7747:31;7743:52;;;-1:-1:-1;7788:5:10;7781:12;;7743:52;7804:12;7819;7823:7;7819:3;:12::i;:::-;7957:4;7951:11;-1:-1:-1;7935:29:10;;7850:124;-1:-1:-1;;;7850:124:10:o;16301:370::-;16402:7;16421:12;16436;16440:7;16436:3;:12::i;:::-;-1:-1:-1;;;;;16421:27:10;;;16538:12;16542:7;16538:3;:12::i;:::-;16509:26;16530:4;16509:16;:4;16518:6;16509:8;:16::i;:::-;:20;;:26::i;:::-;:41;16505:83;;;-1:-1:-1;;16566:11:10;;;;;16505:83;16605:16;:4;16614:6;16605:8;:16::i;:::-;16598:23;;16638:26;16644:7;16638:26;;16653:4;16659;16638:5;:26::i;26181:909::-;26259:15;26294:16;26302:7;26294;:16::i;:::-;26286:69;;;;-1:-1:-1;;;26286:69:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26373:16;26381:7;26373;:16::i;:::-;26365:72;;;;-1:-1:-1;;;26365:72:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26447:12;26462;26466:7;26462:3;:12::i;:::-;-1:-1:-1;;;;;26447:27:10;;;26484:15;26502:12;26506:7;26502:3;:12::i;:::-;-1:-1:-1;;;;;26484:30:10;;;26525:11;26546:8;26672:4;26666:11;26659:18;;26759:7;26754:3;26751:16;26748:2;;;26799:4;26793;26786:18;26748:2;26959:4;26950:7;26944:4;26935:7;26932:1;26925:5;26914:50;26907:57;;26991:3;26983:28;;;;;-1:-1:-1;;;26983:28:10;;;;;;;;;;;;-1:-1:-1;;;26983:28:10;;;;;;;;;;;;;;;27031:52;27052:15;27059:7;27052:6;:15::i;:::-;27031:52;;27069:7;27078:4;27031:20;:52::i;3781:138:7:-;3842:7;3868:44;-1:-1:-1;;3868:18:7;;1540:2;1584;3868:18;:44::i;3581:193:5:-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;1960:1414:1:-;2045:7;2960:66;2946:80;;;2938:127;;;;-1:-1:-1;;;2938:127:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3083:1;:7;;3088:2;3083:7;:18;;;;3094:1;:7;;3099:2;3094:7;3083:18;3075:65;;;;-1:-1:-1;;;3075:65:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3235:14;3252:24;3262:4;3268:1;3271;3274;3252:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3252:24:1;;-1:-1:-1;;3252:24:1;;;-1:-1:-1;;;;;;;3294:20:1;;3286:57;;;;;-1:-1:-1;;;3286:57:1;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:175:2;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;10918:519:10;11062:2;11213:36;;;11305:17;;;;11288:35;;;11378:17;11095:2;11362:34;;11116:315::o;13376:288::-;3023:12;13600:20;;13505:153::o;15908:113::-;15961:7;16002:12;16006:7;16002:3;:12::i;:::-;15987;15991:7;15987:3;:12::i;:::-;:27;-1:-1:-1;;;;;15980:34:10;;;15908:113;;;:::o;14244:334::-;2979:7;14534:20;-1:-1:-1;;;;;14530:32:10;;14436:136::o;7144:103::-;7201:4;7225:15;7232:7;7225:6;:15::i;:::-;7224:16;;7144:103;-1:-1:-1;;7144:103:10:o;20113:191::-;20202:14;20285:6;20280:2;:11;20295:1;20279:17;20235:62;;20243:30;20249:7;20258:6;20266;20243:5;:30::i;:::-;20235:62;;;20113:191;-1:-1:-1;;;;20113:191:10:o;4608:523:5:-;4735:12;4792:5;4767:21;:30;;4759:81;;;;-1:-1:-1;;;4759:81:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;-1:-1:-1;;;4850:60:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;-1:-1:-1;;;;;5022:11:5;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5022:33:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;6914:101:10:-;-1:-1:-1;;6993:15:10;;;;;6914:101::o;19090:677::-;19175:14;19205:11;;;19201:37;;-1:-1:-1;19234:1:10;19219:17;;19201:37;19272:12;19276:7;19272:3;:12::i;:::-;-1:-1:-1;;;;;19251:33:10;:18;:6;:18;;;:10;:18::i;:::-;:33;19247:140;;;19307:68;19323:12;19327:7;19323:3;:12::i;:::-;-1:-1:-1;;;;;19307:68:10;19337:12;19341:7;19337:3;:12::i;:::-;-1:-1:-1;;;;;19307:68:10;19351:6;19367;19359:15;;19307;:68::i;:::-;19300:76;;-1:-1:-1;;;19300:76:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19247:140;19414:2;19404:6;:12;;;;19396:83;;;;-1:-1:-1;;;19396:83:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19517:1;19508:10;;19490:15;19543:12;19547:7;19543:3;:12::i;:::-;-1:-1:-1;;;;;19528:27:10;;;19565:13;19581:19;19590:9;19581:8;:19::i;:::-;19725:17;;;;19719:24;19715:36;;;-1:-1:-1;;;;;19619:142:10:o;726:413:5:-;1086:20;1124:8;;;726:413::o;7091:725::-;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:5;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7765:20;;-1:-1:-1;;;7765:20:5;;;;;;;;;;;;;;;;;7772:12;;7765:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17847:741:10;17993:17;18025:9;18038:15;18048:4;18038:9;:15::i;:::-;18022:31;;;18066:9;18079:15;18089:4;18079:9;:15::i;:::-;18063:31;;;18107:9;18120:17;18130:6;18120:9;:17::i;:::-;18104:33;;;18150:9;18163:17;18173:6;18163:9;:17::i;:::-;18147:33;;;18330:1;18392;18472;18534;18216:355;;;;;;;;;;-1:-1:-1;;;;;;18216:355:10;;;;;;;;;;-1:-1:-1;;;18216:355:10;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;18216:355:10;;;;;;;;;;-1:-1:-1;;;18216:355:10;;;;;;;;;;;;;;;-1:-1:-1;;;;18216:355:10;;;;;;;;;;;;;;;;;;;;;17847:741;-1:-1:-1;;;;;;;;;;;17847:741:10:o;6239:366::-;-1:-1:-1;;;;;6479:12:10;;;6458:131;;6364:235::o;4203:556::-;4257:13;;4313:2;4298:202;4321:2;4317:1;:6;;;4298:202;;;4367:13;4378:1;4374:5;;4367:13;;;;4404:14;4367:13;4404:7;:14::i;:::-;4395:23;;;;;;4436:1;:7;;4441:2;4436:7;4432:58;;4473:2;4463:12;;;;;4432:58;-1:-1:-1;;;4325:6:10;4298:202;;;-1:-1:-1;4563:2:10;4548:205;4571:3;4567:1;:7;;;4548:205;;;4619:13;4630:1;4626:5;;4619:13;;;;4657:14;4619:13;4657:7;:14::i;:::-;4647:24;;;;;;4689:1;:6;;4694:1;4689:6;4685:58;;4726:2;4715:13;;;;;4685:58;-1:-1:-1;;;4577:6:10;4548:205;;;;4203:556;;;:::o;3680:199::-;3730:14;3767:18;3783:1;3777:2;:7;;;;3767:9;:18::i;:::-;3756:29;;;3821:1;3809:13;;;3843;3853:2;3843:9;:13::i;:::-;3832:24;;;;3680:199;-1:-1:-1;3680:199:10:o;3323:186::-;3479:13;;;;;;;;;;;;;-1:-1:-1;;;3479:13:10;;;;3378:11;;3425:4;3417:12;;;;;3479:22;;;;;;;;;;;;;3323:186;-1:-1:-1;;;3323:186:10:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;14:175:11;84:20;;-1:-1:-1;;;;;133:31:11;;123:42;;113:2;;179:1;176;169:12;194:377;;;311:3;304:4;296:6;292:17;288:27;278:2;;336:8;326;319:26;278:2;-1:-1:-1;366:20:11;;409:18;398:30;;395:2;;;448:8;438;431:26;395:2;492:4;484:6;480:17;468:29;;544:3;537:4;528:6;520;516:19;512:30;509:39;506:2;;;561:1;558;551:12;506:2;268:303;;;;;:::o;576:485::-;;673:3;666:4;658:6;654:17;650:27;640:2;;695:5;688;681:20;640:2;735:6;722:20;766:49;781:33;811:2;781:33;:::i;:::-;766:49;:::i;:::-;840:2;831:7;824:19;886:3;879:4;874:2;866:6;862:15;858:26;855:35;852:2;;;907:5;900;893:20;852:2;976;969:4;961:6;957:17;950:4;941:7;937:18;924:55;999:16;;;1017:4;995:27;988:42;;;;1003:7;630:431;-1:-1:-1;;630:431:11:o;1066:165::-;1135:20;;1195:10;1184:22;;1174:33;;1164:2;;1221:1;1218;1211:12;1236:198;;1348:2;1336:9;1327:7;1323:23;1319:32;1316:2;;;1369:6;1361;1354:22;1316:2;1397:31;1418:9;1397:31;:::i;1439:857::-;;;;;;;1655:3;1643:9;1634:7;1630:23;1626:33;1623:2;;;1677:6;1669;1662:22;1623:2;1705:31;1726:9;1705:31;:::i;:::-;1695:41;;1783:2;1772:9;1768:18;1755:32;1745:42;;1834:2;1823:9;1819:18;1806:32;1796:42;;1889:2;1878:9;1874:18;1861:32;1912:18;1953:2;1945:6;1942:14;1939:2;;;1974:6;1966;1959:22;1939:2;2002:51;2045:7;2036:6;2025:9;2021:22;2002:51;:::i;:::-;1992:61;;2100:3;2089:9;2085:19;2072:33;2062:43;;2158:3;2147:9;2143:19;2130:33;2114:49;;2188:2;2178:8;2175:16;2172:2;;;2209:6;2201;2194:22;2172:2;;2237:53;2282:7;2271:8;2260:9;2256:24;2237:53;:::i;:::-;2227:63;;;1613:683;;;;;;;;:::o;2301:770::-;;;;;2518:3;2506:9;2497:7;2493:23;2489:33;2486:2;;;2540:6;2532;2525:22;2486:2;2584:9;2571:23;2623:1;2616:5;2613:12;2603:2;;2644:6;2636;2629:22;2603:2;2672:5;-1:-1:-1;2729:2:11;2714:18;;2701:32;2764:1;2752:14;;2742:2;;2785:6;2777;2770:22;2742:2;2813:7;-1:-1:-1;2871:2:11;2856:18;;2843:32;2898:18;2887:30;;2884:2;;;2935:6;2927;2920:22;2884:2;2963:51;3006:7;2997:6;2986:9;2982:22;2963:51;:::i;:::-;2476:595;;;;-1:-1:-1;2953:61:11;;3061:2;3046:18;3033:32;;-1:-1:-1;;;2476:595:11:o;3076:190::-;;3188:2;3176:9;3167:7;3163:23;3159:32;3156:2;;;3209:6;3201;3194:22;3156:2;-1:-1:-1;3237:23:11;;3146:120;-1:-1:-1;3146:120:11:o;3271:194::-;;3394:2;3382:9;3373:7;3369:23;3365:32;3362:2;;;3415:6;3407;3400:22;3362:2;-1:-1:-1;3443:16:11;;3352:113;-1:-1:-1;3352:113:11:o;3470:266::-;;;3599:2;3587:9;3578:7;3574:23;3570:32;3567:2;;;3620:6;3612;3605:22;3567:2;3661:9;3648:23;3638:33;;3690:40;3726:2;3715:9;3711:18;3690:40;:::i;:::-;3680:50;;3557:179;;;;;:::o;3741:737::-;;;3891:2;3879:9;3870:7;3866:23;3862:32;3859:2;;;3912:6;3904;3897:22;3859:2;3946:9;3940:16;3930:26;;4000:2;3989:9;3985:18;3979:25;4027:18;4019:6;4016:30;4013:2;;;4064:6;4056;4049:22;4013:2;4092:22;;4145:4;4137:13;;4133:27;-1:-1:-1;4123:2:11;;4179:6;4171;4164:22;4123:2;4213;4207:9;4238:49;4253:33;4283:2;4253:33;:::i;4238:49::-;4310:2;4303:5;4296:17;4350:7;4345:2;4340;4336;4332:11;4328:20;4325:33;4322:2;;;4376:6;4368;4361:22;4322:2;4394:54;4445:2;4440;4433:5;4429:14;4424:2;4420;4416:11;4394:54;:::i;:::-;4467:5;4457:15;;;;;3849:629;;;;;:::o;4483:258::-;;;4612:2;4600:9;4591:7;4587:23;4583:32;4580:2;;;4633:6;4625;4618:22;4580:2;-1:-1:-1;;4661:23:11;;;4731:2;4716:18;;;4703:32;;-1:-1:-1;4570:171:11:o;4746:479::-;;;;4902:2;4890:9;4881:7;4877:23;4873:32;4870:2;;;4923:6;4915;4908:22;4870:2;4964:9;4951:23;4941:33;;5021:2;5010:9;5006:18;4993:32;4983:42;;5076:2;5065:9;5061:18;5048:32;5103:18;5095:6;5092:30;5089:2;;;5140:6;5132;5125:22;5089:2;5168:51;5211:7;5202:6;5191:9;5187:22;5168:51;:::i;:::-;5158:61;;;4860:365;;;;;:::o;5230:326::-;;;;5376:2;5364:9;5355:7;5351:23;5347:32;5344:2;;;5397:6;5389;5382:22;5344:2;-1:-1:-1;;5425:23:11;;;5495:2;5480:18;;5467:32;;-1:-1:-1;5546:2:11;5531:18;;;5518:32;;5334:222;-1:-1:-1;5334:222:11:o;5561:926::-;;;;;;;;5794:3;5782:9;5773:7;5769:23;5765:33;5762:2;;;5816:6;5808;5801:22;5762:2;5857:9;5844:23;5834:33;;5914:2;5903:9;5899:18;5886:32;5876:42;;5965:2;5954:9;5950:18;5937:32;5927:42;;6020:2;6009:9;6005:18;5992:32;6043:18;6084:2;6076:6;6073:14;6070:2;;;6105:6;6097;6090:22;6070:2;6133:51;6176:7;6167:6;6156:9;6152:22;6133:51;:::i;:::-;6123:61;;6231:3;6220:9;6216:19;6203:33;6193:43;;6255:41;6291:3;6280:9;6276:19;6255:41;:::i;:::-;6245:51;;6349:3;6338:9;6334:19;6321:33;6305:49;;6379:2;6369:8;6366:16;6363:2;;;6400:6;6392;6385:22;6363:2;;6428:53;6473:7;6462:8;6451:9;6447:24;6428:53;:::i;:::-;6418:63;;;5752:735;;;;;;;;;;:::o;6492:849::-;;;;;;;6708:3;6696:9;6687:7;6683:23;6679:33;6676:2;;;6730:6;6722;6715:22;6676:2;6771:9;6758:23;6748:33;;6828:2;6817:9;6813:18;6800:32;6790:42;;6879:2;6868:9;6864:18;6851:32;6841:42;;6934:2;6923:9;6919:18;6906:32;6957:18;6998:2;6990:6;6987:14;6984:2;;;7019:6;7011;7004:22;7346:573;;;;;7510:2;7498:9;7489:7;7485:23;7481:32;7478:2;;;7531:6;7523;7516:22;7478:2;7559:30;7579:9;7559:30;:::i;:::-;7549:40;;7636:2;7625:9;7621:18;7608:32;7598:42;;7691:2;7680:9;7676:18;7663:32;7718:18;7710:6;7707:30;7704:2;;;7755:6;7747;7740:22;7704:2;7799:60;7851:7;7842:6;7831:9;7827:22;7799:60;:::i;:::-;7468:451;;;;-1:-1:-1;7878:8:11;-1:-1:-1;;;;7468:451:11:o;7924:648::-;;;;;;8104:3;8092:9;8083:7;8079:23;8075:33;8072:2;;;8126:6;8118;8111:22;8072:2;8154:30;8174:9;8154:30;:::i;:::-;8144:40;;8231:2;8220:9;8216:18;8203:32;8193:42;;8254:39;8289:2;8278:9;8274:18;8254:39;:::i;:::-;8244:49;;8344:2;8333:9;8329:18;8316:32;8371:18;8363:6;8360:30;8357:2;;;8408:6;8400;8393:22;8357:2;8452:60;8504:7;8495:6;8484:9;8480:22;8452:60;:::i;:::-;8062:510;;;;-1:-1:-1;8062:510:11;;-1:-1:-1;8531:8:11;;8426:86;8062:510;-1:-1:-1;;;8062:510:11:o;8577:93::-;8649:13;8642:21;8630:34;;8620:50::o;8675:259::-;;8756:5;8750:12;8783:6;8778:3;8771:19;8799:63;8855:6;8848:4;8843:3;8839:14;8832:4;8825:5;8821:16;8799:63;:::i;:::-;8916:2;8895:15;-1:-1:-1;;8891:29:11;8882:39;;;;8923:4;8878:50;;8726:208;-1:-1:-1;;8726:208:11:o;8939:143::-;9032:1;9025:5;9022:12;9012:2;;9038:9;9012:2;9058:18;;9002:80::o;9087:141::-;9178:1;9171:5;9168:12;9158:2;;9184:9;9233:830;;9392:3;9427:6;9421:13;9453:1;9485:2;9474:9;9470:18;9502:1;9497:126;;;;9637:1;9632:406;;;;9463:575;;9497:126;-1:-1:-1;;9530:24:11;;9518:37;;9603:1;9588:17;;9607:4;9584:28;9575:38;;;-1:-1:-1;9497:126:11;;9632:406;9682:1;9671:9;9667:17;9709:6;9704:3;9697:19;9739:4;9786:2;9781:3;9771:18;9811:3;9827:165;9841:6;9838:1;9835:13;9827:165;;;9919:14;;9906:11;;;9899:35;9962:16;;;;9856:10;;9827:165;;;-1:-1:-1;;;10012:16:11;;;-1:-1:-1;9463:575:11;-1:-1:-1;10054:3:11;;9371:692;-1:-1:-1;;;;;9371:692:11:o;10068:392::-;-1:-1:-1;;;10326:27:11;;10378:1;10369:11;;10362:27;;;;10414:2;10405:12;;10398:28;10451:2;10442:12;;10316:144::o;10465:203::-;-1:-1:-1;;;;;10629:32:11;;;;10611:51;;10599:2;10584:18;;10566:102::o;10673:635::-;10844:2;10896:21;;;10966:13;;10869:18;;;10988:22;;;10673:635;;10844:2;11067:15;;;;11041:2;11026:18;;;10673:635;11113:169;11127:6;11124:1;11121:13;11113:169;;;11188:13;;11176:26;;11257:15;;;;11222:12;;;;11149:1;11142:9;11113:169;;;-1:-1:-1;11299:3:11;;10824:484;-1:-1:-1;;;;;;10824:484:11:o;11313:187::-;11478:14;;11471:22;11453:41;;11441:2;11426:18;;11408:92::o;11505:177::-;11651:25;;;11639:2;11624:18;;11606:76::o;11687:561::-;11974:25;;;-1:-1:-1;;;;;12035:32:11;;;;12030:2;12015:18;;12008:60;12099:2;12084:18;;12077:34;;;;12142:2;12127:18;;12120:34;12185:3;12170:19;;12163:35;12055:3;12214:19;;12207:35;11961:3;11946:19;;11928:320::o;12475:536::-;;12730:54;12774:9;12766:6;12730:54;:::i;:::-;12793:65;12854:2;12843:9;12839:18;12831:6;12793:65;:::i;:::-;12894:3;12889:2;12878:9;12874:18;12867:31;12915:47;12957:3;12946:9;12942:19;12934:6;12915:47;:::i;:::-;12907:55;;12998:6;12993:2;12982:9;12978:18;12971:34;12720:291;;;;;;;:::o;13016:460::-;;13268:10;13260:6;13256:23;13245:9;13238:42;13316:6;13311:2;13300:9;13296:18;13289:34;13359:6;13354:2;13343:9;13339:18;13332:34;13402:3;13397:2;13386:9;13382:18;13375:31;13423:47;13465:3;13454:9;13450:19;13442:6;13423:47;:::i;13481:343::-;13683:2;13665:21;;;13722:2;13702:18;;;13695:30;-1:-1:-1;;;13756:2:11;13741:18;;13734:49;13815:2;13800:18;;13655:169::o;13829:340::-;14031:2;14013:21;;;14070:2;14050:18;;;14043:30;-1:-1:-1;;;14104:2:11;14089:18;;14082:46;14160:2;14145:18;;14003:166::o;14174:342::-;14376:2;14358:21;;;14415:2;14395:18;;;14388:30;-1:-1:-1;;;14449:2:11;14434:18;;14427:48;14507:2;14492:18;;14348:168::o;14521:337::-;14723:2;14705:21;;;14762:2;14742:18;;;14735:30;-1:-1:-1;;;14796:2:11;14781:18;;14774:43;14849:2;14834:18;;14695:163::o;14863:340::-;15065:2;15047:21;;;15104:2;15084:18;;;15077:30;-1:-1:-1;;;15138:2:11;15123:18;;15116:46;15194:2;15179:18;;15037:166::o;15208:335::-;15410:2;15392:21;;;15449:2;15429:18;;;15422:30;-1:-1:-1;;;15483:2:11;15468:18;;15461:41;15534:2;15519:18;;15382:161::o;15548:346::-;15750:2;15732:21;;;15789:2;15769:18;;;15762:30;-1:-1:-1;;;15823:2:11;15808:18;;15801:52;15885:2;15870:18;;15722:172::o;15899:345::-;16101:2;16083:21;;;16140:2;16120:18;;;16113:30;-1:-1:-1;;;16174:2:11;16159:18;;16152:51;16235:2;16220:18;;16073:171::o;16249:336::-;16451:2;16433:21;;;16490:2;16470:18;;;16463:30;-1:-1:-1;;;16524:2:11;16509:18;;16502:42;16576:2;16561:18;;16423:162::o;16590:338::-;16792:2;16774:21;;;16831:2;16811:18;;;16804:30;-1:-1:-1;;;16865:2:11;16850:18;;16843:44;16919:2;16904:18;;16764:164::o;16933:341::-;17135:2;17117:21;;;17174:2;17154:18;;;17147:30;-1:-1:-1;;;17208:2:11;17193:18;;17186:47;17265:2;17250:18;;17107:167::o;17279:342::-;17481:2;17463:21;;;17520:2;17500:18;;;17493:30;-1:-1:-1;;;17554:2:11;17539:18;;17532:48;17612:2;17597:18;;17453:168::o;17626:521::-;17849:13;;17831:32;;17919:4;17907:17;;;17901:24;17879:20;;;17872:54;17986:4;17974:17;;;17968:24;-1:-1:-1;;;;;17964:50:11;17942:20;;;17935:80;18071:4;18059:17;;;18053:24;18031:20;;;18024:54;18134:4;18122:17;;;18116:24;18094:20;;;18087:54;;;;17818:3;17803:19;;17785:362::o;18152:758::-;;18327:2;18316:9;18309:21;18372:6;18366:13;18361:2;18350:9;18346:18;18339:41;18461:1;18457;18452:3;18448:11;18444:19;18438:2;18430:6;18426:15;18420:22;18416:48;18411:2;18400:9;18396:18;18389:76;18519:2;18511:6;18507:15;18501:22;18496:2;18485:9;18481:18;18474:50;18579:2;18571:6;18567:15;18561:22;18555:3;18544:9;18540:19;18533:51;18653:3;18645:6;18641:16;18635:23;18628:31;18621:39;18615:3;18604:9;18600:19;18593:68;18727:10;18720:3;18712:6;18708:16;18702:23;18698:40;18692:3;18681:9;18677:19;18670:69;18786:3;18778:6;18774:16;18768:23;18829:4;18822;18811:9;18807:20;18800:34;18851:53;18899:3;18888:9;18884:19;18870:12;18851:53;:::i;18915:1230::-;;19100:2;19089:9;19082:21;19145:6;19139:13;19134:2;19123:9;19119:18;19112:41;19200:2;19192:6;19188:15;19182:22;19213:69;19278:2;19267:9;19263:18;19249:12;19213:69;:::i;:::-;;19331:2;19323:6;19319:15;19313:22;19344:73;19413:2;19402:9;19398:18;19382:14;19344:73;:::i;:::-;;19466:2;19458:6;19454:15;19448:22;19489:6;19532:2;19526:3;19515:9;19511:19;19504:31;19558:55;19608:3;19597:9;19593:19;19577:14;19558:55;:::i;:::-;19544:69;;19668:3;19660:6;19656:16;19650:23;19644:3;19633:9;19629:19;19622:52;19729:3;19721:6;19717:16;19711:23;19705:3;19694:9;19690:19;19683:52;19790:3;19782:6;19778:16;19772:23;19766:3;19755:9;19751:19;19744:52;19833:3;19825:6;19821:16;19815:23;19857:3;19896:2;19891;19880:9;19876:18;19869:30;19936:2;19928:6;19924:15;19918:22;19908:32;;;19959:3;19998:2;19993;19982:9;19978:18;19971:30;20050:2;20042:6;20038:15;20032:22;20010:44;;;20063:53;20112:2;20101:9;20097:18;20081:14;20063:53;:::i;:::-;-1:-1:-1;20133:6:11;;19072:1073;-1:-1:-1;;;;19072:1073:11:o;20332:703::-;;20641:6;20630:9;20623:25;20713:1;20709;20704:3;20700:11;20696:19;20688:6;20684:32;20679:2;20668:9;20664:18;20657:60;20753:6;20748:2;20737:9;20733:18;20726:34;20796:6;20791:2;20780:9;20776:18;20769:34;20854:6;20847:14;20840:22;20834:3;20823:9;20819:19;20812:51;20912:10;20904:6;20900:23;20894:3;20883:9;20879:19;20872:52;20961:3;20955;20944:9;20940:19;20933:32;20982:47;21024:3;21013:9;21009:19;21001:6;20982:47;:::i;:::-;20974:55;20613:422;-1:-1:-1;;;;;;;;;20613:422:11:o;21040:998::-;;21467:3;21497:6;21486:9;21479:25;21513:63;21572:2;21561:9;21557:18;21549:6;21513:63;:::i;:::-;21585:65;21646:2;21635:9;21631:18;21623:6;21585:65;:::i;:::-;21686:2;21681;21670:9;21666:18;21659:30;21706:46;21748:2;21737:9;21733:18;21725:6;21706:46;:::i;:::-;21783:3;21768:19;;21761:35;;;;-1:-1:-1;;21827:3:11;21812:19;;21805:35;;;;21871:3;21856:19;;21849:35;;;;21915:3;21900:19;;21893:35;;;;21959:3;21944:19;;21937:35;22016:14;22009:22;22003:3;21988:19;;;21981:51;21698:54;21447:591;-1:-1:-1;;;;21447:591:11:o;22043:489::-;22302:25;;;22358:2;22343:18;;22336:34;;;;-1:-1:-1;;;;;22406:32:11;;;;22401:2;22386:18;;22379:60;22470:2;22455:18;;22448:34;22513:3;22498:19;;22491:35;22289:3;22274:19;;22256:276::o;22537:508::-;;22798:6;22787:9;22780:25;22841:6;22836:2;22825:9;22821:18;22814:34;22884:3;22879:2;22868:9;22864:18;22857:31;22905:47;22947:3;22936:9;22932:19;22924:6;22905:47;:::i;:::-;22983:2;22968:18;;22961:34;;;;-1:-1:-1;23026:3:11;23011:19;23004:35;22897:55;22770:275;-1:-1:-1;;;22770:275:11:o;23050:777::-;;23393:6;23382:9;23375:25;23436:6;23431:2;23420:9;23416:18;23409:34;23479:6;23474:2;23463:9;23459:18;23452:34;23522:3;23517:2;23506:9;23502:18;23495:31;23549:47;23591:3;23580:9;23576:19;23568:6;23549:47;:::i;:::-;23627:3;23612:19;;23605:35;;;-1:-1:-1;;;;;23677:32:11;;23697:3;23656:19;;23649:61;23747:22;;;23741:3;23726:19;;23719:51;23787:34;23751:6;23806;23787:34;:::i;:::-;23779:42;23365:462;-1:-1:-1;;;;;;;;;;23365:462:11:o;23832:551::-;;24055:10;24047:6;24043:23;24032:9;24025:42;24103:6;24098:2;24087:9;24083:18;24076:34;24146:2;24141;24130:9;24126:18;24119:30;24185:6;24180:2;24169:9;24165:18;24158:34;24243:6;24235;24229:3;24218:9;24214:19;24201:49;24270:22;;;24294:3;24266:32;;;24259:46;;;;24366:2;24345:15;;;-1:-1:-1;;24341:29:11;24326:45;24322:55;;24015:368;-1:-1:-1;;;24015:368:11:o;24388:567::-;24684:10;24672:23;;;;24654:42;;24727:2;24712:18;;24705:34;;;;24770:2;24755:18;;24748:34;24818:3;24813:2;24798:18;;24791:31;;;24859:2;24838:19;;;24831:31;-1:-1:-1;;;24893:3:11;24878:19;;24871:42;24945:3;24930:19;;24644:311::o;24960:242::-;25030:2;25024:9;25060:17;;;25107:18;25092:34;;25128:22;;;25089:62;25086:2;;;25154:9;25086:2;25181;25174:22;25004:198;;-1:-1:-1;25004:198:11:o;25207:181::-;;25290:18;25282:6;25279:30;25276:2;;;25312:9;25276:2;-1:-1:-1;25371:2:11;25348:17;-1:-1:-1;;25344:31:11;25377:4;25340:42;;25266:122::o;25393:258::-;25465:1;25475:113;25489:6;25486:1;25483:13;25475:113;;;25565:11;;;25559:18;25546:11;;;25539:39;25511:2;25504:10;25475:113;;;25606:6;25603:1;25600:13;25597:2;;;-1:-1:-1;;25641:1:11;25623:16;;25616:27;25446:205::o"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","VERIFICATION_MESSAGE_TYPEHASH()":"e1a788eb","_processCrossChainDonation(uint32,bytes32,bytes)":"db5e4c75","adminAddress()":"fc6f9468","cctpMessageTransmitter()":"8c73eb04","checkPersonClaimedFromPool(uint256,uint256,uint256)":"ef20c85a","claimRelief(uint256,uint256,uint256,string,uint256,address,bytes)":"82e15e51","claimReliefToSelf(uint256,uint256,uint256,string,uint256,bytes)":"a8f7f995","createReliefPool(uint8,uint8,string,uint256)":"8b29caf5","donate(uint256,uint256,string)":"16c3cdf5","emergencyWithdraw(uint256)":"5312ea8e","getBeneficiary(uint256,address)":"06cc759b","getContractBalance()":"6f9fb98a","getDonor(uint256,address)":"d0e5a743","getPersonClaimedPools(uint256,uint256)":"73aacb00","getReliefPool(uint256)":"8e09727e","getTotalPools()":"d3ffe67a","handleReceiveFinalizedMessage(uint32,bytes32,uint32,bytes)":"11cffb67","handleReceiveUnfinalizedMessage(uint32,bytes32,uint32,bytes)":"7c92f219","hasPersonClaimedFromPool(uint256,uint256)":"3b121902","owner()":"8da5cb5b","personClaimedPools(uint256,uint256)":"feb16532","poolBeneficiaries(uint256,address)":"59b3c2d8","poolCounter()":"9e3079cb","poolDonors(uint256,address)":"f594dbf4","reliefPools(uint256)":"19c2799f","renounceOwnership()":"715018a6","setCCTPMessageTransmitter(address)":"d9db6e03","togglePoolStatus(uint256)":"216b31c1","transferOwnership(address)":"f2fde38b","usdcToken()":"11eac855","verifyAdminSignature(address,uint256,uint256,string,uint256,bytes)":"29d9b720"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_adminAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdcToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_cctpMessageTransmitter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"sourceDomain\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"DonationMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nullifier\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userIdentifier\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"nationality\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"FundsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"PoolStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum ReliefPools.DisasterTypeEnum\",\"name\":\"disasterType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum ReliefPools.ClassificationEnum\",\"name\":\"classification\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"nationalityRequired\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allocatedFundsPerPerson\",\"type\":\"uint256\"}],\"name\":\"ReliefPoolCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERIFICATION_MESSAGE_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"sourceDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"}],\"name\":\"_processCrossChainDonation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adminAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cctpMessageTransmitter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nullifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userIdentifier\",\"type\":\"uint256\"}],\"name\":\"checkPersonClaimedFromPool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nullifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userIdentifier\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"nationality\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"adminSignature\",\"type\":\"bytes\"}],\"name\":\"claimRelief\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nullifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userIdentifier\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"nationality\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"adminSignature\",\"type\":\"bytes\"}],\"name\":\"claimReliefToSelf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ReliefPools.DisasterTypeEnum\",\"name\":\"disasterType\",\"type\":\"uint8\"},{\"internalType\":\"enum ReliefPools.ClassificationEnum\",\"name\":\"classification\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"nationalityRequired\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"allocatedFundsPerPerson\",\"type\":\"uint256\"}],\"name\":\"createReliefPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"getBeneficiary\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nullifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userIdentifier\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct ReliefPools.Beneficiary\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"donor\",\"type\":\"address\"}],\"name\":\"getDonor\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isCrossChain\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"sourceDomain\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"internalType\":\"struct ReliefPools.Donor\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nullifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userIdentifier\",\"type\":\"uint256\"}],\"name\":\"getPersonClaimedPools\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"getReliefPool\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum ReliefPools.DisasterTypeEnum\",\"name\":\"disasterType\",\"type\":\"uint8\"},{\"internalType\":\"enum ReliefPools.ClassificationEnum\",\"name\":\"classification\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"nationalityRequired\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"allocatedFundsPerPerson\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBeneficiaries\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDonors\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmountClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmountDonated\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"internalType\":\"struct ReliefPools.ReliefPool\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalPools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"sourceDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"finalityThresholdExecuted\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"}],\"name\":\"handleReceiveFinalizedMessage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"sourceDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"finalityThresholdExecuted\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"}],\"name\":\"handleReceiveUnfinalizedMessage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"hasPersonClaimedFromPool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"personClaimedPools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolBeneficiaries\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nullifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userIdentifier\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolDonors\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isCrossChain\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"sourceDomain\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reliefPools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum ReliefPools.DisasterTypeEnum\",\"name\":\"disasterType\",\"type\":\"uint8\"},{\"internalType\":\"enum ReliefPools.ClassificationEnum\",\"name\":\"classification\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"nationalityRequired\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"allocatedFundsPerPerson\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBeneficiaries\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDonors\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmountClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmountDonated\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cctpMessageTransmitter\",\"type\":\"address\"}],\"name\":\"setCCTPMessageTransmitter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"togglePoolStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdcToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nullifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userIdentifier\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"nationality\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"adminSignature\",\"type\":\"bytes\"}],\"name\":\"verifyAdminSignature\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"_processCrossChainDonation(uint32,bytes32,bytes)\":{\"details\":\"Internal function to process cross-chain donation\",\"params\":{\"messageBody\":\"The raw bytes containing the burn message structure\",\"sender\":\"The sender of the message (as bytes32)\",\"sourceDomain\":\"The source domain of the message\"}},\"checkPersonClaimedFromPool(uint256,uint256,uint256)\":{\"details\":\"Check if person has claimed from a specific pool using userIdentifier\"},\"claimRelief(uint256,uint256,uint256,string,uint256,address,bytes)\":{\"details\":\"Claim relief funds with admin signature verification\"},\"claimReliefToSelf(uint256,uint256,uint256,string,uint256,bytes)\":{\"details\":\"Claim relief funds to the same address (convenience function)\"},\"createReliefPool(uint8,uint8,string,uint256)\":{\"details\":\"Create a new relief pool\"},\"donate(uint256,uint256,string)\":{\"details\":\"Make a direct donation to a specific relief pool (on Base network)\"},\"emergencyWithdraw(uint256)\":{\"details\":\"Emergency withdraw (only owner)\"},\"getBeneficiary(uint256,address)\":{\"details\":\"Get beneficiary information for a pool\"},\"getContractBalance()\":{\"details\":\"Get contract USDC balance\"},\"getDonor(uint256,address)\":{\"details\":\"Get donor information for a pool\"},\"getPersonClaimedPools(uint256,uint256)\":{\"details\":\"Get all pools a person has claimed from using userIdentifier\"},\"getReliefPool(uint256)\":{\"details\":\"Get relief pool information\"},\"getTotalPools()\":{\"details\":\"Get total number of pools\"},\"handleReceiveUnfinalizedMessage(uint32,bytes32,uint32,bytes)\":{\"details\":\"CCTP v2 hook function to handle cross-chain donations\",\"params\":{\"finalityThresholdExecuted\":\"The finality threshold at which the message was attested to\",\"messageBody\":\"The raw bytes of the message body containing poolId\",\"sender\":\"The sender of the message (as bytes32)\",\"sourceDomain\":\"The source domain of the message\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setCCTPMessageTransmitter(address)\":{\"details\":\"Set CCTP Message Transmitter address (only owner)\"},\"togglePoolStatus(uint256)\":{\"details\":\"Toggle pool active status\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"verifyAdminSignature(address,uint256,uint256,string,uint256,bytes)\":{\"details\":\"Verify admin signature for relief claim\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ReliefPools.sol\":\"ReliefPools\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-0.7/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"@openzeppelin/contracts-0.7/cryptography/ECDSA.sol\":{\"keccak256\":\"0x94c4719c16ffb96dd3cdc68f6fbf78105153018adbf382241821e8188e6a4bd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33390c907a31dd8961949b0fa1b9557781c81024231f607f6f97b203746ebf60\",\"dweb:/ipfs/QmSdRfWx8tsa2Phm23qtNGTDUek2BphzwyxuqKf3AEszL9\"]},\"@openzeppelin/contracts-0.7/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts-0.7/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts-0.7/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"@openzeppelin/contracts-0.7/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"@openzeppelin/contracts-0.7/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"contracts/BurnMessage.sol\":{\"keccak256\":\"0x40cf202924a977c7212a57b78f6d9d53f3c105ed4af4cd56faeface8cb6d29c0\",\"urls\":[\"bzz-raw://3a6d819b5e6f0f2b5de115e58c28cb545a2c53c5ee747d72bb2465454b68a0bc\",\"dweb:/ipfs/QmS4cBTLz38t93PexrsA8DPXikig1EoRoABQVBsrFVZmcu\"]},\"contracts/BurnMessageV2.sol\":{\"keccak256\":\"0x58e5eca0dde7e8b5bccae7c3f703930a89411e7267b153dee4b3a8da552fe2c5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://79294f6b0369066e43d36bf37e4412739ebdd8889c4a74ae46af7dc8bd37599f\",\"dweb:/ipfs/QmNRAUzdG13gshkPTYakEybpyWCqyeajniDCCQnBDjNwbV\"]},\"contracts/ReliefPools.sol\":{\"keccak256\":\"0xdae2a86c189ff4536df7dc81ded4bce6c4880902b903b3c75d5d89d2e864e092\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5e6cca95a790e5c081570f210ec9fde448e8d0461002f3bb09469a061cff43da\",\"dweb:/ipfs/QmY5GLDeFRVYUNbwh9i8ccnBfMEaMQwrePHBPrAzJxL1iS\"]},\"contracts/TypedMemView.sol\":{\"keccak256\":\"0xb095aeb02f2ed3514908f9e38c5dff5cb19fdc67ca1bf2a2ff564b776221f676\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6eec64cc71363465b91eb896e9ace7c7431de04105cedc554c4d72f1c1a44cee\",\"dweb:/ipfs/QmQzXYyGnaUtg3i1hJNvo7XnoejnXrSAds6g8YYY3hhZ1c\"]}},\"version\":1}"}},"contracts/TypedMemView.sol":{"TypedMemView":{"abi":[{"inputs":[],"name":"NULL","outputs":[{"internalType":"bytes29","name":"","type":"bytes29"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"6095610024600b82828239805160001a607314601757fe5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063f26be3fc146038575b600080fd5b603e6057565b6040805162ffffff199092168252519081900360200190f35b62ffffff198156fea2646970667358221220e46c93ef476a79de00530f72e67cd3ebf63809c06cf4b4303ec1d729c4aed5f564736f6c63430007060033","opcodes":"PUSH1 0x95 PUSH2 0x24 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x17 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF26BE3FC EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3E PUSH1 0x57 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH3 0xFFFFFF NOT SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH3 0xFFFFFF NOT DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 PUSH13 0x93EF476A79DE00530F72E67CD3 0xEB 0xF6 CODESIZE MULMOD 0xC0 PUSH13 0xF4B4303EC1D729C4AED5F56473 PUSH16 0x6C634300070600330000000000000000 ","sourceMap":"153:31242:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063f26be3fc146038575b600080fd5b603e6057565b6040805162ffffff199092168252519081900360200190f35b62ffffff198156fea2646970667358221220e46c93ef476a79de00530f72e67cd3ebf63809c06cf4b4303ec1d729c4aed5f564736f6c63430007060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF26BE3FC EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3E PUSH1 0x57 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH3 0xFFFFFF NOT SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH3 0xFFFFFF NOT DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 PUSH13 0x93EF476A79DE00530F72E67CD3 0xEB 0xF6 CODESIZE MULMOD 0xC0 PUSH13 0xF4B4303EC1D729C4AED5F56473 PUSH16 0x6C634300070600330000000000000000 ","sourceMap":"153:31242:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;2700:94;;;:::i;:::-;;;;-1:-1:-1;;2700:94:10;;;;;;;;;;;;;;;-1:-1:-1;;2700:94:10;:::o"},"methodIdentifiers":{"NULL()":"f26be3fc"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NULL\",\"outputs\":[{\"internalType\":\"bytes29\",\"name\":\"\",\"type\":\"bytes29\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TypedMemView.sol\":\"TypedMemView\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-0.7/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"contracts/TypedMemView.sol\":{\"keccak256\":\"0xb095aeb02f2ed3514908f9e38c5dff5cb19fdc67ca1bf2a2ff564b776221f676\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6eec64cc71363465b91eb896e9ace7c7431de04105cedc554c4d72f1c1a44cee\",\"dweb:/ipfs/QmQzXYyGnaUtg3i1hJNvo7XnoejnXrSAds6g8YYY3hhZ1c\"]}},\"version\":1}"}}}}}