/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IMessageHandlerV2,
  IMessageHandlerV2Interface,
} from "../../../contracts/ReliefPools.sol/IMessageHandlerV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "sourceDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "sender",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "finalityThresholdExecuted",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "messageBody",
        type: "bytes",
      },
    ],
    name: "handleReceiveFinalizedMessage",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "sourceDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "sender",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "finalityThresholdExecuted",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "messageBody",
        type: "bytes",
      },
    ],
    name: "handleReceiveUnfinalizedMessage",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IMessageHandlerV2__factory {
  static readonly abi = _abi;
  static createInterface(): IMessageHandlerV2Interface {
    return new Interface(_abi) as IMessageHandlerV2Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IMessageHandlerV2 {
    return new Contract(address, _abi, runner) as unknown as IMessageHandlerV2;
  }
}
