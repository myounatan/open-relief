/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  SelfVerificationRoot,
  SelfVerificationRootInterface,
} from "../../../../../@selfxyz/contracts/contracts/abstract/SelfVerificationRoot";

const _abi = [
  {
    inputs: [],
    name: "InvalidDataFormat",
    type: "error",
  },
  {
    inputs: [],
    name: "UnauthorizedCaller",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newScope",
        type: "uint256",
      },
    ],
    name: "ScopeUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "destinationChainId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "userIdentifier",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "userDefinedData",
        type: "bytes",
      },
    ],
    name: "getConfigId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "output",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onVerificationSuccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "scope",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "proofPayload",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "userContextData",
        type: "bytes",
      },
    ],
    name: "verifySelfProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class SelfVerificationRoot__factory {
  static readonly abi = _abi;
  static createInterface(): SelfVerificationRootInterface {
    return new Interface(_abi) as SelfVerificationRootInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SelfVerificationRoot {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SelfVerificationRoot;
  }
}
