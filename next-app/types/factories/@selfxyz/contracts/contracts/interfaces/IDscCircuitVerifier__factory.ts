/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IDscCircuitVerifier,
  IDscCircuitVerifierInterface,
} from "../../../../../@selfxyz/contracts/contracts/interfaces/IDscCircuitVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "pA",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "pB",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "pC",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "pubSignals",
        type: "uint256[2]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IDscCircuitVerifier__factory {
  static readonly abi = _abi;
  static createInterface(): IDscCircuitVerifierInterface {
    return new Interface(_abi) as IDscCircuitVerifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IDscCircuitVerifier {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IDscCircuitVerifier;
  }
}
