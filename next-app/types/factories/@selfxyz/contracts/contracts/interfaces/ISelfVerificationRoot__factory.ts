/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ISelfVerificationRoot,
  ISelfVerificationRootInterface,
} from "../../../../../@selfxyz/contracts/contracts/interfaces/ISelfVerificationRoot";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "output",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onVerificationSuccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "proofPayload",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "userContextData",
        type: "bytes",
      },
    ],
    name: "verifySelfProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ISelfVerificationRoot__factory {
  static readonly abi = _abi;
  static createInterface(): ISelfVerificationRootInterface {
    return new Interface(_abi) as ISelfVerificationRootInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ISelfVerificationRoot {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ISelfVerificationRoot;
  }
}
